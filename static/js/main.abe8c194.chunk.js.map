{"version":3,"sources":["components/collection/Collection.module.css","Base.module.css","components/word/Word.module.css","utils.js","store/actions/collectionAction.js","const.js","store/actions/wordAction.js","store/actions/index.js","store/actions/statisticAction.js","components/statistics/Statistics.jsx","components/word/AddWord.jsx","components/collection/AddCollection.jsx","components/collection/DeleteButton.jsx","components/collection/UpdateButton.jsx","components/collection/UpdateCollection.jsx","components/collection/SelectCollection.jsx","components/collection/ListCollection.jsx","components/word/UpdateWord.jsx","components/word/Word.jsx","components/dictionary/Dictionary.jsx","data/idioms.js","components/idiom/idiom.jsx","App.js","serviceWorker.js","store/reducers/index.js","store/reducers/statistic.js","store/reducers/word.js","store/reducers/collection.js","index.js","components/statistics/Statistics.module.css"],"names":["module","exports","getTodayWordCount","getTodayWords","length","getTotalWordCount","getWords","getCollectionWordCount","collectionId","getWordsByCollectionId","get","words","filter","w","todayDigit","getDateInDigit","word","date","getCollections","collections","addCollectionToLocalStorage","collection","storage","save","find","c","name","unshift","shiftDays","today","Date","setDate","getDate","month","getMonth","monthLeadingZero","dateLeadingZero","parseInt","getFullYear","updateWordDate","increase","foundWord","value","count","restoreFromFile","content","merge","mergeCollections","mergeWords","forEach","mc","found","map","mw","id","push","defaultCollection","mergeWordsToLocalStorage","JSON","parse","wordList","localStorage","setItem","stringify","storageStream","getItem","addCollection","type","payload","updateWord","action","deleteCollection","updateCollection","chooseCollection","increaseTotalWords","decreaseTotalWords","increaseTodayWords","decreaseTodayWords","increaseCollectionWords","decreaseCollectionWords","setCollectionWords","collectionWordCount","addWord","nanoid","deleteWord","highlightWord","Statistics","statistics","useSelector","state","currentCollection","dispatch","useDispatch","useEffect","className","styles","statWrapper","compactLine","totalwordCount","todayWordCount","fileAction","onClick","fileData","blob","Blob","url","URL","createObjectURL","link","document","createElement","download","href","click","saveToFile","verticalSeparate","htmlFor","accept","onChange","e","fileList","target","files","file","reader","FileReader","onload","result","readAsText","AddWord","useState","setWord","setCollection","onSubmit","preventDefault","trimedWord","trim","newWord","addWordToLocalStorage","placeholder","AddCollection","event","trimedName","newCollection","DeletionButton","title","window","confirm","position","findIndex","colleciontId","moveWordsFromCollectionToDefault","needDefault","deleteCollectionFromLocalStorage","role","aria-label","UpdateButton","setUpdateCollection","UpdateCollection","collenctionName","setCollectionName","handleSubmit","updatedCollection","i","updateCollectionToLocalStorage","onKeyDown","key","keyCode","onBlur","ListCollection","setCurrentCollection","setCollections","collectionState","dropdown","navDropdown","baseStyles","bigSapce","listContainer","UpdateWord","props","subtitle","selectCollection","setSelectCollection","closeModal","setModalOpen","isOpen","modalOpen","onAfterOpen","style","color","onRequestClose","ariaHideApp","modalContainer","contentLabel","size","aria-labelledby","centered","ref","_subtitle","inputUpdate","rightSubmit","pointButton","Word","setConfirm","again","setAgain","hightlight","useRef","wordContainer","wordText","rel","elements","getElementsByClassName","backgroundColor","current","Dictionary","setWords","setHighlightWord","dict","setDict","wordState","console","log","deleteWordFromLocalStorage","needToMoveCollection","updateWordToLocalStorage","handleSelectDict","src","idoms","idiom","meanging","usage","Idom","randomIdomIndex","Math","floor","random","setIdiom","App","Boolean","location","hostname","match","combineReducers","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","allReducers","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.abe8c194.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navDropdown\":\"Collection_navDropdown__3F60D\",\"listContainer\":\"Collection_listContainer__surgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bigSapce\":\"Base_bigSapce__35XjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wordContainer\":\"Word_wordContainer__14k8l\",\"wordText\":\"Word_wordText__2k8h7\",\"modalContainer\":\"Word_modalContainer__5yvrP\",\"inputUpdate\":\"Word_inputUpdate__13xMb\",\"rightSubmit\":\"Word_rightSubmit__3WOY8\",\"pointButton\":\"Word_pointButton__gTLhz\"};","export const getTodayWordCount = () => getTodayWords().length\n\nexport const getTotalWordCount = () => getWords().length\n\nexport const getCollectionWordCount = collectionId => getWordsByCollectionId(collectionId).length\n\nexport const getDefaultCollection = () => ({id: 'default', name: 'default'})\n\nexport const initStorage = () => addCollectionToLocalStorage(getDefaultCollection())\n\nexport const getWords = () => get().words\n\nexport const getWordsByCollectionId = collectionId =>\n  getWords().filter(w => w.collectionId === collectionId)\n\nexport const getTodayWords = () => {\n  const words = getWords()\n  const todayDigit = getDateInDigit()\n  const todayWords = words.filter(word => word.date <= todayDigit)\n  \n  return todayWords\n}\n\nexport const getCollections = () => get().collections\n\nexport const addWordToLocalStorage = word => {\n  const storage = get()\n  if (storage.words.length === 0) {\n    storage.words = [word]\n    save(storage)\n    return true\n  }\n\n  const found = storage.words.find(w => w.id === word.id)\n  if (!found) {\n    storage.words.unshift(word)\n    save(storage)\n    return true\n  }\n  return false\n}\n\nexport const deleteWordFromLocalStorage = word => {\n  const storage = get()\n  if (storage.words.length === 0) {\n    return\n  }\nconsole.log(word);\n\n  storage.words = storage.words.filter(w => w.id !== word.id)\n  save(storage)\n}\n\nexport const updateWordToLocalStorage = word => {\n  const storage = get()\n  const { words } = storage\n  const foundWord = words.find(w => w.id === word.id)\n  if (foundWord) {\n    foundWord.value = word.value\n    foundWord.collectionId = word.collectionId\n    save(storage)\n  }\n}\n\nexport const mergeWordsToLocalStorage = merge => {\n  if (!merge) {\n    return\n  }\n\n  const storage = get()\n  let { collections, words } = storage\n  let { collections: mergeCollections, words: mergeWords } = merge\n\n  // merge collection by name\n  if (mergeCollections && mergeCollections.length !== 0) {\n    if (collections.length !== 0) {\n      mergeCollections.forEach(mc => {\n        const found = collections.find(c => c.name === mc.name)\n        if (found) {\n          if (mergeWords && mergeWords.length !== 0) {\n            mergeWords = mergeWords.map(mw => {\n              if (mw.collectionId === mc.id) {\n                mw.collectionId = found.id\n              }\n              return mw\n            })\n          }\n        }\n        if (!found) {\n          collections.push(mc)\n        }\n      })\n    } else {\n      storage.collections = mergeCollections\n    }\n    // always set default collection at the last position:\n    const defaultCollection = storage.collections.find(c => c.name === 'default')\n    storage.collections = storage.collections.filter(c => c.name !== 'default')\n    storage.collections.push(defaultCollection)\n  }\n\n  // merge words\n  if (mergeWords && mergeWords.length !== 0) {\n    if (words.length !== 0) {\n      mergeWords.forEach(mw => {\n        const found = words.find(w => w.value === mw.value && w.collectionId === mw.collectionId)\n        if (!found) {\n          words.push(mw)\n        }\n      })\n    } else {\n      storage.words = mergeWords\n    }\n  }\n\n  save(storage)\n}\n\nexport const moveWordsFromCollectionToDefault = collection => {\n  const storage = get()\n  if (storage.collections.length === 0) {\n    storage.collections = [getDefaultCollection()]\n  }\n  const { words } = storage\n  if (words.length !== 0) {\n    words.forEach(w => {\n      if (w.collectionId === collection.id) {\n        w.collectionId = 'default'\n      }\n    })\n  }\n  // dedupe merged words:\n  storage.words = words.filter((word, position) => \n    words.findIndex(w => w.value === word.value && w.colleciontId === word.colleciontId) === position)\n\n  save(storage)\n}\n\nexport const addCollectionToLocalStorage = collection => {\n  let storage = get()\n  if (storage.collections.length === 0) {\n    storage.collections = [collection]\n    save(storage)\n    return true\n  }\n\n  const found = storage.collections.find(c => c.name === collection.name)\n  if (!found) {\n    storage.collections.unshift(collection)\n    save(storage)\n    return true\n  }\n  return false\n}\n\nexport const deleteCollectionFromLocalStorage = collection => {\n  let storage = get()\n  if (storage.collections.length === 0) {\n    return\n  }\n\n  let needDefault = false\n  storage.collections = storage.collections.filter(c => c.id !== collection.id)\n  if (storage.words.length !== 0) {\n    storage.words = storage.words.map(w => {\n      if (w.collectionId === collection.id) {\n        w.collectionId = 'default'\n        needDefault = true\n      }\n      return w\n    })\n  }\n\n  if (needDefault) {\n    const found = storage.collections.find(c => c.id === 'default')\n    if (!found) {\n      storage.collections.push(getDefaultCollection())\n    }\n  }\n  save(storage)\n}\n\nexport const updateCollectionToLocalStorage = collection => {\n  let storage = get()\n  if (storage.collections.length === 0) {\n    return\n  }\n  const { collections } = storage\n  let found = false\n  for (const i in collections) {\n    if (collections[i].id === collection.id) {\n       collections[i].name = collection.name;\n       found = true\n       break;\n    }\n  }\n\n  if (!found) {\n    return\n  }\n\n  save(storage)\n}\n\nexport const getCollectionsFromLocalStorage = () => {\n  const storage = get()\n  if (storage.collections.length === 0) {\n    return []\n  }\n\n  return storage.collections\n}\n\nexport const getDateInDigit = (shiftDays = 0) => {\n  const today = new Date()\n  if (shiftDays !== 0) {\n    today.setDate(today.getDate() + shiftDays)\n  }\n  const month = today.getMonth() + 1\n  const date = today.getDate()\n  let monthLeadingZero = `${month}`\n  let dateLeadingZero = `${date}`\n  if (month < 10) {\n    monthLeadingZero = `0${month}`\n  }\n  if (date < 10) {\n    dateLeadingZero = `0${date}`\n  }\n  return parseInt(`${today.getFullYear()}${monthLeadingZero}${dateLeadingZero}`, 10)\n}\n\nexport const updateWordDate = (word, increase) => {\n  const storage  = get()\n  const { words } = storage\n\n  if (words.length === 0) {\n    return\n  }\n\n  const foundWord = words.find(w => w.value === word.value)\n  foundWord.date = foundWord.count > 7 ? getDateInDigit(45) : getDateInDigit(foundWord.count)\n  if (foundWord) {\n    if (increase) {\n      if (foundWord.count <= 7) {\n        foundWord.count += 1\n      }\n    } else {\n      if (foundWord.count > 0) {\n        foundWord.count -= 1\n      }\n    }\n    save(storage)\n  }\n}\n\nexport const saveToFile = () => {\n  const fileData = JSON.stringify(get())\n  const blob = new Blob([fileData], {type: \"text/plain\"})\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.download = 'MyWords.json'\n  link.href = url\n  link.click()\n}\n\nexport const restoreFromFile = (content) => mergeWordsToLocalStorage(JSON.parse(content))\n\nexport function save(wordList) {\n  localStorage.setItem('Eng:Words', JSON.stringify(wordList))\n}\n\nexport function get() {\n  const storageStream = localStorage.getItem('Eng:Words')\n  if (!storageStream) {\n    return {words:[], collections:[]}\n  }\n\n  const storage = JSON.parse(storageStream)\n\n  if (!storage.words) {\n    storage.words = []\n  }\n  if (!storage.collections) {\n    storage.collections = []\n  }\n  return storage\n}","import {ADD_COLLECTION, DELETE_COLLECTION, UPDATE_COLLECTION, CHOOSE_COLLECTION } from '../../const'\n\nexport const addCollection = collection => ({\n  type: ADD_COLLECTION,\n  payload: {\n    id: collection.id,\n    name: collection.name,\n  }\n})\n\nexport const deleteCollection = collectionId => ({\n  type: DELETE_COLLECTION,\n  payload: {\n    id: collectionId\n  }\n})\n\nexport const updateCollection = collection => ({\n  type: UPDATE_COLLECTION,\n  payload: {\n    id: collection.id,\n    name: collection.name,\n  }\n})\n\nexport const chooseCollection = collection => ({\n  type: CHOOSE_COLLECTION,\n  payload: {\n    id: collection.id,\n    name: collection.name\n  }\n})","export const ADD_WORD = 'ADD_WORD'\nexport const DELETE_WORD = 'DELETE_WORD'\nexport const UPDATE_WORD = 'UPDATE_WORD'\nexport const HIGHLIGHT_WORD = 'HIGHLIGHT_WORD'\n\nexport const ADD_COLLECTION = 'ADD_COLLECTION'\nexport const DELETE_COLLECTION = 'DELETE_COLLECTION'\nexport const UPDATE_COLLECTION = 'UPDATE_COLLECTION'\nexport const CHOOSE_COLLECTION = 'CHOOSE_COLLECTION'\n\nexport const INCREASE_TODAY_WORD = 'INCREASE_TODAY_WORD'\nexport const DECREASE_TODAY_WORD = 'DECREASE_TODAY_WORD'\nexport const INCREASE_TOTAL_WORD = 'INCREASE_TOTAL_WORD'\nexport const DECREASE_TOTAL_WORD = 'DECREASE_TOTAL_WORD'\nexport const INCREASE_COLLECTION_WORD = 'INCREASE_COLLECTION_WORD'\nexport const DECREASE_COLLECTION_WORD = 'DECREASE_COLLECTION_WORD'\nexport const SET_COLLECTION_WORD = 'SET_COLLECTION_WORD'","import { nanoid } from 'nanoid'\nimport { getDateInDigit } from '../../utils'\nimport {ADD_WORD, DELETE_WORD, UPDATE_WORD, HIGHLIGHT_WORD } from '../../const'\n\nexport const addWord = word => ({\n  type: ADD_WORD,\n  payload: {\n    id: nanoid(),\n    collectionId: word.collectionId,\n    value: word.value,\n    count: 0,\n    date: getDateInDigit()\n  }\n})\n\nexport const deleteWord = word => ({\n  type: DELETE_WORD,\n  payload: word\n})\n\nexport const updateWord = word => ({\n  type: UPDATE_WORD,\n  payload: word\n})\n\nexport const highlightWord = word => ({\n  type: HIGHLIGHT_WORD,\n  payload: word\n})","import {addCollection, deleteCollection, updateCollection, chooseCollection} from './collectionAction'\nimport {increaseTotalWords, decreaseTotalWords, increaseTodayWords, decreaseTodayWords, increaseCollectionWords, decreaseCollectionWords, setCollectionWords } from './statisticAction'\nimport {addWord, deleteWord, updateWord, highlightWord} from './wordAction'\n\nconst action = {\n  addCollection, deleteCollection, updateCollection, chooseCollection,\n  increaseTotalWords, decreaseTotalWords, increaseTodayWords, decreaseTodayWords, increaseCollectionWords, decreaseCollectionWords, setCollectionWords,\n  addWord, deleteWord, updateWord, highlightWord\n}\n\nexport default action","import {\n  INCREASE_TODAY_WORD,\n  DECREASE_TODAY_WORD,\n  INCREASE_TOTAL_WORD,\n  DECREASE_TOTAL_WORD,\n  INCREASE_COLLECTION_WORD,\n  DECREASE_COLLECTION_WORD,\n  SET_COLLECTION_WORD } from '../../const'\n\nexport const increaseTotalWords = () => ({\n  type: INCREASE_TOTAL_WORD,\n})\n\nexport const decreaseTotalWords = () => ({\n  type: DECREASE_TOTAL_WORD,\n})\n\nexport const increaseTodayWords = () => ({\n  type: INCREASE_TODAY_WORD,\n})\n\nexport const decreaseTodayWords = () => ({\n  type: DECREASE_TODAY_WORD,\n})\n\nexport const increaseCollectionWords = () => ({\n  type: INCREASE_COLLECTION_WORD,\n})\n\nexport const decreaseCollectionWords = () => ({\n  type: DECREASE_COLLECTION_WORD,\n})\n\nexport const setCollectionWords = (collectionWordCount) => ({\n  type: SET_COLLECTION_WORD,\n  payload: collectionWordCount\n})","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getCollectionWordCount, restoreFromFile, saveToFile } from '../../utils';\nimport styles from './Statistics.module.css'\nimport action from '../../store/actions'\n\nexport default function Statistics() {\n  const statistics = useSelector(state => state.statistics)\n  const currentCollection = useSelector(state => state.currentCollection)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const collectionWordCount = getCollectionWordCount(currentCollection.id)\n    dispatch(action.setCollectionWords(collectionWordCount))\n  }, [currentCollection, dispatch])\n\n  const handleSave = () => saveToFile()\n  const handleRestore = e => {\n    const fileList = e.target.files\n    if (fileList.length > 0) {\n      const file = fileList[0]\n      const reader = new FileReader();\n      reader.onload = (function(reader)\n      {\n          return function()\n          {\n              const content = reader.result\n              restoreFromFile(content)\n          }\n      })(reader);\n\n      reader.readAsText(file)\n    }\n  }\n\n  return (\n    <>\n      <div className={styles.statWrapper}>\n        <p className={styles.compactLine}>Total Words: <strong> {statistics.totalwordCount || '⏰'}</strong></p>\n        <p className={styles.compactLine}>Collection Words: <strong>{statistics.collectionWordCount || '⏰'}</strong></p>\n        <p className={styles.compactLine}>Today Words: <strong> {statistics.todayWordCount || '⏰'}</strong></p>\n        <div className={styles.fileAction}>\n          <button onClick={handleSave}>Download My Words</button>\n          <div className={styles.verticalSeparate}></div>\n          <form>\n            <label htmlFor=\"restoreFromFile\"><strong>Apply your Wrods:</strong></label>\n            <input type='file' id=\"restoreFromFile\" accept=\".json\" onChange={handleRestore}></input> \n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { nanoid } from 'nanoid'\nimport action from '../../store/actions'\nimport { addWordToLocalStorage, getDateInDigit, getDefaultCollection } from '../../utils'\n\nexport default function AddWord() {\n  const [word, setWord] = useState('')\n  const [collection, setCollection] = useState(getDefaultCollection())\n  const currentCollection = useSelector(state => state.currentCollection)\n  const dispatch = useDispatch()\n\n  const handleChange = e => {\n    setWord(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (word) {\n      const trimedWord = word.trim()\n      if (trimedWord.length > 0) {\n        const newWord = {\n          id: nanoid(),\n          collectionId: collection.id,\n          value: trimedWord,\n          count: 0,\n          date: getDateInDigit()\n        }\n        const added = addWordToLocalStorage(newWord)\n        if (added) {\n          dispatch(action.addWord(newWord))\n          dispatch(action.increaseTotalWords())\n          dispatch(action.increaseTodayWords())\n          dispatch(action.increaseCollectionWords())\n        }\n      }\n    }\n    setWord('')\n  }\n\n  useEffect(() => {\n    setCollection(currentCollection)\n  }, [currentCollection])\n\n  return (\n    <div className=\"bigSpace\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"addWord\">Add new word:</label>\n        <input className=\"input-text\" type=\"text\" id=\"addWord\" value={word} onChange={handleChange} placeholder=\"Add word\"/>\n        <input className=\"round-button\" type=\"submit\" value=\"➕\"/>\n      </form>\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addCollection } from '../../store/actions/collectionAction'\nimport { addCollectionToLocalStorage } from '../../utils'\nimport { nanoid } from 'nanoid'\n\n export default function AddCollection() {\n  const [collection, setCollection] = useState('')\n  const dispatch = useDispatch()\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    if (collection) {\n      const trimedName = collection.trim()\n      if (trimedName.length > 0) {        \n        const newCollection = {\n          id: nanoid(),\n          name: trimedName\n        }\n        addCollectionToLocalStorage(newCollection)\n        dispatch(addCollection(newCollection))\n      }\n    }\n    setCollection('')\n  }\n\n  function handleChange(event) {\n    setCollection(event.target.value)\n  }\n\n  return (\n    <div className=\"bigSpace\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"newCollection\">Add new collection:</label>\n        <input className=\"input-text\" type=\"text\" id=\"newCollection\" value={collection} onChange={handleChange} placeholder=\"Add collection\"/>\n        <input className=\"round-button\" type=\"submit\" value=\"➕\"/>\n      </form>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { deleteCollectionFromLocalStorage, moveWordsFromCollectionToDefault } from '../../utils'\nimport action from '../../store/actions'\n\nexport default function DeletionButton({collection}) {\n  const dispatch = useDispatch()\n\n  function deleteCollection() {\n    if (collection.name === 'default') {\n      window.confirm('⏹ You can\\'t remove default collction')\n    } else {\n      if (window.confirm(`⚠️ Once the ${collection.name} collection has been removed, the words underneath will be moved into default collection`)) {\n        moveWordsFromCollectionToDefault(collection)\n        deleteCollectionFromLocalStorage(collection)\n        dispatch(action.deleteCollection(collection.id))\n      }\n    }\n  }\n\n  return <button title=\"👆Click to delete collection\" onClick={deleteCollection}><span role=\"img\" aria-label=\"trash bin\">🗑</span></button>\n}","import React from 'react'\n\nexport default function UpdateButton({collection, setUpdateCollection}) {\n\n  function updateCollection() {\n    setUpdateCollection(collection)\n  }\n\n  return <button title=\"👆Click to change collection name\" onClick={updateCollection}><span role=\"img\" aria-label=\"gear\">✍️</span></button>\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport action from '../../store/actions';\nimport { updateCollectionToLocalStorage } from '../../utils';\n\nexport default function UpdateCollection({collection, setUpdateCollection}) {\n  const [collenctionName, setCollectionName] = useState(collection.name)\n  const dispatch = useDispatch()\n\n  function handleChange(event) {\n    setCollectionName(event.target.value)\n  }\n\n  function onKeyDown(event) {\n    if (event.key === 'Enter' || event.keyCode === 13) {\n      handleSubmit(event)\n    }\n  }\n\n  function onBlur(event) {\n    handleSubmit(event)\n  }\n\n  function handleSubmit(event) {\n    const updatedCollection = {id: collection.id, name: event.target.value}\n    setUpdateCollection({})\n    updateCollectionToLocalStorage(updatedCollection)\n    dispatch(action.updateCollection(updatedCollection))\n  }\n\n  return <input type=\"text\" value={collenctionName} title=\"👉Press enter to confirm👈🏿\" onChange={handleChange} onKeyDown={onKeyDown} onBlur={onBlur}></input>\n}","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport action from '../../store/actions'\nimport UpdateCollection from './UpdateCollection';\n\nexport default function ListCollection({collection, updateCollection, setUpdateCollection, setCurrentCollection}) {\n  const dispatch = useDispatch()\n\n  function selectCollection() {\n    setCurrentCollection(collection.name)\n    dispatch(action.chooseCollection(collection))\n  }\n\n  return (\n    <>\n    {collection.id === updateCollection.id ? \n      <UpdateCollection collection={collection} setUpdateCollection={setUpdateCollection}/> : \n      <div onClick={selectCollection}>{collection.name}</div>}\n    </>\n  )\n\n}","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport className from 'classnames'\nimport styles from './Collection.module.css'\nimport baseStyles from '../../Base.module.css'\nimport { getCollections } from '../../utils'\nimport DeleteButton from './DeleteButton'\nimport Updatebutton from './UpdateButton'\nimport SelectCollection from './SelectCollection'\n\nexport default function ListCollection() {\n  const [collections, setCollections] = useState([])\n  const [currentCollection, setCurrentCollection] = useState('default')\n  const [updateCollection, setUpdateCollection] = useState({})\n  const collectionState = useSelector(state => state.collection)\n\n  useEffect(() => { \n    const collections = getCollections()\n    const dropdown = collections.filter(c => c.name !== currentCollection)\n    setCollections(dropdown)\n  }, [collectionState, currentCollection])\n\n  return (\n    <div className={className(styles.navDropdown, baseStyles.bigSapce)}>\n      <nav id=\"choose-collection\" role=\"navigation\">\n        <ul>\n          <li>Current Collection: <b>{currentCollection}</b>\n            <ul>\n              {collections.length > 0 ? collections.map(c => \n                <li className={styles.listContainer} key={c.id}>\n                  <SelectCollection collection={c} updateCollection={updateCollection} setUpdateCollection={setUpdateCollection} setCurrentCollection={setCurrentCollection}/>\n                  <Updatebutton collection={c} setUpdateCollection={setUpdateCollection}/>\n                  <DeleteButton collection={c}/>\n                </li>\n              ) : <li>Add your collection   </li>}              \n            </ul>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateWord } from '../../store/actions/wordAction'\nimport className from 'classnames'\nimport { getCollections, getDefaultCollection } from '../../utils'\nimport styles from './Word.module.css';\n\nconst UpdateWord = (props) => {\n  var subtitle\n  const dispatch = useDispatch()\n  const [word, setWord] = useState(props.word.value)\n  const [collections, setCollections] = useState([getDefaultCollection()])\n  const [selectCollection, setSelectCollection] = useState(props.word.collectionId)\n  const collectionState = useSelector(state => state.collection)\n\n  useEffect(() => {\n    setCollections(getCollections())\n  }, [collectionState])\n \n  const afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00'\n  }\n \n  const closeModal = () => {\n    props.setModalOpen(false)\n  }\n\n  const handleChange = e => {\n    setWord(e.target.value)\n  }\n\n  const handleSelectCollection = e => {\n    setSelectCollection(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (e.target[0].value) {\n      const trimedWord = e.target[0].value.trim()\n      if (trimedWord) {\n        dispatch(updateWord({\n          id: props.word.id,\n          collectionId: e.target[1].value,\n          value: trimedWord,\n          count: props.word.count,\n          date: props.word.date\n        }))\n      }\n    }\n    closeModal()\n  }\n\n  return (\n    <Modal\n      isOpen={props.modalOpen}\n      onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      ariaHideApp={false}\n      className={styles.modalContainer}\n      contentLabel=\"Update Word\"\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <h2 ref={_subtitle => (subtitle = _subtitle)}>Edit your word:</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"updateWord\">Original Word <span role=\"img\" aria-label=\"writing hand\">✍️</span>:</label>\n        <input className={styles.inputUpdate} type=\"text\" id=\"updateWord\" value={word} onChange={handleChange}/>\n        <select name=\"collections\" id=\"collections\" onChange={handleSelectCollection} value={selectCollection}>\n          {collections && collections.length > 0 && collections.map(c => <option key={c.id} value={c.id}>{c.name}</option>)}\n        </select>\n        <input className={className(styles.rightSubmit, styles.pointButton)} type=\"submit\" value=\"Update\"/>\n      </form>\n    </Modal>\n  )\n}\n\nexport default UpdateWord","import React, { useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport action from '../../store/actions'\nimport { updateWordDate } from '../../utils'\nimport UpdateWord from './UpdateWord'\nimport styles from './Word.module.css'\n\nexport default function Word({ word }) {\n  const dispatch = useDispatch()\n  const [confirm, setConfirm] = useState('🎯')\n  const [again, setAgain] = useState('⏰')\n  const [modalOpen, setModalOpen] = useState(false)\n\n  const hightlight = useRef('');\n\n  const handleConfirm = () => {\n    if (confirm !== '👍') {\n      setConfirm('👍')\n      setAgain('⏰')\n      updateWordDate(word, true)\n    }\n  }\n\n  const handleAgain = () => {\n    if (again !== '🛑') {\n      setAgain('🛑')\n      setConfirm('🎯')\n      updateWordDate(word, false)\n    }\n  }\n\n  const handleDelete = () => {\n    if (window.confirm(`⚠️ Are you sure you want to delete this word -> ${word.value}`)) {\n      dispatch(action.deleteWord(word))\n      dispatch(action.decreaseTotalWords())\n      dispatch(action.decreaseTodayWords())\n      dispatch(action.decreaseCollectionWords())\n    }\n  }\n\n  const handleHighlightWord = () => {\n    dispatch(action.highlightWord(word))\n    const elements = document.getElementsByClassName(styles.wordText)\n    for(const element of elements) {\n      element.style.backgroundColor = \"\"\n    }\n    hightlight.current.style.backgroundColor = \"yellow\"\n  }\n\n  const openModal = () => {\n    setModalOpen(true)\n  }\n\n  return (\n    <div className={styles.wordContainer}>\n      <div className={styles.wordText} name={word.value} ref={hightlight} title=\"🌏 Click the word to open the meaning by Google in new tab\">\n        <a href={`https://www.google.com/search?q=${word.value}+definition`} target=\"_blank\" rel=\"noopener noreferrer\">{word.value}</a>\n      </div>\n      <div>\n        <button onClick={handleHighlightWord} title=\"📓 Show meaning in the dictionary\"><span role=\"img\" aria-label=\"red textbook\">📕</span></button>\n        <button onClick={handleConfirm} title=\"🧠 Click on it if you can know the meaning and it won't show after you click 7 times on another day\"><span role=\"img\" aria-label=\"thumbs up\">{confirm}</span></button>\n        <button onClick={handleAgain} title=\"⏳ Click on it if you don't know the meaning and the word will still stay in the list\"><span role=\"img\" aria-label=\"thinking face\">{again}</span></button>\n        <button onClick={openModal} title=\"🖋 Modify the word\"><span role=\"img\" aria-label=\"gear\">✍️</span></button>\n        {modalOpen && <UpdateWord word={word} modalOpen={modalOpen} setModalOpen={setModalOpen}/>}\n        <button onClick={handleDelete} title=\"⚠️ Remove the word from the list\"><span role=\"img\" aria-label=\"trash bin\">🗑</span></button>\n      </div>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { getWordsByCollectionId, deleteWordFromLocalStorage, updateWordToLocalStorage } from '../../utils'\nimport {ADD_WORD, DELETE_WORD, UPDATE_WORD, HIGHLIGHT_WORD, DELETE_COLLECTION} from '../../const'\nimport Word from '../word/Word';\n\nconst Dictionary = () => {\n  const [words, setWords] = useState([])\n  const [highlightWord, setHighlightWord] = useState()\n  const [dict, setDict] = useState('Merriam')\n  const wordState = useSelector(state => state.word)\n  const collectionState = useSelector(state => state.collection)\n  const currentCollection = useSelector(state => state.currentCollection)\n\n  useEffect(() => {\n    setWords(getWordsByCollectionId(currentCollection.id))\n  }, [currentCollection])\n\n  useEffect(() => {\n    if (collectionState.type === DELETE_COLLECTION && currentCollection.id === 'default') {\n      setWords(getWordsByCollectionId(currentCollection.id))\n    }\n  }, [collectionState, currentCollection.id])\n\n  useEffect(() => {\n    if (wordState.type === ADD_WORD) {\n      setWords(words => {\n        const dupWord = words.filter(w => w.value === wordState.word.value)\n        if (dupWord.length === 0) {\n          return [wordState.word, ...words]\n        }\n        return words\n      })\n    }\n\n    if (wordState.type === DELETE_WORD) {\n      deleteWordFromLocalStorage(wordState.word)\n      setWords(words => words.filter(w => w.value !== wordState.word.value))\n    }\n\n    if (wordState.type === UPDATE_WORD) {\n      if (wordState.word && wordState.word.value) {\n        setWords(words => {\n          const foundWord = words.find(w => w.id === wordState.word.id)\n          let needToMoveCollection = false\n          if (foundWord) {\n            foundWord.value = wordState.word.value\n            if (foundWord.collectionId !== wordState.word.collectionId) {\n              needToMoveCollection = true\n            }\n          }\n          if (needToMoveCollection) {\n            return words.filter(w => w.id !== wordState.word.id)\n          }\n          return [...words]\n        })\n        updateWordToLocalStorage(wordState.word)\n      }\n    }\n\n    if (wordState.type === HIGHLIGHT_WORD) {\n      setHighlightWord(wordState.word.value)\n    }\n    \n  }, [wordState])\n\n  const handleSelectDict = e => {\n    setDict(e.target.value)\n  }\n\n  return (\n    <div className=\"scroll-then-fix\">\n      <div className=\"content-wrapper\">\n        <ul className=\"word-list\">\n          {words && words.length === 0 ?\n          <p><span role=\"img\" aria-label=\"grinning\">😅</span> There is no word in this collection: <em>{currentCollection.name}</em></p> :\n          words.map(word => word.value && <li key={word.id}><Word word={word}/></li>)}\n        </ul>\n        <div>\n          <div>\n            <button className=\"square-button\" value=\"Merriam\" id=\"Merriam\" onClick={handleSelectDict}>Merriam</button>\n            <button className=\"square-button\" value=\"Dictionary\" id=\"Dictionary\" onClick={handleSelectDict}>Dictionary</button>\n            <button className=\"square-button\" value=\"Cambridge\" id=\"Cambridge\" onClick={handleSelectDict}>Cambridge</button>\n            <button className=\"square-button\" value=\"Synonyms\" id=\"Synonyms\" onClick={handleSelectDict}>Synonyms</button>\n          </div>\n          {dict === 'Merriam' && <iframe src={`https://www.merriam-webster.com/dictionary/${highlightWord}`} title=\"Merriam\"></iframe>}\n          {dict === 'Dictionary' && <iframe src={`https://www.dictionary.com/browse/${highlightWord}`} title=\"Dictionary\"></iframe>}\n          {dict === 'Cambridge' && <iframe src={`https://dictionary.cambridge.org/dictionary/english/${highlightWord}`} title=\"Cambridge\"></iframe>}\n          {dict === 'Synonyms' && <iframe src={`https://www.wordhippo.com/what-is/another-word-for/${highlightWord}.html`} title=\"Synonyms\"></iframe>}\n          {dict === 'Antonyms' && <iframe src={`https://www.wordhippo.com/what-is/the-opposite-of/${highlightWord}.html`} title=\"Antonyms\"></iframe>}\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Dictionary","const idoms = [\n  { idiom: \"A blessing in disguise\", meanging: \"a good thing that seemed bad at first\", usage: \"as part of a sentence\"},\n  { idiom: \"A dime a dozen\", meanging: \"Something common\", usage: \"as part of a sentence\"},\n  { idiom: \"Beat around the bush\", meanging: \"Avoid saying what you mean, usually because it is uncomfortable\", usage: \"as part of a sentence\"},\n  { idiom: \"Better late than never\", meanging: \"Better to arrive late than not to come at all\", usage: \"by itself\"},\n  { idiom: \"Bite the bullet\", meanging: \"To get something over with because it is inevitable\", usage: \"as part of a sentence\"},\n  { idiom: \"Break a leg\", meanging: \"Good luck\", usage: \"by itself\"},\n  { idiom: \"Call it a day\", meanging: \"Stop working on something\", usage: \"as part of a sentence\"},\n  { idiom: \"Cut somebody some slack\", meanging: \"Don't be so critical\", usage: \"as part of a sentence\"},\n  { idiom: \"Cutting corners\", meanging: \"Doing something poorly in order to save time or money\", usage: \"as part of a sentence\"},\n  { idiom: \"Easy does it\", meanging: \"Slow down\", usage: \"by itself\"},\n  { idiom: \"Get out of hand\", meanging: \"Get out of control\", usage: \"as part of a sentence\"},\n  { idiom: \"Get something out of your system\", meanging: \"Do the thing you've been wanting to do so you can move on\", usage: \"as part of a sentence\"},\n  { idiom: \"Get your act together\", meanging: \"Work better or leave\", usage: \"by itself\"},\n  { idiom: \"Give someone the benefit of the doubt\", meanging: \"Trust what someone says\", usage: \"as part of a sentence\"},\n  { idiom: \"Go back to the drawing board\", meanging: \"Start over\", usage: \"as part of a sentence\"},\n  { idiom: \"Hang in there\", meanging: \"Don't give up\", usage: \"by itself\"},\n  { idiom: \"Hit the sack\", meanging: \"Go to sleep\", usage: \"as part of a sentence\"},\n  { idiom: \"It's not rocket science\", meanging: \"It's not complicated\", usage: \"by itself\"},\n  { idiom: \"Let someone off the hook\", meanging: \"To not hold someone responsible for something\", usage: \"as part of a sentence\"},\n  { idiom: \"Make a long story short\", meanging: \"Tell something briefly\", usage: \"as part of a sentence\"},\n  { idiom: \"Miss the boat\", meanging: \"It's too late\", usage: \"as part of a sentence\"},\n  { idiom: \"No pain, no gain\", meanging: \"You have to work for what you want\", usage: \"by itself\"},\n  { idiom: \"On the ball\", meanging: \"Doing a good job\", usage: \"as part of a sentence\"},\n  { idiom: \"Pull someone's leg\", meanging: \"To joke with someone\", usage: \"as part of a sentence\"},\n  { idiom: \"Pull yourself together\", meanging: \"Calm down\", usage: \"by itself\"},\n  { idiom: \"So far so good\", meanging: \"Things are going well so far\", usage: \"by itself\"},\n  { idiom: \"Speak of the devil\", meanging: \"The person we were just talking about showed up!\", usage: \"by itself\"},\n  { idiom: \"That's the last straw\", meanging: \"My patience has run out\", usage: \"by itself\"},\n  { idiom: \"The best of both worlds\", meanging: \"An ideal situation\", usage: \"as part of a sentence\"},\n  { idiom: \"Time flies when you're having fun\", meanging: \"You don't notice how long something lasts when it's fun\", usage: \"by itself\"},\n  { idiom: \"To get bent out of shape\", meanging: \"To get upset\", usage: \"as part of a sentence\"},\n  { idiom: \"To make matters worse\", meanging: \"Make a problem worse\", usage: \"as part of a sentence\"},\n  { idiom: \"Under the weather\", meanging: \"Sick\", usage: \"as part of a sentence\"},\n  { idiom: \"We'll cross that bridge when we come to it\", meanging: \"Let's not talk about that problem right now\", usage: \"by itself\"},\n  { idiom: \"Wrap your head around something\", meanging: \"Understand something complicated\", usage: \"as part of a sentence\"},\n  { idiom: \"You can say that again\", meanging: \"That's true, I agree\", usage: \"by itself\"},\n  { idiom: \"Your guess is as good as mine\", meanging: \"I have no idea\", usage: \"by itself\"},\n  { idiom: \"A bird in the hand is worth two in the bush\", meanging: \"What you have is worth more than what you might have later\", usage: \"by itself\"},\n  { idiom: \"A penny for your thoughts\", meanging: \"Tell me what you're thinking\", usage: \"by itself\"},\n  { idiom: \"A penny saved is a penny earned\", meanging: \"Money you save today you can spend later\", usage: \"by itself\"},\n  { idiom: \"A perfect storm\", meanging: \"the worst possible situation\", usage: \"as part of a sentence\"},\n  { idiom: \"A picture is worth 1000 words\", meanging: \"Better to show than tell\", usage: \"by itself\"},\n  { idiom: \"Actions speak louder than words\", meanging: \"Believe what people do and not what they say\", usage: \"by itself\"},\n  { idiom: \"Add insult to injury\", meanging: \"To make a bad situation worse\", usage: \"as part of a sentence\"},\n  { idiom: \"Barking up the wrong tree\", meanging: \"To be mistaken, to be looking for solutions in the wrong place\", usage: \"as part of a sentence\"},\n  { idiom: \"Birds of a feather flock together\", meanging: \"People who are alike are often friends (usually used negatively)\", usage: \"by itself\"},\n  { idiom: \"Bite off more than you can chew\", meanging: \"Take on a project that you cannot finish\", usage: \"as part of a sentence\"},\n  { idiom: \"Break the ice\", meanging: \"Make people feel more comfortable\", usage: \"as part of a sentence\"},\n  { idiom: \"By the skin of your teeth\", meanging: \"Just barely\", usage: \"as part of a sentence\"},\n  { idiom: \"Comparing apples to oranges\", meanging: \"Comparing two things that cannot be compared\", usage: \"as part of a sentence\"},\n  { idiom: \"Costs an arm and a leg\", meanging: \"Very expensive\", usage: \"as part of a sentence\"},\n  { idiom: \"Do something at the drop of a hat\", meanging: \"Do something without having planned beforehand\", usage: \"as part of a sentence\"},\n  { idiom: \"Do unto others as you would have them do unto you\", meanging: \"Treat people fairly. Also known as \\\"The Golden Rule\\\"\", usage: \"by itself\"},\n  { idiom: \"Don't count your chickens before they hatch\", meanging: \"Don't count on something good happening until it's happened.\", usage: \"by itself\"},\n  { idiom: \"Don't cry over spilt milk\", meanging: \"There's no reason to complain about something that can't be fixed\", usage: \"by itself\"},\n  { idiom: \"Don't give up your day job\", meanging: \"You're not very good at this\", usage: \"by itself\"},\n  { idiom: \"Don't put all your eggs in one basket\", meanging: \"What you're doing is too risky\", usage: \"by itself\"},\n  { idiom: \"Every cloud has a silver lining\", meanging: \"Good things come after bad things\", usage: \"by itself\"},\n  { idiom: \"Get a taste of your own medicine\", meanging: \"Get treated the way you've been treating others (negative)\", usage: \"as part of a sentence\"},\n  { idiom: \"Give someone the cold shoulder\", meanging: \"Ignore someone\", usage: \"as part of a sentence\"},\n  { idiom: \"Go on a wild goose chase\", meanging: \"To do something pointless\", usage: \"as part of a sentence\"},\n  { idiom: \"Good things come to those who wait\", meanging: \"Be patient\", usage: \"by itself\"},\n  { idiom: \"He has bigger fish to fry\", meanging: \"He has bigger things to take care of than what we are talking about now\", usage: \"by itself\"},\n  { idiom: \"He's a chip off the old block\", meanging: \"The son is like the father\", usage: \"by itself\"},\n  { idiom: \"Hit the nail on the head\", meanging: \"Get something exactly right\", usage: \"by itself\"},\n  { idiom: \"Ignorance is bliss\", meanging: \"You're better off not knowing\", usage: \"by itself\"},\n  { idiom: \"It ain't over till the fat lady sings\", meanging: \"This isn't over yet\", usage: \"by itself\"},\n  { idiom: \"It takes one to know one\", meanging: \"You're just as bad as I am\", usage: \"by itself\"},\n  { idiom: \"It's a piece of cake\", meanging: \"It's easy\", usage: \"by itself\"},\n  { idiom: \"It's raining cats and dogs\", meanging: \"It's raining hard\", usage: \"by itself\"},\n  { idiom: \"Kill two birds with one stone\", meanging: \"Get two things done with a single action\", usage: \"by itself\"},\n  { idiom: \"Let the cat out of the bag\", meanging: \"Give away a secret\", usage: \"as part of a sentence\"},\n  { idiom: \"Live and learn\", meanging: \"I made a mistake\", usage: \"by itself\"},\n  { idiom: \"Look before you leap\", meanging: \"Take only calculated risks\", usage: \"by itself\"},\n  { idiom: \"On thin ice\", meanging: \"On probation. If you make another mistake, there will be trouble.\", usage: \"as part of a sentence\"},\n  { idiom: \"Once in a blue moon\", meanging: \"Rarely\", usage: \"as part of a sentence\"},\n  { idiom: \"Play devil's advocate\", meanging: \"To argue the opposite, just for the sake of argument\", usage: \"as part of a sentence\"},\n  { idiom: \"Put something on ice\", meanging: \"Put a projet on hold\", usage: \"as part of a sentence\"},\n  { idiom: \"Rain on someone's parade\", meanging: \"To spoil something\", usage: \"as part of a sentence\"},\n  { idiom: \"Saving for a rainy day\", meanging: \"Saving money for later\", usage: \"as part of a sentence\"},\n  { idiom: \"Slow and steady wins the race\", meanging: \"Reliability is more important than speed\", usage: \"by itself\"},\n  { idiom: \"Spill the beans\", meanging: \"Give away a secret\", usage: \"as part of a sentence\"},\n  { idiom: \"Take a rain check\", meanging: \"Postpone a plan\", usage: \"as part of a sentence\"},\n  { idiom: \"Take it with a grain of salt\", meanging: \"Don’t take it too seriously\", usage: \"as part of a sentence\"},\n  { idiom: \"The ball is in your court\", meanging: \"It's your decision\", usage: \"by itself\"},\n  { idiom: \"The best thing since sliced bread\", meanging: \"A really good invention\", usage: \"as part of a sentence\"},\n  { idiom: \"The devil is in the details\", meanging: \"It looks good from a distance, but when you look closer, there are problems\", usage: \"by itself\"},\n  { idiom: \"The early bird gets the worm\", meanging: \"The first people who arrive will get the best stuff\", usage: \"by itself\"},\n  { idiom: \"The elephant in the room\", meanging: \"The big issue, the problem people are avoiding\", usage: \"as part of a sentence\"},\n  { idiom: \"The whole nine yards\", meanging: \"Everything, all the way.\", usage: \"as part of a sentence\"},\n  { idiom: \"There are other fish in the sea\", meanging: \"It's ok to miss this opportunity. Others will arise.\", usage: \"by itself\"},\n  { idiom: \"There's a method to his madness\", meanging: \"He seems crazy but actually he's clever\", usage: \"by itself\"},\n  { idiom: \"There's no such thing as a free lunch\", meanging: \"Nothing is entirely free\", usage: \"by itself\"},\n  { idiom: \"Throw caution to the wind\", meanging: \"Take a risk\", usage: \"as part of a sentence\"},\n  { idiom: \"You can't have your cake and eat it too\", meanging: \"You can't have everything\", usage: \"by itself\"},\n  { idiom: \"You can't judge a book by its cover\", meanging: \"This person or thing may look bad, but it's good inside\", usage: \"by itself\"},\n  { idiom: \"A little learning is a dangerous thing\", meanging: \"People who don't understand something fully are dangerous\", usage: \"by itself\"},\n  { idiom: \"A snowball effect\", meanging: \"Events have momentum and build upon each other\", usage: \"as part of a sentence\"},\n  { idiom: \"A snowball's chance in hell\", meanging: \"No chance at all\", usage: \"as part of a sentence\"},\n  { idiom: \"A stitch in time saves nine\", meanging: \"Fix the problem now because it will get worse later\", usage: \"by itself\"},\n  { idiom: \"A storm in a teacup\", meanging: \"A big fuss about a small problem\", usage: \"as part of a sentence\"},\n  { idiom: \"An apple a day keeps the doctor away\", meanging: \"Apples are good for you\", usage: \"by itself\"},\n  { idiom: \"An ounce of prevention is worth a pound of cure\", meanging: \"You can prevent a problem with little effort. Fixing it later is harder.\", usage: \"by itself\"},\n  { idiom: \"As right as rain\", meanging: \"Perfect\", usage: \"as part of a sentence\"},\n  { idiom: \"Bolt from the blue\", meanging: \"Something that happened without warning\", usage: \"as part of a sentence\"},\n  { idiom: \"Burn bridges\", meanging: \"Destroy relationships\", usage: \"as part of a sentence\"},\n  { idiom: \"Calm before the storm\", meanging: \"Something bad is coming, but right now it's calm\", usage: \"as part of a sentence\"},\n  { idiom: \"Come rain or shine\", meanging: \"No matter what\", usage: \"as part of a sentence\"},\n  { idiom: \"Curiosity killed the cat\", meanging: \"Stop asking questions\", usage: \"by itself\"},\n  { idiom: \"Cut the mustard\", meanging: \"Do a good job\", usage: \"as part of a sentence\"},\n  { idiom: \"Don't beat a dead horse\", meanging: \"Move on, this subject is over\", usage: \"by itself\"},\n  { idiom: \"Every dog has his day\", meanging: \"Everyone gets a chance at least once\", usage: \"by itself\"},\n  { idiom: \"Familiarity breeds contempt\", meanging: \"The better you know someone the less you like him\", usage: \"by itself\"},\n  { idiom: \"Fit as a fiddle\", meanging: \"In good health\", usage: \"as part of a sentence\"},\n  { idiom: \"Fortune favours the bold\", meanging: \"Take risks\", usage: \"by itself\"},\n  { idiom: \"Get a second wind\", meanging: \"Have more energy after having been tired\", usage: \"as part of a sentence\"},\n  { idiom: \"Get wind of something\", meanging: \"Hear news of something secret\", usage: \"as part of a sentence\"},\n  { idiom: \"Go down in flames\", meanging: \"Fail spectacularly\", usage: \"as part of a sentence\"},\n  { idiom: \"Haste makes waste\", meanging: \"You'll make mistakes if you rush through something\", usage: \"by itself\"},\n  { idiom: \"Have your head in the clouds\", meanging: \"Not be concentrating\", usage: \"as part of a sentence\"},\n  { idiom: \"He who laughs last laughs loudest\", meanging: \"I'll get you back for what you did\", usage: \"by itself\"},\n  { idiom: \"Hear something straight from the horse's mouth\", meanging: \"Hear something from the person involved\", usage: \"as part of a sentence\"},\n  { idiom: \"He's not playing with a full deck\", meanging: \"He's dumb\", usage: \"by itself\"},\n  { idiom: \"He's off his rocker\", meanging: \"He's crazy\", usage: \"by itself\"},\n  { idiom: \"He's sitting on the fence\", meanging: \"He can't make up his mind\", usage: \"by itself\"},\n  { idiom: \"It is a poor workman who blames his tools\", meanging: \"If you can't do the job, don't blame it on others\", usage: \"by itself\"},\n  { idiom: \"It is always darkest before the dawn\", meanging: \"Things are going to get better\", usage: \"by itself\"},\n  { idiom: \"It takes two to tango\", meanging: \"One person alone isn't responsible. Both people are involved.\", usage: \"by itself\"},\n  { idiom: \"Jump on the bandwagon\", meanging: \"Follow a trend, do what everyone else is doing\", usage: \"as part of a sentence\"},\n  { idiom: \"Know which way the wind is blowing\", meanging: \"Understand the situation (usually negative)\", usage: \"as part of a sentence\"},\n  { idiom: \"Leave no stone unturned\", meanging: \"Look everywhere\", usage: \"as part of a sentence\"},\n  { idiom: \"Let sleeping dogs lie\", meanging: \"Stop discussing an issue\", usage: \"as part of a sentence\"},\n  { idiom: \"Like riding a bicycle\", meanging: \"Something you never forget how to do\", usage: \"as part of a sentence\"},\n  { idiom: \"Like two peas in a pod\", meanging: \"They're always together\", usage: \"as part of a sentence\"},\n  { idiom: \"Make hay while the sun shines\", meanging: \"Take advantage of a good situation\", usage: \"as part of a sentence\"},\n  { idiom: \"On cloud nine\", meanging: \"Very happy\", usage: \"as part of a sentence\"},\n  { idiom: \"Once bitten, twice shy\", meanging: \"You're more cautious when you've been hurt before\", usage: \"by itself\"},\n  { idiom: \"Out of the frying pan and into the fire\", meanging: \"Things are going from bad to worse\", usage: \"by itself\"},\n  { idiom: \"Run like the wind\", meanging: \"Run fast\", usage: \"as part of a sentence\"},\n  { idiom: \"Shape up or ship out\", meanging: \"Work better or leave\", usage: \"by itself\"},\n  { idiom: \"Snowed under\", meanging: \"Busy\", usage: \"as part of a sentence\"},\n  { idiom: \"That ship has sailed\", meanging: \"It's too late\", usage: \"by itself\"},\n  { idiom: \"The pot calling the kettle black\", meanging: \"Someone criticizing someone else he is just as bad\", usage: \"as part of a sentence\"},\n  { idiom: \"There are clouds on the horizon\", meanging: \"Trouble is coming\", usage: \"by itself\"},\n  { idiom: \"Those who live in glass houses shouldn't throw stones\", meanging: \"People who are morally questionable shouldn't criticize others\", usage: \"by itself\"},\n  { idiom: \"Through thick and thin\", meanging: \"In good times and in bad times\", usage: \"as part of a sentence\"},\n  { idiom: \"Time is money\", meanging: \"Work quickly\", usage: \"by itself\"},\n  { idiom: \"Waste not, want not\", meanging: \"Don't waste things and you'll always have enough\", usage: \"by itself\"},\n  { idiom: \"We see eye to eye\", meanging: \"We agree\", usage: \"by itself\"},\n  { idiom: \"Weather the storm\", meanging: \"Go through something difficult\", usage: \"as part of a sentence\"},\n  { idiom: \"Well begun is half done\", meanging: \"Getting a good start is important\", usage: \"by itself\"},\n  { idiom: \"When it rains it pours\", meanging: \"Everything is going wrong at once\", usage: \"by itself\"},\n  { idiom: \"You can catch more flies with honey than you can with vinegar\", meanging: \"You'll get what you want by being nice\", usage: \"by itself\"},\n  { idiom: \"You can lead a horse to water, but you can't make him drink\", meanging: \"You can't force someone to make the right decision\", usage: \"by itself\"},\n  { idiom: \"You can't make an omelet without breaking some eggs\", meanging: \"There's always a cost to doing something\", usage: \"by itself\"},\n]\n\nexport default idoms","import React, { useState } from 'react'\nimport idoms from '../../data/idioms'\n\nconst Idom = () => {\n  const randomIdomIndex = () => Math.floor(Math.random() * Math.floor(idoms.length))\n  const [idiom, setIdiom] = useState(idoms[randomIdomIndex()])\n\n  const handleNext = () => {\n    setIdiom(idoms[randomIdomIndex()])\n  }\n\n  return (\n    <div className=\"ribbon color\">\n      <button onClick={handleNext}>New Idiom</button>\n      <div>\n        <p className=\"left-text\">Idom: <span className=\"idiom-value\">{idiom.idiom}</span></p>\n        <p className=\"left-text\">Meaning: <span className=\"idiom-value\">{idiom.meanging}</span> 👈 used {idiom.usage}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Idom","import React from 'react'\nimport './App.css'\nimport Statistics from './components/statistics/Statistics'\nimport AddWord from './components/word/AddWord'\nimport AddCollection from './components/collection/AddCollection'\nimport ListCollection from './components/collection/ListCollection'\nimport Dictionary from './components/dictionary/Dictionary'\nimport Idom from './components/idiom/idiom'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Statistics />\n      <Idom />\n      <div className=\"item-container\">\n        <AddWord />\n        <AddCollection />\n        <ListCollection />\n      </div>\n      <Dictionary />\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux'\nimport statistics from './statistic'\nimport word from './word'\nimport { collection, currentCollection } from './collection'\n\nexport default combineReducers({\n  statistics,\n  word,\n  collection,\n  currentCollection\n})","import { getCollectionWordCount, getTodayWordCount, getTotalWordCount} from '../../utils'\nimport {\n  INCREASE_TODAY_WORD,\n  DECREASE_TODAY_WORD,\n  SET_COLLECTION_WORD,\n  INCREASE_TOTAL_WORD,\n  DECREASE_TOTAL_WORD,\n  INCREASE_COLLECTION_WORD,\n  DECREASE_COLLECTION_WORD } from '../../const'\n\nexport default function statistics (\n  state = {\n        collectionWordCount: getCollectionWordCount('default'),\n        todayWordCount: getTodayWordCount(),\n        totalwordCount: getTotalWordCount()},\n    action) {\n  switch(action.type) {\n    case INCREASE_COLLECTION_WORD:\n      return {\n        ...state,\n        collectionWordCount: state.collectionWordCount + 1\n      }\n    case DECREASE_COLLECTION_WORD:\n      return {\n        ...state,\n        collectionWordCount: state.collectionWordCount - 1\n      }\n    case SET_COLLECTION_WORD:\n        return {\n          ...state,\n          collectionWordCount: action.payload\n        } \n    case INCREASE_TODAY_WORD:\n      return {\n        ...state,\n        todayWordCount: state.todayWordCount + 1\n      }    \n    case DECREASE_TODAY_WORD:\n      return {\n        ...state,\n        todayWordCount: state.todayWordCount - 1\n      }    \n    case INCREASE_TOTAL_WORD:\n      return {\n        ...state,\n        totalwordCount: state.totalwordCount + 1\n      }    \n    case DECREASE_TOTAL_WORD:\n      return {\n        ...state,\n        totalwordCount: state.totalwordCount - 1\n      }\n      default:\n        return state\n  }\n}\n","import {ADD_WORD, DELETE_WORD, UPDATE_WORD, HIGHLIGHT_WORD} from '../../const'\n\nexport default function word(state = {type:'', word:{}}, action) {\n  switch(action.type) {\n    case ADD_WORD:\n      return {\n        type: action.type,\n        word: action.payload\n      }\n    case DELETE_WORD:\n      return {\n        type: action.type,\n        word: action.payload\n      }\n    case UPDATE_WORD:\n      return {\n        type: action.type,\n        word: action.payload\n      }\n    case HIGHLIGHT_WORD:\n      return {\n        type: action.type,\n        word: action.payload\n      }\n    default:\n      return state\n  }\n}","import {ADD_COLLECTION, DELETE_COLLECTION, UPDATE_COLLECTION, CHOOSE_COLLECTION} from '../../const'\nimport { getDefaultCollection } from '../../utils'\n\nexport function collection(state = {type:'', collection: getDefaultCollection()}, action) {\n  switch(action.type) {\n    case ADD_COLLECTION:\n      return {\n        type: action.type,\n        collection: action.payload\n      }\n    case DELETE_COLLECTION:\n      return {\n        type: action.type,\n        collection: action.payload\n      }\n    case UPDATE_COLLECTION:\n      return {\n        type: action.type,\n        collection: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport function currentCollection(state = getDefaultCollection(), action) {\n  switch(action.type) {\n    case CHOOSE_COLLECTION:\n      return action.payload\n    default:\n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport allReducers from './store/reducers';\nimport { initStorage } from './utils'\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\nconst store = createStore(allReducers, devTools)\n\ninitStorage()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statWrapper\":\"Statistics_statWrapper__2Ydx3\",\"compactLine\":\"Statistics_compactLine__24cO4\",\"fileAction\":\"Statistics_fileAction__2fSWL\",\"verticalSeparate\":\"Statistics_verticalSeparate__1Pmcf\"};"],"sourceRoot":""}