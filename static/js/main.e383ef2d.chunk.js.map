{"version":3,"sources":["Base.module.css","components/content/Content.module.css","components/word/Word.module.css","utils.js","store/actions/collectionAction.js","const.js","store/actions/index.js","store/actions/statisticAction.js","store/actions/wordAction.js","components/statistics/Statistics.jsx","components/word/AddWord.jsx","components/collection/AddCollection.jsx","components/collection/DeleteButton.jsx","components/collection/UpdateButton.jsx","components/collection/UpdateCollection.jsx","components/collection/SelectCollection.jsx","components/collection/ListCollection.jsx","components/word/UpdateWordModal.jsx","components/word/Word.jsx","components/word/MoveWordsModal.jsx","components/word/SelectAll.jsx","components/word/WordList.jsx","components/dictionary/Dictionary.jsx","components/content/Content.jsx","data/idioms.js","components/idiom/idiom.jsx","App.js","serviceWorker.js","store/reducers/index.js","store/reducers/statistic.js","store/reducers/word.js","store/reducers/collection.js","index.js","components/statistics/Statistics.module.css","components/collection/Collection.module.css"],"names":["module","exports","getTodayWordCount","getTodayWords","length","getTotalWordCount","getWords","getCollectionWordCount","collectionId","getWordsByCollectionId","get","words","filter","w","todayDigit","getDateInDigit","word","date","getCollections","collections","deleteWordsFromLocalStorage","storage","sw","some","id","save","addCollectionToLocalStorage","collection","find","c","name","unshift","sortCollection","shiftDays","today","Date","setDate","getDate","month","getMonth","monthLeadingZero","dateLeadingZero","parseInt","getFullYear","updateWordDate","increase","foundWord","value","count","restoreFromFile","content","merge","mergeCollections","mergeWords","forEach","mc","found","map","mw","push","defaultCollection","mergeWordsToLocalStorage","JSON","parse","wordList","localStorage","setItem","stringify","storageStream","getItem","sort","a","b","nameA","toUpperCase","nameB","addCollection","type","payload","action","deleteCollection","updateCollection","chooseCollection","increaseTotalWordCount","number","decreaseTotalWordCount","increaseTodayWordCount","decreaseTodayWordCount","increaseCollectionWordCount","decreaseCollectionWordCount","setCollectionWordCount","collectionWordCount","addWord","deleteWord","deleteWords","updateWord","highlightWord","Statistics","statistics","useSelector","state","currentCollection","dispatch","useDispatch","useEffect","className","styles","statWrapper","compactLine","totalwordCount","todayWordCount","fileAction","onClick","fileData","blob","Blob","url","URL","createObjectURL","link","document","createElement","download","href","click","saveToFile","verticalSeparate","htmlFor","accept","onChange","e","fileList","target","files","file","reader","FileReader","onload","result","readAsText","AddWord","useState","setWord","setCollection","onSubmit","preventDefault","trimedWord","trim","newWord","nanoid","addWordToLocalStorage","placeholder","AddCollection","event","trimedName","newCollection","DeletionButton","title","window","confirm","position","findIndex","colleciontId","moveWordsFromCollectionToDefault","needDefault","deleteCollectionFromLocalStorage","role","aria-label","UpdateButton","setUpdateCollection","UpdateCollection","collenctionName","setCollectionName","handleSubmit","updatedCollection","i","updateCollectionToLocalStorage","onKeyDown","key","keyCode","onBlur","SelectCollection","setCurrentCollection","ListCollection","setCollections","collectionState","latestCurrent","dropdown","navDropdown","baseStyles","bigSapce","flexSapceBetween","rightMargin","thick","listContainer","UpdateWordModal","props","subtitle","selectCollection","setSelectCollection","closeModal","setModalOpen","isOpen","modalOpen","onAfterOpen","style","color","onRequestClose","ariaHideApp","modalContainer","contentLabel","size","aria-labelledby","centered","ref","_subtitle","inputUpdate","rightSubmit","pointButton","Word","wordWithCheckbox","checkboxes","setCheckboxes","setConfirm","again","setAgain","hightlight","useRef","wordContainer","wordText","checked","isChecked","newState","checkboxWords","allChecked","every","isAllSelected","rel","elements","getElementsByClassName","backgroundColor","current","MoveWordsModal","targetCollectionId","movingWords","cw","moveWordsToCollection","leftWord","moveWord","join","SelectAll","padRight","toRight","deleteCount","checkIsAllSelected","WordList","setHighlightWord","wordState","prevCheckboxes","wordsMovedToDefault","prev","wordsMovedToDefaultWithCheckbox","left","dw","prevCheckboxWords","foundCheckboxWord","needToMoveCollection","updateWordToLocalStorage","StyleSheet","Dictionary","dictionary","setDictionary","handleSelectDict","src","Content","contentContainer","idoms","idiom","meanging","usage","Idom","randomIdomIndex","Math","floor","random","setIdiom","App","Boolean","location","hostname","match","combineReducers","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","allReducers","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e383ef2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bigSapce\":\"Base_bigSapce__35XjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"Content_contentContainer__6r8q4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wordContainer\":\"Word_wordContainer__14k8l\",\"thick\":\"Word_thick__3hcIy\",\"wordList\":\"Word_wordList__1cODo\",\"wordText\":\"Word_wordText__2k8h7\",\"modalContainer\":\"Word_modalContainer__5yvrP\",\"inputUpdate\":\"Word_inputUpdate__13xMb\",\"moveWord\":\"Word_moveWord__TeIOj\",\"rightSubmit\":\"Word_rightSubmit__3WOY8\",\"pointButton\":\"Word_pointButton__gTLhz\",\"toRight\":\"Word_toRight__U8AHv\",\"padRight\":\"Word_padRight__2K4mT\"};","export const getTodayWordCount = () => getTodayWords().length\n\nexport const getTotalWordCount = () => getWords().length\n\nexport const getCollectionWordCount = collectionId => getWordsByCollectionId(collectionId).length\n\nexport const getDefaultCollection = () => ({id: 'default', name: 'default'})\n\nexport const initStorage = () => addCollectionToLocalStorage(getDefaultCollection())\n\nexport const getWords = () => get().words\n\nexport const getWordsByCollectionId = collectionId =>\n  getWords().filter(w => w.collectionId === collectionId)\n\nexport const getTodayWords = () => {\n  const words = getWords()\n  const todayDigit = getDateInDigit()\n  const todayWords = words.filter(word => word.date <= todayDigit)\n  \n  return todayWords\n}\n\nexport const getCollections = () => get().collections\n\nexport const addWordToLocalStorage = word => {\n  const storage = get()\n  if (storage.words.length === 0) {\n    storage.words = [word]\n    save(storage)\n    return true\n  }\n\n  const found = storage.words.find(w => w.value === word.value && w.collectionId === word.collectionId)\n  if (!found) {\n    storage.words.unshift(word)\n    save(storage)\n    return true\n  }\n  return false\n}\n\nexport const deleteWordsFromLocalStorage = words => {\n  const storage = get()\n  if (storage.words.length === 0 || !words || words.length === 0) {\n    return\n  }\n  storage.words = storage.words.filter(sw => !words.some(w => w.id === sw.id))\n  save(storage)\n}\n\nexport const updateWordToLocalStorage = word => {\n  const storage = get()\n  const { words } = storage\n  const foundWord = words.find(w => w.id === word.id)\n  if (foundWord) {\n    const duplicatedWordInTheSameCollection = \n      words.find(w => w.value === word.value && w.collectionId === word.collectionId)\n    if(duplicatedWordInTheSameCollection) {\n      return\n    }\n    foundWord.value = word.value\n    foundWord.collectionId = word.collectionId\n    save(storage)\n  }\n}\n\nexport const mergeWordsToLocalStorage = merge => {\n  if (!merge) {\n    return\n  }\n\n  const storage = get()\n  let { collections, words } = storage\n  let { collections: mergeCollections, words: mergeWords } = merge\n\n  // merge collection by name\n  if (mergeCollections && mergeCollections.length !== 0) {\n    if (collections.length !== 0) {\n      mergeCollections.forEach(mc => {\n        const found = collections.find(c => c.name === mc.name)\n        if (found) {\n          if (mergeWords && mergeWords.length !== 0) {\n            mergeWords = mergeWords.map(mw => {\n              if (mw.collectionId === mc.id) {\n                mw.collectionId = found.id\n              }\n              return mw\n            })\n          }\n        }\n        if (!found) {\n          collections.push(mc)\n        }\n      })\n    } else {\n      storage.collections = mergeCollections\n    }\n    // always set default collection at the last position:\n    const defaultCollection = storage.collections.find(c => c.name === 'default')\n    storage.collections = storage.collections.filter(c => c.name !== 'default')\n    storage.collections.push(defaultCollection)\n    storage.collections = sortCollection(storage.collections)\n  }\n\n  // merge words\n  if (mergeWords && mergeWords.length !== 0) {\n    if (words.length !== 0) {\n      mergeWords.forEach(mw => {\n        const found = words.find(w => w.value === mw.value && w.collectionId === mw.collectionId)\n        if (!found) {\n          words.push(mw)\n        }\n      })\n    } else {\n      storage.words = mergeWords\n    }\n  }\n\n  save(storage)\n}\n\nexport const moveWordsFromCollectionToDefault = collection => {\n  const storage = get()\n  if (storage.collections.length === 0) {\n    storage.collections = [getDefaultCollection()]\n  }\n  const { words } = storage\n  if (words.length !== 0) {\n    words.forEach(w => {\n      if (w.collectionId === collection.id) {\n        w.collectionId = 'default'\n      }\n    })\n  }\n  // dedupe merged words:\n  storage.words = words.filter((word, position) => \n    words.findIndex(w => w.value === word.value && w.colleciontId === word.colleciontId) === position)\n\n  save(storage)\n}\n\nexport const moveWordsToCollection = (movingWords, targetCollectionId) => {\n  if (!movingWords || movingWords.length === 0 || !targetCollectionId) {\n    return\n  }\n\n  const storage = get()\n  const { collections, words } = storage\n  const found = collections.find(c => c.id === targetCollectionId)\n  if(found) {\n    storage.words = words.map(w => {      \n      const foundWord = movingWords.find(mw => mw.id === w.id)\n      if(foundWord) {\n        foundWord.collectionId = targetCollectionId\n        return foundWord\n      }\n      return w\n    })\n  }\n\n  // dedupe merged words:\n  storage.words = storage.words.filter((word, position) => \n    words.findIndex(w => w.value === word.value && w.colleciontId === word.colleciontId) === position)\n\n  save(storage)\n}\n\nexport const addCollectionToLocalStorage = collection => {\n  let storage = get()\n  if (storage.collections.length === 0) {\n    storage.collections = [collection]\n    save(storage)\n    return true\n  }\n\n  const found = storage.collections.find(c => c.name === collection.name)\n  if (!found) {\n    storage.collections.unshift(collection)\n    storage.collections = sortCollection(storage.collections)\n    save(storage)\n    return true\n  }\n  return false\n}\n\nexport const deleteCollectionFromLocalStorage = collection => {\n  let storage = get()\n  if (storage.collections.length === 0) {\n    return\n  }\n\n  let needDefault = false\n  storage.collections = storage.collections.filter(c => c.id !== collection.id)\n  if (storage.words.length !== 0) {\n    storage.words = storage.words.map(w => {\n      if (w.collectionId === collection.id) {\n        w.collectionId = 'default'\n        needDefault = true\n      }\n      return w\n    })\n  }\n\n  if (needDefault) {\n    const found = storage.collections.find(c => c.id === 'default')\n    if (!found) {\n      storage.collections.push(getDefaultCollection())\n    }\n  }\n  save(storage)\n}\n\nexport const updateCollectionToLocalStorage = collection => {\n  let storage = get()\n  if (storage.collections.length === 0) {\n    return\n  }\n  const { collections } = storage\n  let found = false\n  for (const i in collections) {\n    if (collections[i].id === collection.id) {\n       collections[i].name = collection.name;\n       found = true\n       break;\n    }\n  }\n\n  if (!found) {\n    return\n  }\n\n  save(storage)\n}\n\nexport const getCollectionsFromLocalStorage = () => {\n  const storage = get()\n  if (storage.collections.length === 0) {\n    return []\n  }\n\n  return storage.collections\n}\n\nexport const getDateInDigit = (shiftDays = 0) => {\n  const today = new Date()\n  if (shiftDays !== 0) {\n    today.setDate(today.getDate() + shiftDays)\n  }\n  const month = today.getMonth() + 1\n  const date = today.getDate()\n  let monthLeadingZero = `${month}`\n  let dateLeadingZero = `${date}`\n  if (month < 10) {\n    monthLeadingZero = `0${month}`\n  }\n  if (date < 10) {\n    dateLeadingZero = `0${date}`\n  }\n  return parseInt(`${today.getFullYear()}${monthLeadingZero}${dateLeadingZero}`, 10)\n}\n\nexport const updateWordDate = (word, increase) => {\n  const storage  = get()\n  const { words } = storage\n\n  if (words.length === 0) {\n    return\n  }\n\n  const foundWord = words.find(w => w.value === word.value)\n  foundWord.date = foundWord.count > 7 ? getDateInDigit(45) : getDateInDigit(foundWord.count)\n  if (foundWord) {\n    if (increase) {\n      if (foundWord.count <= 7) {\n        foundWord.count += 1\n      }\n    } else {\n      if (foundWord.count > 0) {\n        foundWord.count -= 1\n      }\n    }\n    save(storage)\n  }\n}\n\nexport const saveToFile = () => {\n  const fileData = JSON.stringify(get())\n  const blob = new Blob([fileData], {type: \"text/plain\"})\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.download = 'MyWords.json'\n  link.href = url\n  link.click()\n}\n\nexport const restoreFromFile = (content) => mergeWordsToLocalStorage(JSON.parse(content))\n\nexport const save = wordList => \n  localStorage.setItem('Eng:Words', JSON.stringify(wordList))\n\nexport const get = () => {\n  const storageStream = localStorage.getItem('Eng:Words')\n  if (!storageStream) {\n    return {words:[], collections:[]}\n  }\n\n  const storage = JSON.parse(storageStream)\n\n  if (!storage.words) {\n    storage.words = []\n  }\n  if (!storage.collections) {\n    storage.collections = []\n  }\n  return storage\n}\n\nexport const sortCollection = collection => collection.sort((a, b) => {\n  var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n  var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n\n  // names must be equal\n  return 0;\n}) ","import {ADD_COLLECTION, DELETE_COLLECTION, UPDATE_COLLECTION, CHOOSE_COLLECTION } from '../../const'\n\nexport const addCollection = collection => ({\n  type: ADD_COLLECTION,\n  payload: {\n    id: collection.id,\n    name: collection.name,\n  }\n})\n\nexport const deleteCollection = collectionId => ({\n  type: DELETE_COLLECTION,\n  payload: {\n    id: collectionId\n  }\n})\n\nexport const updateCollection = collection => ({\n  type: UPDATE_COLLECTION,\n  payload: {\n    id: collection.id,\n    name: collection.name,\n  }\n})\n\nexport const chooseCollection = collection => ({\n  type: CHOOSE_COLLECTION,\n  payload: {\n    id: collection.id,\n    name: collection.name\n  }\n})","export const ADD_WORD = 'ADD_WORD'\nexport const DELETE_WORD = 'DELETE_WORD'\nexport const DELETE_WORDS = 'DELETE_WORDS'\nexport const UPDATE_WORD = 'UPDATE_WORD'\nexport const HIGHLIGHT_WORD = 'HIGHLIGHT_WORD'\n\nexport const ADD_COLLECTION = 'ADD_COLLECTION'\nexport const DELETE_COLLECTION = 'DELETE_COLLECTION'\nexport const UPDATE_COLLECTION = 'UPDATE_COLLECTION'\nexport const CHOOSE_COLLECTION = 'CHOOSE_COLLECTION'\n\nexport const INCREASE_TODAY_WORD_COUNT = 'INCREASE_TODAY_WORD_COUNT'\nexport const DECREASE_TODAY_WORD_COUNT = 'DECREASE_TODAY_WORD_COUNT'\nexport const INCREASE_TOTAL_WORD_COUNT = 'INCREASE_TOTAL_WORD_COUNT'\nexport const DECREASE_TOTAL_WORD_COUNT = 'DECREASE_TOTAL_WORD_COUNT'\nexport const INCREASE_COLLECTION_WORD_COUNT = 'INCREASE_COLLECTION_WORD_COUNT'\nexport const DECREASE_COLLECTION_WORD_COUNT = 'DECREASE_COLLECTION_WORD_COUNT'\nexport const SET_COLLECTION_WORD_COUNT = 'SET_COLLECTION_WORD_COUNT'","import {addCollection, deleteCollection, updateCollection, chooseCollection} from './collectionAction'\nimport {increaseTotalWordCount, decreaseTotalWordCount, increaseTodayWordCount, decreaseTodayWordCount, increaseCollectionWordCount, decreaseCollectionWordCount, setCollectionWordCount } from './statisticAction'\nimport {addWord, deleteWord, deleteWords, updateWord, highlightWord} from './wordAction'\n\nconst action = {\n  addCollection, deleteCollection, updateCollection, chooseCollection,\n  increaseTotalWordCount, decreaseTotalWordCount, increaseTodayWordCount, decreaseTodayWordCount, increaseCollectionWordCount, decreaseCollectionWordCount, setCollectionWordCount,\n  addWord, deleteWord, deleteWords, updateWord, highlightWord\n}\n\nexport default action","import {\n  INCREASE_TODAY_WORD_COUNT,\n  DECREASE_TODAY_WORD_COUNT,\n  INCREASE_TOTAL_WORD_COUNT,\n  DECREASE_TOTAL_WORD_COUNT,\n  INCREASE_COLLECTION_WORD_COUNT,\n  DECREASE_COLLECTION_WORD_COUNT,\n  SET_COLLECTION_WORD_COUNT } from '../../const'\n\nexport const increaseTotalWordCount = (number) => ({\n  type: INCREASE_TOTAL_WORD_COUNT,\n  payload: number,\n})\n\nexport const decreaseTotalWordCount = (number) => ({\n  type: DECREASE_TOTAL_WORD_COUNT,\n  payload: number,\n})\n\nexport const increaseTodayWordCount = (number) => ({\n  type: INCREASE_TODAY_WORD_COUNT,\n  payload: number,\n})\n\nexport const decreaseTodayWordCount = (number) => ({\n  type: DECREASE_TODAY_WORD_COUNT,\n  payload: number,\n})\n\nexport const increaseCollectionWordCount = (number) => ({\n  type: INCREASE_COLLECTION_WORD_COUNT,\n  payload: number,\n})\n\nexport const decreaseCollectionWordCount = (number) => ({\n  type: DECREASE_COLLECTION_WORD_COUNT,\n  payload: number,\n})\n\nexport const setCollectionWordCount = (collectionWordCount) => ({\n  type: SET_COLLECTION_WORD_COUNT,\n  payload: collectionWordCount\n})","import {ADD_WORD, DELETE_WORD, DELETE_WORDS, UPDATE_WORD, HIGHLIGHT_WORD } from '../../const'\n\nexport const addWord = word => ({\n  type: ADD_WORD,\n  payload: word\n})\n\nexport const deleteWord = word => ({\n  type: DELETE_WORD,\n  payload: word\n})\n\nexport const deleteWords = words => ({\n  type: DELETE_WORDS,\n  payload: words\n})\n\nexport const updateWord = word => ({\n  type: UPDATE_WORD,\n  payload: word\n})\n\nexport const highlightWord = word => ({\n  type: HIGHLIGHT_WORD,\n  payload: word\n})","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getCollectionWordCount, restoreFromFile, saveToFile } from '../../utils';\nimport styles from './Statistics.module.css'\nimport action from '../../store/actions'\n\nexport default function Statistics() {\n  const statistics = useSelector(state => state.statistics)\n  const currentCollection = useSelector(state => state.currentCollection)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const collectionWordCount = getCollectionWordCount(currentCollection.id)\n    dispatch(action.setCollectionWordCount(collectionWordCount))\n  }, [currentCollection, dispatch])\n\n  const handleSave = () => saveToFile()\n  const handleRestore = e => {\n    const fileList = e.target.files\n    if (fileList.length > 0) {\n      const file = fileList[0]\n      const reader = new FileReader();\n      reader.onload = (function(reader)\n      {\n          return function()\n          {\n              const content = reader.result\n              restoreFromFile(content)\n          }\n      })(reader);\n\n      reader.readAsText(file)\n    }\n  }\n\n  return (\n    <>\n      <div className={styles.statWrapper}>\n        <p className={styles.compactLine}>Total Words: <strong> {statistics.totalwordCount || '⏰'}</strong></p>\n        <p className={styles.compactLine}>Collection Words: <strong>{statistics.collectionWordCount || '⏰'}</strong></p>\n        <p className={styles.compactLine}>Today Words: <strong> {statistics.todayWordCount || '⏰'}</strong></p>\n        <div className={styles.fileAction}>\n          <button onClick={handleSave}>Download My Words</button>\n          <div className={styles.verticalSeparate}></div>\n          <form>\n            <label htmlFor=\"restoreFromFile\"><strong>Apply your Wrods:</strong></label>\n            <input type='file' id=\"restoreFromFile\" accept=\".json\" onChange={handleRestore}></input> \n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { nanoid } from 'nanoid'\nimport action from '../../store/actions'\nimport { addWordToLocalStorage, getDateInDigit, getDefaultCollection } from '../../utils'\n\nexport default function AddWord() {\n  const [word, setWord] = useState('')\n  const [collection, setCollection] = useState(getDefaultCollection())\n  const currentCollection = useSelector(state => state.currentCollection)\n  const dispatch = useDispatch()\n\n  const handleChange = e => {\n    setWord(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (word) {\n      const trimedWord = word.trim()\n      if (trimedWord.length > 0) {\n        const newWord = {\n          id: nanoid(),\n          collectionId: collection.id,\n          value: trimedWord,\n          count: 0,\n          date: getDateInDigit()\n        }\n        const added = addWordToLocalStorage(newWord)\n        if (added) {\n          dispatch(action.addWord(newWord))\n          dispatch(action.increaseTotalWordCount(1))\n          dispatch(action.increaseTodayWordCount(1))\n          dispatch(action.increaseCollectionWordCount(1))\n        }\n      }\n    }\n    setWord('')\n  }\n\n  useEffect(() => {\n    setCollection(currentCollection)\n  }, [currentCollection])\n\n  return (\n    <div className=\"bigSpace\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"addWord\">Add new word:</label>\n        <input className=\"input-text\" type=\"text\" id=\"addWord\" value={word} onChange={handleChange} placeholder=\"Add word\"/>\n        <input className=\"round-button\" type=\"submit\" value=\"➕\"/>\n      </form>\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addCollection } from '../../store/actions/collectionAction'\nimport { addCollectionToLocalStorage } from '../../utils'\nimport { nanoid } from 'nanoid'\n\n export default function AddCollection() {\n  const [collection, setCollection] = useState('')\n  const dispatch = useDispatch()\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    if (collection) {\n      const trimedName = collection.trim()\n      if (trimedName.length > 0) {        \n        const newCollection = {\n          id: nanoid(),\n          name: trimedName\n        }\n        addCollectionToLocalStorage(newCollection)\n        dispatch(addCollection(newCollection))\n      }\n    }\n    setCollection('')\n  }\n\n  function handleChange(event) {\n    setCollection(event.target.value)\n  }\n\n  return (\n    <div className=\"bigSpace\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"newCollection\">Add new collection:</label>\n        <input className=\"input-text\" type=\"text\" id=\"newCollection\" value={collection} onChange={handleChange} placeholder=\"Add collection\"/>\n        <input className=\"round-button\" type=\"submit\" value=\"➕\"/>\n      </form>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { deleteCollectionFromLocalStorage, moveWordsFromCollectionToDefault } from '../../utils'\nimport action from '../../store/actions'\n\nexport default function DeletionButton({collection}) {\n  const dispatch = useDispatch()\n\n  function deleteCollection() {\n    if (collection.name === 'default') {\n      window.confirm('⏹ You can\\'t remove default collection')\n    } else {\n      if (window.confirm(`⚠️ Once the ${collection.name} collection has been removed, the words underneath will be moved into default collection`)) {\n        moveWordsFromCollectionToDefault(collection)\n        deleteCollectionFromLocalStorage(collection)\n        dispatch(action.deleteCollection(collection.id))\n      }\n    }\n  }\n\n  return <button title=\"👆Click to delete collection\" onClick={deleteCollection}><span role=\"img\" aria-label=\"trash bin\">🗑</span></button>\n}","import React from 'react'\n\nexport default function UpdateButton({collection, setUpdateCollection}) {\n\n  function updateCollection() {\n    if (collection.name === 'default') {\n      window.confirm('⏹ You can\\'t update default collection')\n    } else {\n      setUpdateCollection(collection)\n    }\n  }\n\n  return <button title=\"👆Click to change collection name\" onClick={updateCollection}><span role=\"img\" aria-label=\"gear\">✍️</span></button>\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport action from '../../store/actions';\nimport { updateCollectionToLocalStorage } from '../../utils';\n\nexport default function UpdateCollection({collection, setUpdateCollection}) {\n  const [collenctionName, setCollectionName] = useState(collection.name)\n  const dispatch = useDispatch()\n\n  function handleChange(event) {\n    setCollectionName(event.target.value)\n  }\n\n  function onKeyDown(event) {\n    if (event.key === 'Enter' || event.keyCode === 13) {\n      handleSubmit(event)\n    }\n  }\n\n  function onBlur(event) {\n    handleSubmit(event)\n  }\n\n  function handleSubmit(event) {\n    const updatedCollection = {id: collection.id, name: event.target.value}\n    setUpdateCollection({})\n    updateCollectionToLocalStorage(updatedCollection)\n    dispatch(action.updateCollection(updatedCollection))\n  }\n\n  return <input type=\"text\" value={collenctionName} title=\"👉Press enter to confirm👈🏿\" onChange={handleChange} onKeyDown={onKeyDown} onBlur={onBlur}></input>\n}","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport action from '../../store/actions'\nimport UpdateCollection from './UpdateCollection';\n\nexport default function SelectCollection({collection, updateCollection, setUpdateCollection, setCurrentCollection}) {\n  const dispatch = useDispatch()\n\n  function selectCollection() {\n    setCurrentCollection({...collection})\n    dispatch(action.chooseCollection(collection))\n  }\n\n  return (\n    <>\n    {collection.id && updateCollection.id && collection.id === updateCollection.id ? \n      <UpdateCollection collection={collection} setUpdateCollection={setUpdateCollection}/> : \n      <div onClick={selectCollection}>{collection.name}</div>}\n    </>\n  )\n\n}","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport className from 'classnames'\nimport styles from './Collection.module.css'\nimport baseStyles from '../../Base.module.css'\nimport { getCollections, getDefaultCollection } from '../../utils'\nimport action from '../../store/actions'\nimport DeleteButton from './DeleteButton'\nimport Updatebutton from './UpdateButton'\nimport SelectCollection from './SelectCollection'\n\nexport default function ListCollection() {\n  const [collections, setCollections] = useState([])\n  const [currentCollection, setCurrentCollection] = useState(getDefaultCollection())\n  const [updateCollection, setUpdateCollection] = useState({})\n  const collectionState = useSelector(state => state.collection)\n  const dispatch = useDispatch()\n\n  useEffect(() => { \n    const collections = getCollections()\n    const latestCurrent = collections.find(c => c.id === currentCollection.id)\n    if (!latestCurrent) { // currentCollection was deleted, get the next available from store\n      dispatch(action.chooseCollection(collections[0]))\n      setCurrentCollection(collections[0])\n    } else if (latestCurrent.name !== currentCollection.name) { // currentCollection was updated, update with latest\n      dispatch(action.chooseCollection(latestCurrent))\n      setCurrentCollection(latestCurrent)\n    }\n    const dropdown = collections.filter(c => c.name !== currentCollection.name)\n    \n    setCollections(dropdown)\n  }, [collectionState, currentCollection, dispatch])\n\n  return (\n    <div className={className(styles.navDropdown, baseStyles.bigSapce)}>\n      <nav id=\"choose-collection\" role=\"navigation\">\n        <ul>\n          <li>\n            <div className={styles.flexSapceBetween}>\n              <span className={styles.rightMargin}>Current Collection:</span>\n              <span className={className(styles.rightMargin, styles.thick)}>\n                <SelectCollection collection={currentCollection} updateCollection={updateCollection} setUpdateCollection={setUpdateCollection} setCurrentCollection={setCurrentCollection}/>\n              </span>\n              <Updatebutton collection={currentCollection} setUpdateCollection={setUpdateCollection}/>\n              <DeleteButton collection={currentCollection}/>\n            </div>\n            <ul>\n              {collections.length > 0 ? collections.map(c => \n                <li className={styles.listContainer} key={c.id}>\n                  <SelectCollection collection={c} updateCollection={updateCollection} setUpdateCollection={setUpdateCollection} setCurrentCollection={setCurrentCollection}/>\n                  <Updatebutton collection={c} setUpdateCollection={setUpdateCollection}/>\n                  <DeleteButton collection={c}/>\n                </li>\n              ) : <li>Add your collection   </li>}              \n            </ul>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport action from '../../store/actions'\nimport className from 'classnames'\nimport { getCollections, getDefaultCollection } from '../../utils'\nimport styles from './Word.module.css';\n\nexport default function UpdateWordModal(props) {\n  let subtitle\n  const dispatch = useDispatch()\n  const [word, setWord] = useState(props.word.value)\n  const [collections, setCollections] = useState([getDefaultCollection()])\n  const [selectCollection, setSelectCollection] = useState(props.word.collectionId)\n  const collectionState = useSelector(state => state.collection)\n\n  useEffect(() => {\n    setCollections(getCollections())\n  }, [collectionState])\n \n  const afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00'\n  }\n \n  const closeModal = () => {\n    props.setModalOpen(false)\n  }\n\n  const handleChange = e => {\n    setWord(e.target.value)\n  }\n\n  const handleSelectCollection = e => {\n    setSelectCollection(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (e.target[0].value) {\n      const trimedWord = e.target[0].value.trim()\n      if (trimedWord) {\n        if (e.target[1].value !== props.word.collectionId) {\n          dispatch(action.decreaseCollectionWordCount(1))\n        }\n        dispatch(action.updateWord({\n          id: props.word.id,\n          collectionId: e.target[1].value,\n          value: trimedWord,\n          count: props.word.count,\n          date: props.word.date\n        }))\n      }\n    }\n    closeModal()\n  }\n\n  return (\n    <Modal\n      isOpen={props.modalOpen}\n      onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      ariaHideApp={false}\n      className={styles.modalContainer}\n      contentLabel=\"Update Word\"\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <h2 ref={_subtitle => (subtitle = _subtitle)}>Edit your word:</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"updateWord\">Original Word <span role=\"img\" aria-label=\"writing hand\">✍️</span>:</label>\n        <input className={styles.inputUpdate} type=\"text\" id=\"updateWord\" value={word} onChange={handleChange}/>\n        <select name=\"collections\" id=\"collections\" onChange={handleSelectCollection} value={selectCollection}>\n          {collections && collections.length > 0 && collections.map(c => <option key={c.id} value={c.id}>{c.name}</option>)}\n        </select>\n        <input className={className(styles.rightSubmit, styles.pointButton)} type=\"submit\" value=\"Update\"/>\n      </form>\n    </Modal>\n  )\n}","import React, { useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport action from '../../store/actions'\nimport { deleteWordsFromLocalStorage, updateWordDate } from '../../utils'\nimport UpdateWordModal from './UpdateWordModal'\nimport styles from './Word.module.css'\n\nexport default function Word({ wordWithCheckbox, checkboxes, setCheckboxes}) {\n  const dispatch = useDispatch()\n  const [confirm, setConfirm] = useState('🎯')\n  const [again, setAgain] = useState('⏰')\n  const [modalOpen, setModalOpen] = useState(false)\n\n  const hightlight = useRef('');\n\n  const handleConfirm = () => {\n    if (confirm !== '👍') {\n      setConfirm('👍')\n      setAgain('⏰')\n      updateWordDate(wordWithCheckbox.word, true)\n    }\n  }\n\n  const handleAgain = () => {\n    if (again !== '🛑') {\n      setAgain('🛑')\n      setConfirm('🎯')\n      updateWordDate(wordWithCheckbox.word, false)\n    }\n  }\n\n  const handleDelete = () => {\n    if (window.confirm(`⚠️ Are you sure you want to delete this word -> ${wordWithCheckbox.word.value}`)) {\n      deleteWordsFromLocalStorage([wordWithCheckbox.word])\n      dispatch(action.deleteWord(wordWithCheckbox.word))\n      dispatch(action.decreaseTotalWordCount(1))\n      dispatch(action.decreaseTodayWordCount(1))\n      dispatch(action.decreaseCollectionWordCount(1))\n    }\n  }\n\n  const handleHighlightWord = () => {\n    dispatch(action.highlightWord(wordWithCheckbox.word))\n    const elements = document.getElementsByClassName(styles.wordText)\n    for(const element of elements) {\n      element.style.backgroundColor = \"\"\n    }\n    hightlight.current.style.backgroundColor = \"yellow\"\n  }\n\n  const openModal = () => {\n    setModalOpen(true)\n  }\n\n  function handleCheckboxClick() {\n    const newState = !wordWithCheckbox.isChecked\n    const found = checkboxes.checkboxWords.findIndex(w => w.word.id === wordWithCheckbox.word.id)\n    if (found !== -1) {\n      checkboxes.checkboxWords[found].isChecked = newState\n      const allChecked = checkboxes.checkboxWords.every(w => w.isChecked)\n      setCheckboxes({\n        isAllSelected: allChecked,\n        checkboxWords: [...checkboxes.checkboxWords]\n      })\n    }\n\n  }\n\n  return (\n    <div className={styles.wordContainer}>\n      <div className={styles.wordText} name={wordWithCheckbox.word.value} ref={hightlight} title=\"🌏 Click the word to open the meaning by Google in new tab\">\n        <input checked={wordWithCheckbox.isChecked} onChange={handleCheckboxClick} type=\"checkbox\" name=\"word\" id=\"word\"/>\n        <label htmlFor=\"word\">\n          <a href={`https://www.google.com/search?q=${wordWithCheckbox.word.value}+definition`} target=\"_blank\" rel=\"noopener noreferrer\">{wordWithCheckbox.word.value}</a>\n        </label>\n      </div>\n      <div>\n        <button onClick={handleHighlightWord} title=\"📓 Show meaning in the dictionary\"><span role=\"img\" aria-label=\"red textbook\">📕</span></button>\n        <button onClick={handleConfirm} title=\"🧠 Click on it if you can know the meaning and it won't show after you click 7 times on another day\"><span role=\"img\" aria-label=\"thumbs up\">{confirm}</span></button>\n        <button onClick={handleAgain} title=\"⏳ Click on it if you don't know the meaning and the word will still stay in the list\"><span role=\"img\" aria-label=\"thinking face\">{again}</span></button>\n        <button onClick={openModal} title=\"🖋 Modify the word\"><span role=\"img\" aria-label=\"gear\">✍️</span></button>\n        {modalOpen && <UpdateWordModal word={wordWithCheckbox.word} modalOpen={modalOpen} setModalOpen={setModalOpen}/>}\n        <button onClick={handleDelete} title=\"⚠️ Remove the word from the list\"><span role=\"img\" aria-label=\"trash bin\">🗑</span></button>\n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport Modal from 'react-modal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport className from 'classnames'\nimport action from '../../store/actions'\nimport { getCollections, getDefaultCollection, moveWordsToCollection } from '../../utils'\nimport styles from './Word.module.css'\n\nexport default function MoveWordsModal({modalOpen, setModalOpen, checkboxes, setCheckboxes}) {\n  let subtitle\n  const dispatch = useDispatch()\n  const [selectCollection, setSelectCollection] = useState('')\n  const [collections, setCollections] = useState([getDefaultCollection()])\n  const collectionState = useSelector(state => state.collection)\n\n  useEffect(() => {\n    setCollections(getCollections())\n  }, [collectionState])\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00'\n  }\n \n  function closeModal() {\n    setModalOpen(false)\n  }\n\n  function handleSelectCollection (event) {\n    setSelectCollection(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    const targetCollectionId = event.target[0].value\n    const currentCollectionId = checkboxes.checkboxWords[0].word.collectionId\n    if (currentCollectionId === targetCollectionId) {\n      return\n    }\n    const movingWords = checkboxes.checkboxWords.filter(cw => cw.isChecked).map(cw => cw.word)\n    \n    moveWordsToCollection(movingWords, targetCollectionId)\n    const leftWord = checkboxes.checkboxWords.filter(cw => !cw.isChecked)\n    dispatch(action.decreaseCollectionWordCount(movingWords.length))\n    setCheckboxes({\n      isAllSelected: checkboxes.isAllSelected,\n      checkboxWords: leftWord,\n    })\n    closeModal()\n  }\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      ariaHideApp={false}\n      className={styles.modalContainer}\n      contentLabel=\"Move Words\"\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <h2 ref={_subtitle => (subtitle = _subtitle)}>Edit your word:</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"moveWord\">Moving below words to another collection <span role=\"img\" aria-label=\"writing hand\">✍️</span>:</label>\n        <div className={styles.moveWord}>{checkboxes.checkboxWords.filter(cw => cw.isChecked).map(cw => cw.word.value).join(', ')}</div>\n        <select name=\"collections\" id=\"collections\" onChange={handleSelectCollection} value={selectCollection}>\n          {collections && collections.length > 0 && collections.map(c => <option key={c.id} value={c.id}>{c.name}</option>)}\n        </select>\n        <input className={className(styles.rightSubmit, styles.pointButton)} type=\"submit\" value=\"Update\"/>\n      </form>\n    </Modal>\n  )\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport action from '../../store/actions'\nimport styles from './Word.module.css'\nimport MoveWordsModal from './MoveWordsModal';\nimport { deleteWordsFromLocalStorage } from '../../utils';\n\nexport default function SelectAll({checkboxes, setCheckboxes}) {\n  const [modalOpen, setModalOpen] = useState(false)\n  const dispatch = useDispatch()\n\n  function openModal() {\n    const moveWords = checkboxes.checkboxWords.filter(w => w.isChecked)\n    const moveCount = moveWords.length\n    if (moveCount > 0) {\n      setModalOpen(true)\n    }\n  }\n\n  function handleChange() {\n    const newState = !checkboxes.isAllSelected\n    setCheckboxes({\n      isAllSelected: newState,\n      checkboxWords: checkboxes.checkboxWords.map(cw => ({word: cw.word, isChecked: newState}))\n    })\n  }\n\n  function handleDelete() {\n    const deleteWords = checkboxes.checkboxWords.filter(w => w.isChecked)\n    const deleteCount = deleteWords.length\n    if (deleteCount > 0) {\n      if (window.confirm(`⚠️ Are you sure you want to delete the word(s):\\n${deleteWords.map(c => c.word.value + '\\n').join(\"\")}`)) {\n        const words = deleteWords.map(c => c.word)\n        deleteWordsFromLocalStorage(words)\n        dispatch(action.deleteWords(words))\n        dispatch(action.decreaseTotalWordCount(deleteCount))\n        dispatch(action.decreaseTodayWordCount(deleteCount))\n        dispatch(action.decreaseCollectionWordCount(deleteCount))\n      }\n    }\n  }\n\n  return (\n    <div className={styles.wordContainer}>\n      <div className={styles.wordText}>\n        <input type=\"checkbox\" checked={checkboxes.isAllSelected} onChange={handleChange} name=\"all\" id=\"all\"/>\n        <label className={styles.thick} htmlFor=\"all\">Select All</label>\n      </div>\n      <div className={styles.padRight}>\n        <button className={styles.toRight} onClick={handleDelete} title=\"⚠️ Remove selected word from the collection\"><span role=\"img\" aria-label=\"trash bin\">🗑</span></button>\n        <button className={styles.toRight} onClick={openModal} title=\"🖋 Move selected words to another collection\"><span role=\"img\" aria-label=\"gear\">✍️</span></button>\n        {modalOpen && <MoveWordsModal modalOpen={modalOpen} setModalOpen={setModalOpen} checkboxes={checkboxes} setCheckboxes={setCheckboxes} />}\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { getWordsByCollectionId, deleteWordsFromLocalStorage, updateWordToLocalStorage } from '../../utils'\nimport {DELETE_COLLECTION} from '../../const'\nimport Word from '../word/Word';\nimport SelectAll from '../word/SelectAll'\n\nfunction checkIsAllSelected(checkboxWords) {\n  return checkboxWords.every(w => w.isChecked)\n}\n\nexport default function WordList({ setHighlightWord }) {\n  const [checkboxes, setCheckboxes] = useState({isAllSelected: false, checkboxWords: []})\n  const wordState = useSelector(state => state.word)\n  const collectionState = useSelector(state => state.collection)\n  const currentCollection = useSelector(state => state.currentCollection)\n\n  useEffect(() => {\n    const words = getWordsByCollectionId(currentCollection.id)\n    setCheckboxes({isAllSelected: false, checkboxWords: words.map(w => ({word: w, isChecked:false}))})\n  }, [currentCollection])\n\n  useEffect(() => {\n    if (collectionState.type === DELETE_COLLECTION && currentCollection.id === 'default') {\n      setCheckboxes(prevCheckboxes => {\n        const words = getWordsByCollectionId(currentCollection.id)\n        const wordsMovedToDefault = words.filter(w => !prevCheckboxes.checkboxWords.some(prev => prev.word.id === w.id))\n        if(wordsMovedToDefault.length > 0) {\n          const wordsMovedToDefaultWithCheckbox = wordsMovedToDefault.map(w => ({word: w, isChecked:false}))\n          return {\n            isAllSelected: false,\n            checkboxWords: [...prevCheckboxes.checkboxWords, ...wordsMovedToDefaultWithCheckbox.checkboxWords]          \n          }\n        }\n        return prevCheckboxes\n      })\n    }\n  }, [collectionState, currentCollection.id])\n\n  useEffect(() => {\n    setCheckboxes(prevCheckboxes => {\n      const found = prevCheckboxes.checkboxWords.find(c => c.word.value === wordState.addWord.value)\n      if (found) {\n        return prevCheckboxes\n      }\n      return {\n        isAllSelected: false,\n        checkboxWords: [{word: wordState.addWord, isChecked: false}, ...prevCheckboxes.checkboxWords]\n      }\n    })\n  }, [wordState.addWord])\n\n  useEffect(() => {\n    deleteWordsFromLocalStorage([wordState.deleteWord])\n    setCheckboxes(prevCheckboxes => {\n      const left = prevCheckboxes.checkboxWords.filter(w => w.word.value !== wordState.deleteWord.value)\n      return {\n        isAllSelected: checkIsAllSelected(left),\n        checkboxWords: left\n      }\n    })\n  }, [wordState.deleteWord])\n\n  useEffect(() => {\n    deleteWordsFromLocalStorage(wordState.deleteWords)\n    setCheckboxes(prevCheckboxes => {\n      const left = prevCheckboxes.checkboxWords.filter(cw => !wordState.deleteWords.some(dw => dw.value === cw.word.value))\n      return {\n        isAllSelected: checkIsAllSelected(left),\n        checkboxWords: left\n      }\n    })\n  }, [wordState.deleteWords])\n\n  useEffect(() => {\n    if (wordState.updateWord && wordState.updateWord.value) {\n      setCheckboxes(prevCheckboxWords => {\n        const foundCheckboxWord = prevCheckboxWords.checkboxWords.find(w => w.word.id === wordState.updateWord.id)\n        let needToMoveCollection = false\n        if (foundCheckboxWord) {\n          foundCheckboxWord.word.value = wordState.updateWord.value\n          if (foundCheckboxWord.word.collectionId !== wordState.updateWord.collectionId) {\n            needToMoveCollection = true\n          }\n        }\n        \n        if (needToMoveCollection) {\n          const left = prevCheckboxWords.checkboxWords.filter(w => w.word.id !== wordState.updateWord.id)\n          return {\n            isAllSelected: checkIsAllSelected(left),\n            checkboxWords: left\n          }\n        }\n        \n        return {\n          isAllSelected: prevCheckboxWords.isAllSelected,\n          checkboxWords: [...prevCheckboxWords.checkboxWords]\n        }\n      })\n      updateWordToLocalStorage(wordState.updateWord)\n    }\n  }, [wordState, wordState.updateWord])\n\n  useEffect(() => {\n    setHighlightWord(wordState.highlightWord.value)\n  }, [setHighlightWord, wordState.highlightWord])\n\n  return (\n    <div>\n      <ul className={StyleSheet.wordList}>\n        {checkboxes.checkboxWords.length === 0 ?\n        <p><span role=\"img\" aria-label=\"grinning\">😅</span> There is no word in this collection: <em>{currentCollection.name}</em></p> :\n        <>\n          <SelectAll checkboxes={checkboxes} setCheckboxes={setCheckboxes}/>\n          {checkboxes.checkboxWords.map(wordWithCheckbox =>\n            wordWithCheckbox.word.value && \n            <li key={wordWithCheckbox.word.id}>\n              <Word wordWithCheckbox={wordWithCheckbox} checkboxes={checkboxes} setCheckboxes={setCheckboxes}/>\n            </li>)}\n        </>\n        }\n      </ul>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nconst Dictionary = ( {highlightWord} ) => {\n  const [dictionary, setDictionary] = useState('Merriam')\n\n  function handleSelectDict(event) {\n    setDictionary(event.target.value)\n  }\n\n  return (\n    <div className=\"scroll-then-fix\">\n      <div>\n        <button className=\"square-button\" value=\"Merriam\" id=\"Merriam\" onClick={handleSelectDict}>Merriam</button>\n        <button className=\"square-button\" value=\"Dictionary\" id=\"Dictionary\" onClick={handleSelectDict}>Dictionary</button>\n        <button className=\"square-button\" value=\"Cambridge\" id=\"Cambridge\" onClick={handleSelectDict}>Cambridge</button>\n        <button className=\"square-button\" value=\"Synonyms\" id=\"Synonyms\" onClick={handleSelectDict}>Synonyms</button>\n      </div>\n      {dictionary === 'Merriam' && <iframe src={`https://www.merriam-webster.com/dictionary/${highlightWord}`} title=\"Merriam\"></iframe>}\n      {dictionary === 'Dictionary' && <iframe src={`https://www.dictionary.com/browse/${highlightWord}`} title=\"Dictionary\"></iframe>}\n      {dictionary === 'Cambridge' && <iframe src={`https://dictionary.cambridge.org/dictionary/english/${highlightWord}`} title=\"Cambridge\"></iframe>}\n      {dictionary === 'Synonyms' && <iframe src={`https://www.wordhippo.com/what-is/another-word-for/${highlightWord}.html`} title=\"Synonyms\"></iframe>}\n      {dictionary === 'Antonyms' && <iframe src={`https://www.wordhippo.com/what-is/the-opposite-of/${highlightWord}.html`} title=\"Antonyms\"></iframe>}\n    </div>\n  )\n}\nexport default Dictionary","import React, { useState } from 'react'\nimport styles from './Content.module.css'\nimport WordList from '../word/WordList'\nimport Dictionary from '../dictionary/Dictionary'\n\nexport default function Content() {\n  const [highlightWord, setHighlightWord] = useState()\n\n  return (\n    <div className={styles.contentContainer}>\n      <WordList setHighlightWord={setHighlightWord}/>\n      <Dictionary highlightWord={highlightWord}/>\n    </div>\n  )\n}\n","const idoms = [\n  { idiom: \"A blessing in disguise\", meanging: \"a good thing that seemed bad at first\", usage: \"as part of a sentence\"},\n  { idiom: \"A dime a dozen\", meanging: \"Something common\", usage: \"as part of a sentence\"},\n  { idiom: \"Beat around the bush\", meanging: \"Avoid saying what you mean, usually because it is uncomfortable\", usage: \"as part of a sentence\"},\n  { idiom: \"Better late than never\", meanging: \"Better to arrive late than not to come at all\", usage: \"by itself\"},\n  { idiom: \"Bite the bullet\", meanging: \"To get something over with because it is inevitable\", usage: \"as part of a sentence\"},\n  { idiom: \"Break a leg\", meanging: \"Good luck\", usage: \"by itself\"},\n  { idiom: \"Call it a day\", meanging: \"Stop working on something\", usage: \"as part of a sentence\"},\n  { idiom: \"Cut somebody some slack\", meanging: \"Don't be so critical\", usage: \"as part of a sentence\"},\n  { idiom: \"Cutting corners\", meanging: \"Doing something poorly in order to save time or money\", usage: \"as part of a sentence\"},\n  { idiom: \"Easy does it\", meanging: \"Slow down\", usage: \"by itself\"},\n  { idiom: \"Get out of hand\", meanging: \"Get out of control\", usage: \"as part of a sentence\"},\n  { idiom: \"Get something out of your system\", meanging: \"Do the thing you've been wanting to do so you can move on\", usage: \"as part of a sentence\"},\n  { idiom: \"Get your act together\", meanging: \"Work better or leave\", usage: \"by itself\"},\n  { idiom: \"Give someone the benefit of the doubt\", meanging: \"Trust what someone says\", usage: \"as part of a sentence\"},\n  { idiom: \"Go back to the drawing board\", meanging: \"Start over\", usage: \"as part of a sentence\"},\n  { idiom: \"Hang in there\", meanging: \"Don't give up\", usage: \"by itself\"},\n  { idiom: \"Hit the sack\", meanging: \"Go to sleep\", usage: \"as part of a sentence\"},\n  { idiom: \"It's not rocket science\", meanging: \"It's not complicated\", usage: \"by itself\"},\n  { idiom: \"Let someone off the hook\", meanging: \"To not hold someone responsible for something\", usage: \"as part of a sentence\"},\n  { idiom: \"Make a long story short\", meanging: \"Tell something briefly\", usage: \"as part of a sentence\"},\n  { idiom: \"Miss the boat\", meanging: \"It's too late\", usage: \"as part of a sentence\"},\n  { idiom: \"No pain, no gain\", meanging: \"You have to work for what you want\", usage: \"by itself\"},\n  { idiom: \"On the ball\", meanging: \"Doing a good job\", usage: \"as part of a sentence\"},\n  { idiom: \"Pull someone's leg\", meanging: \"To joke with someone\", usage: \"as part of a sentence\"},\n  { idiom: \"Pull yourself together\", meanging: \"Calm down\", usage: \"by itself\"},\n  { idiom: \"So far so good\", meanging: \"Things are going well so far\", usage: \"by itself\"},\n  { idiom: \"Speak of the devil\", meanging: \"The person we were just talking about showed up!\", usage: \"by itself\"},\n  { idiom: \"That's the last straw\", meanging: \"My patience has run out\", usage: \"by itself\"},\n  { idiom: \"The best of both worlds\", meanging: \"An ideal situation\", usage: \"as part of a sentence\"},\n  { idiom: \"Time flies when you're having fun\", meanging: \"You don't notice how long something lasts when it's fun\", usage: \"by itself\"},\n  { idiom: \"To get bent out of shape\", meanging: \"To get upset\", usage: \"as part of a sentence\"},\n  { idiom: \"To make matters worse\", meanging: \"Make a problem worse\", usage: \"as part of a sentence\"},\n  { idiom: \"Under the weather\", meanging: \"Sick\", usage: \"as part of a sentence\"},\n  { idiom: \"We'll cross that bridge when we come to it\", meanging: \"Let's not talk about that problem right now\", usage: \"by itself\"},\n  { idiom: \"Wrap your head around something\", meanging: \"Understand something complicated\", usage: \"as part of a sentence\"},\n  { idiom: \"You can say that again\", meanging: \"That's true, I agree\", usage: \"by itself\"},\n  { idiom: \"Your guess is as good as mine\", meanging: \"I have no idea\", usage: \"by itself\"},\n  { idiom: \"A bird in the hand is worth two in the bush\", meanging: \"What you have is worth more than what you might have later\", usage: \"by itself\"},\n  { idiom: \"A penny for your thoughts\", meanging: \"Tell me what you're thinking\", usage: \"by itself\"},\n  { idiom: \"A penny saved is a penny earned\", meanging: \"Money you save today you can spend later\", usage: \"by itself\"},\n  { idiom: \"A perfect storm\", meanging: \"the worst possible situation\", usage: \"as part of a sentence\"},\n  { idiom: \"A picture is worth 1000 words\", meanging: \"Better to show than tell\", usage: \"by itself\"},\n  { idiom: \"Actions speak louder than words\", meanging: \"Believe what people do and not what they say\", usage: \"by itself\"},\n  { idiom: \"Add insult to injury\", meanging: \"To make a bad situation worse\", usage: \"as part of a sentence\"},\n  { idiom: \"Barking up the wrong tree\", meanging: \"To be mistaken, to be looking for solutions in the wrong place\", usage: \"as part of a sentence\"},\n  { idiom: \"Birds of a feather flock together\", meanging: \"People who are alike are often friends (usually used negatively)\", usage: \"by itself\"},\n  { idiom: \"Bite off more than you can chew\", meanging: \"Take on a project that you cannot finish\", usage: \"as part of a sentence\"},\n  { idiom: \"Break the ice\", meanging: \"Make people feel more comfortable\", usage: \"as part of a sentence\"},\n  { idiom: \"By the skin of your teeth\", meanging: \"Just barely\", usage: \"as part of a sentence\"},\n  { idiom: \"Comparing apples to oranges\", meanging: \"Comparing two things that cannot be compared\", usage: \"as part of a sentence\"},\n  { idiom: \"Costs an arm and a leg\", meanging: \"Very expensive\", usage: \"as part of a sentence\"},\n  { idiom: \"Do something at the drop of a hat\", meanging: \"Do something without having planned beforehand\", usage: \"as part of a sentence\"},\n  { idiom: \"Do unto others as you would have them do unto you\", meanging: \"Treat people fairly. Also known as \\\"The Golden Rule\\\"\", usage: \"by itself\"},\n  { idiom: \"Don't count your chickens before they hatch\", meanging: \"Don't count on something good happening until it's happened.\", usage: \"by itself\"},\n  { idiom: \"Don't cry over spilt milk\", meanging: \"There's no reason to complain about something that can't be fixed\", usage: \"by itself\"},\n  { idiom: \"Don't give up your day job\", meanging: \"You're not very good at this\", usage: \"by itself\"},\n  { idiom: \"Don't put all your eggs in one basket\", meanging: \"What you're doing is too risky\", usage: \"by itself\"},\n  { idiom: \"Every cloud has a silver lining\", meanging: \"Good things come after bad things\", usage: \"by itself\"},\n  { idiom: \"Get a taste of your own medicine\", meanging: \"Get treated the way you've been treating others (negative)\", usage: \"as part of a sentence\"},\n  { idiom: \"Give someone the cold shoulder\", meanging: \"Ignore someone\", usage: \"as part of a sentence\"},\n  { idiom: \"Go on a wild goose chase\", meanging: \"To do something pointless\", usage: \"as part of a sentence\"},\n  { idiom: \"Good things come to those who wait\", meanging: \"Be patient\", usage: \"by itself\"},\n  { idiom: \"He has bigger fish to fry\", meanging: \"He has bigger things to take care of than what we are talking about now\", usage: \"by itself\"},\n  { idiom: \"He's a chip off the old block\", meanging: \"The son is like the father\", usage: \"by itself\"},\n  { idiom: \"Hit the nail on the head\", meanging: \"Get something exactly right\", usage: \"by itself\"},\n  { idiom: \"Ignorance is bliss\", meanging: \"You're better off not knowing\", usage: \"by itself\"},\n  { idiom: \"It ain't over till the fat lady sings\", meanging: \"This isn't over yet\", usage: \"by itself\"},\n  { idiom: \"It takes one to know one\", meanging: \"You're just as bad as I am\", usage: \"by itself\"},\n  { idiom: \"It's a piece of cake\", meanging: \"It's easy\", usage: \"by itself\"},\n  { idiom: \"It's raining cats and dogs\", meanging: \"It's raining hard\", usage: \"by itself\"},\n  { idiom: \"Kill two birds with one stone\", meanging: \"Get two things done with a single action\", usage: \"by itself\"},\n  { idiom: \"Let the cat out of the bag\", meanging: \"Give away a secret\", usage: \"as part of a sentence\"},\n  { idiom: \"Live and learn\", meanging: \"I made a mistake\", usage: \"by itself\"},\n  { idiom: \"Look before you leap\", meanging: \"Take only calculated risks\", usage: \"by itself\"},\n  { idiom: \"On thin ice\", meanging: \"On probation. If you make another mistake, there will be trouble.\", usage: \"as part of a sentence\"},\n  { idiom: \"Once in a blue moon\", meanging: \"Rarely\", usage: \"as part of a sentence\"},\n  { idiom: \"Play devil's advocate\", meanging: \"To argue the opposite, just for the sake of argument\", usage: \"as part of a sentence\"},\n  { idiom: \"Put something on ice\", meanging: \"Put a projet on hold\", usage: \"as part of a sentence\"},\n  { idiom: \"Rain on someone's parade\", meanging: \"To spoil something\", usage: \"as part of a sentence\"},\n  { idiom: \"Saving for a rainy day\", meanging: \"Saving money for later\", usage: \"as part of a sentence\"},\n  { idiom: \"Slow and steady wins the race\", meanging: \"Reliability is more important than speed\", usage: \"by itself\"},\n  { idiom: \"Spill the beans\", meanging: \"Give away a secret\", usage: \"as part of a sentence\"},\n  { idiom: \"Take a rain check\", meanging: \"Postpone a plan\", usage: \"as part of a sentence\"},\n  { idiom: \"Take it with a grain of salt\", meanging: \"Don’t take it too seriously\", usage: \"as part of a sentence\"},\n  { idiom: \"The ball is in your court\", meanging: \"It's your decision\", usage: \"by itself\"},\n  { idiom: \"The best thing since sliced bread\", meanging: \"A really good invention\", usage: \"as part of a sentence\"},\n  { idiom: \"The devil is in the details\", meanging: \"It looks good from a distance, but when you look closer, there are problems\", usage: \"by itself\"},\n  { idiom: \"The early bird gets the worm\", meanging: \"The first people who arrive will get the best stuff\", usage: \"by itself\"},\n  { idiom: \"The elephant in the room\", meanging: \"The big issue, the problem people are avoiding\", usage: \"as part of a sentence\"},\n  { idiom: \"The whole nine yards\", meanging: \"Everything, all the way.\", usage: \"as part of a sentence\"},\n  { idiom: \"There are other fish in the sea\", meanging: \"It's ok to miss this opportunity. Others will arise.\", usage: \"by itself\"},\n  { idiom: \"There's a method to his madness\", meanging: \"He seems crazy but actually he's clever\", usage: \"by itself\"},\n  { idiom: \"There's no such thing as a free lunch\", meanging: \"Nothing is entirely free\", usage: \"by itself\"},\n  { idiom: \"Throw caution to the wind\", meanging: \"Take a risk\", usage: \"as part of a sentence\"},\n  { idiom: \"You can't have your cake and eat it too\", meanging: \"You can't have everything\", usage: \"by itself\"},\n  { idiom: \"You can't judge a book by its cover\", meanging: \"This person or thing may look bad, but it's good inside\", usage: \"by itself\"},\n  { idiom: \"A little learning is a dangerous thing\", meanging: \"People who don't understand something fully are dangerous\", usage: \"by itself\"},\n  { idiom: \"A snowball effect\", meanging: \"Events have momentum and build upon each other\", usage: \"as part of a sentence\"},\n  { idiom: \"A snowball's chance in hell\", meanging: \"No chance at all\", usage: \"as part of a sentence\"},\n  { idiom: \"A stitch in time saves nine\", meanging: \"Fix the problem now because it will get worse later\", usage: \"by itself\"},\n  { idiom: \"A storm in a teacup\", meanging: \"A big fuss about a small problem\", usage: \"as part of a sentence\"},\n  { idiom: \"An apple a day keeps the doctor away\", meanging: \"Apples are good for you\", usage: \"by itself\"},\n  { idiom: \"An ounce of prevention is worth a pound of cure\", meanging: \"You can prevent a problem with little effort. Fixing it later is harder.\", usage: \"by itself\"},\n  { idiom: \"As right as rain\", meanging: \"Perfect\", usage: \"as part of a sentence\"},\n  { idiom: \"Bolt from the blue\", meanging: \"Something that happened without warning\", usage: \"as part of a sentence\"},\n  { idiom: \"Burn bridges\", meanging: \"Destroy relationships\", usage: \"as part of a sentence\"},\n  { idiom: \"Calm before the storm\", meanging: \"Something bad is coming, but right now it's calm\", usage: \"as part of a sentence\"},\n  { idiom: \"Come rain or shine\", meanging: \"No matter what\", usage: \"as part of a sentence\"},\n  { idiom: \"Curiosity killed the cat\", meanging: \"Stop asking questions\", usage: \"by itself\"},\n  { idiom: \"Cut the mustard\", meanging: \"Do a good job\", usage: \"as part of a sentence\"},\n  { idiom: \"Don't beat a dead horse\", meanging: \"Move on, this subject is over\", usage: \"by itself\"},\n  { idiom: \"Every dog has his day\", meanging: \"Everyone gets a chance at least once\", usage: \"by itself\"},\n  { idiom: \"Familiarity breeds contempt\", meanging: \"The better you know someone the less you like him\", usage: \"by itself\"},\n  { idiom: \"Fit as a fiddle\", meanging: \"In good health\", usage: \"as part of a sentence\"},\n  { idiom: \"Fortune favours the bold\", meanging: \"Take risks\", usage: \"by itself\"},\n  { idiom: \"Get a second wind\", meanging: \"Have more energy after having been tired\", usage: \"as part of a sentence\"},\n  { idiom: \"Get wind of something\", meanging: \"Hear news of something secret\", usage: \"as part of a sentence\"},\n  { idiom: \"Go down in flames\", meanging: \"Fail spectacularly\", usage: \"as part of a sentence\"},\n  { idiom: \"Haste makes waste\", meanging: \"You'll make mistakes if you rush through something\", usage: \"by itself\"},\n  { idiom: \"Have your head in the clouds\", meanging: \"Not be concentrating\", usage: \"as part of a sentence\"},\n  { idiom: \"He who laughs last laughs loudest\", meanging: \"I'll get you back for what you did\", usage: \"by itself\"},\n  { idiom: \"Hear something straight from the horse's mouth\", meanging: \"Hear something from the person involved\", usage: \"as part of a sentence\"},\n  { idiom: \"He's not playing with a full deck\", meanging: \"He's dumb\", usage: \"by itself\"},\n  { idiom: \"He's off his rocker\", meanging: \"He's crazy\", usage: \"by itself\"},\n  { idiom: \"He's sitting on the fence\", meanging: \"He can't make up his mind\", usage: \"by itself\"},\n  { idiom: \"It is a poor workman who blames his tools\", meanging: \"If you can't do the job, don't blame it on others\", usage: \"by itself\"},\n  { idiom: \"It is always darkest before the dawn\", meanging: \"Things are going to get better\", usage: \"by itself\"},\n  { idiom: \"It takes two to tango\", meanging: \"One person alone isn't responsible. Both people are involved.\", usage: \"by itself\"},\n  { idiom: \"Jump on the bandwagon\", meanging: \"Follow a trend, do what everyone else is doing\", usage: \"as part of a sentence\"},\n  { idiom: \"Know which way the wind is blowing\", meanging: \"Understand the situation (usually negative)\", usage: \"as part of a sentence\"},\n  { idiom: \"Leave no stone unturned\", meanging: \"Look everywhere\", usage: \"as part of a sentence\"},\n  { idiom: \"Let sleeping dogs lie\", meanging: \"Stop discussing an issue\", usage: \"as part of a sentence\"},\n  { idiom: \"Like riding a bicycle\", meanging: \"Something you never forget how to do\", usage: \"as part of a sentence\"},\n  { idiom: \"Like two peas in a pod\", meanging: \"They're always together\", usage: \"as part of a sentence\"},\n  { idiom: \"Make hay while the sun shines\", meanging: \"Take advantage of a good situation\", usage: \"as part of a sentence\"},\n  { idiom: \"On cloud nine\", meanging: \"Very happy\", usage: \"as part of a sentence\"},\n  { idiom: \"Once bitten, twice shy\", meanging: \"You're more cautious when you've been hurt before\", usage: \"by itself\"},\n  { idiom: \"Out of the frying pan and into the fire\", meanging: \"Things are going from bad to worse\", usage: \"by itself\"},\n  { idiom: \"Run like the wind\", meanging: \"Run fast\", usage: \"as part of a sentence\"},\n  { idiom: \"Shape up or ship out\", meanging: \"Work better or leave\", usage: \"by itself\"},\n  { idiom: \"Snowed under\", meanging: \"Busy\", usage: \"as part of a sentence\"},\n  { idiom: \"That ship has sailed\", meanging: \"It's too late\", usage: \"by itself\"},\n  { idiom: \"The pot calling the kettle black\", meanging: \"Someone criticizing someone else he is just as bad\", usage: \"as part of a sentence\"},\n  { idiom: \"There are clouds on the horizon\", meanging: \"Trouble is coming\", usage: \"by itself\"},\n  { idiom: \"Those who live in glass houses shouldn't throw stones\", meanging: \"People who are morally questionable shouldn't criticize others\", usage: \"by itself\"},\n  { idiom: \"Through thick and thin\", meanging: \"In good times and in bad times\", usage: \"as part of a sentence\"},\n  { idiom: \"Time is money\", meanging: \"Work quickly\", usage: \"by itself\"},\n  { idiom: \"Waste not, want not\", meanging: \"Don't waste things and you'll always have enough\", usage: \"by itself\"},\n  { idiom: \"We see eye to eye\", meanging: \"We agree\", usage: \"by itself\"},\n  { idiom: \"Weather the storm\", meanging: \"Go through something difficult\", usage: \"as part of a sentence\"},\n  { idiom: \"Well begun is half done\", meanging: \"Getting a good start is important\", usage: \"by itself\"},\n  { idiom: \"When it rains it pours\", meanging: \"Everything is going wrong at once\", usage: \"by itself\"},\n  { idiom: \"You can catch more flies with honey than you can with vinegar\", meanging: \"You'll get what you want by being nice\", usage: \"by itself\"},\n  { idiom: \"You can lead a horse to water, but you can't make him drink\", meanging: \"You can't force someone to make the right decision\", usage: \"by itself\"},\n  { idiom: \"You can't make an omelet without breaking some eggs\", meanging: \"There's always a cost to doing something\", usage: \"by itself\"},\n]\n\nexport default idoms","import React, { useState } from 'react'\nimport idoms from '../../data/idioms'\n\nconst Idom = () => {\n  const randomIdomIndex = () => Math.floor(Math.random() * Math.floor(idoms.length))\n  const [idiom, setIdiom] = useState(idoms[randomIdomIndex()])\n\n  const handleNext = () => {\n    setIdiom(idoms[randomIdomIndex()])\n  }\n\n  return (\n    <div className=\"ribbon color\">\n      <button onClick={handleNext}>New Idiom</button>\n      <div>\n        <p className=\"left-text\">Idiom: <span className=\"idiom-value\">{idiom.idiom}</span></p>\n        <p className=\"left-text\">Meaning: <span className=\"idiom-value\">{idiom.meanging}</span> 👈 used {idiom.usage}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Idom","import React from 'react'\nimport './App.css'\nimport Statistics from './components/statistics/Statistics'\nimport AddWord from './components/word/AddWord'\nimport AddCollection from './components/collection/AddCollection'\nimport ListCollection from './components/collection/ListCollection'\nimport Content from './components/content/Content'\nimport Idom from './components/idiom/idiom'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Statistics />\n      <Idom />\n      <div className=\"item-container\">\n        <AddWord />\n        <AddCollection />\n        <ListCollection />\n      </div>\n      <Content />\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux'\nimport statistics from './statistic'\nimport word from './word'\nimport { collection, currentCollection } from './collection'\n\nexport default combineReducers({\n  statistics,\n  word,\n  collection,\n  currentCollection\n})","import { getCollectionWordCount, getTodayWordCount, getTotalWordCount} from '../../utils'\nimport {\n  INCREASE_TODAY_WORD_COUNT,\n  DECREASE_TODAY_WORD_COUNT,\n  SET_COLLECTION_WORD_COUNT,\n  INCREASE_TOTAL_WORD_COUNT,\n  DECREASE_TOTAL_WORD_COUNT,\n  INCREASE_COLLECTION_WORD_COUNT,\n  DECREASE_COLLECTION_WORD_COUNT } from '../../const'\n\nexport default function statistics (\n  state = {\n        collectionWordCount: getCollectionWordCount('default'),\n        todayWordCount: getTodayWordCount(),\n        totalwordCount: getTotalWordCount()},\n    action) {\n  switch(action.type) {\n    case INCREASE_COLLECTION_WORD_COUNT:\n      return {\n        ...state,\n        collectionWordCount: state.collectionWordCount + action.payload\n      }\n    case DECREASE_COLLECTION_WORD_COUNT:\n      return {\n        ...state,\n        collectionWordCount: state.collectionWordCount - action.payload\n      }\n    case SET_COLLECTION_WORD_COUNT:\n        return {\n          ...state,\n          collectionWordCount: action.payload\n        } \n    case INCREASE_TODAY_WORD_COUNT:\n      return {\n        ...state,\n        todayWordCount: state.todayWordCount + action.payload\n      }    \n    case DECREASE_TODAY_WORD_COUNT:\n      return {\n        ...state,\n        todayWordCount: state.todayWordCount - action.payload\n      }    \n    case INCREASE_TOTAL_WORD_COUNT:\n      return {\n        ...state,\n        totalwordCount: state.totalwordCount + action.payload\n      }    \n    case DECREASE_TOTAL_WORD_COUNT:\n      return {\n        ...state,\n        totalwordCount: state.totalwordCount - action.payload\n      }\n      default:\n        return state\n  }\n}\n","import {ADD_WORD, DELETE_WORD, DELETE_WORDS, UPDATE_WORD, HIGHLIGHT_WORD} from '../../const'\n\nexport default function word(\n  state = {\n    addWord: {},\n    deleteWord: {},\n    deleteWords: [],\n    updateWord: {},\n    highlightWord: {}\n  }, action) {\n  switch(action.type) {\n    case ADD_WORD:\n      return {\n        ...state,\n        addWord: action.payload\n      }\n    case DELETE_WORD:\n      return {\n        ...state,\n        deleteWord: action.payload\n      }\n    case DELETE_WORDS:\n      return {\n        ...state,\n        deleteWords: action.payload\n      }\n    case UPDATE_WORD:\n      return {\n        ...state,\n        updateWord: action.payload\n      }\n    case HIGHLIGHT_WORD:\n      return {\n        ...state,\n        highlightWord: action.payload\n      }\n    default:\n      return state\n  }\n}","import {ADD_COLLECTION, DELETE_COLLECTION, UPDATE_COLLECTION, CHOOSE_COLLECTION} from '../../const'\nimport { getDefaultCollection } from '../../utils'\n\nexport function collection(state = {type:'', collection: getDefaultCollection()}, action) {\n  switch(action.type) {\n    case ADD_COLLECTION:\n      return {\n        type: action.type,\n        collection: action.payload\n      }\n    case DELETE_COLLECTION:\n      return {\n        type: action.type,\n        collection: action.payload\n      }\n    case UPDATE_COLLECTION:\n      return {\n        type: action.type,\n        collection: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport function currentCollection(state = getDefaultCollection(), action) {\n  switch(action.type) {\n    case CHOOSE_COLLECTION:\n      return {...action.payload}\n    default:\n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport allReducers from './store/reducers';\nimport { initStorage } from './utils'\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\nconst store = createStore(allReducers, devTools)\n\ninitStorage()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statWrapper\":\"Statistics_statWrapper__2Ydx3\",\"compactLine\":\"Statistics_compactLine__24cO4\",\"fileAction\":\"Statistics_fileAction__2fSWL\",\"verticalSeparate\":\"Statistics_verticalSeparate__1Pmcf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navDropdown\":\"Collection_navDropdown__3F60D\",\"rightMargin\":\"Collection_rightMargin__ojbkb\",\"thick\":\"Collection_thick__3iE8H\",\"flexSapceBetween\":\"Collection_flexSapceBetween__t4o8g\",\"listContainer\":\"Collection_listContainer__surgq\"};"],"sourceRoot":""}