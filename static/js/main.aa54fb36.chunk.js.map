{"version":3,"sources":["components/idiom/Idiom.module.css","components/statistics/Statistics.module.css","components/collection/Collection.module.css","components/dictionary/Dictionary.module.css","utils.js","store/actions/collectionAction.js","const.js","store/actions/index.js","store/actions/statisticAction.js","store/actions/wordAction.js","store/actions/recallAction.js","components/statistics/Statistics.jsx","components/word/AddWord.jsx","components/collection/AddCollection.jsx","components/collection/DeleteButton.jsx","components/collection/UpdateButton.jsx","components/collection/UpdateCollection.jsx","components/collection/SelectCollection.jsx","components/collection/ListCollection.jsx","components/word/UpdateWordModal.jsx","components/word/Word.jsx","components/word/WordDragDrop.jsx","components/word/MoveWordsModal.jsx","components/word/SelectAll.jsx","components/word/WordRecall.jsx","components/word/WordList.jsx","components/dictionary/Dictionary.jsx","components/content/Content.jsx","data/idioms.js","components/idiom/idiom.jsx","App.js","serviceWorker.js","store/reducers/index.js","store/reducers/statistic.js","store/reducers/word.js","store/reducers/collection.js","store/reducers/recall.js","index.js","components/word/Word.module.css","App.module.css","Base.module.css","components/content/Content.module.css"],"names":["module","exports","trackingDates","trackingDatesEmoji","maxTrack","length","getTotalWordCount","getWords","getCollectionWordCount","collectionId","getWordsByCollectionId","getCurrentCollectionWordCount","getCurrentCollection","id","storage","get","getCollectionById","currentCollectionId","setCurrentCollectionId","save","words","filter","w","getTodayWordsByCollectionId","todayDigit","getDateInDigit","word","count","lastVisit","getRecallWords","getCollections","collections","find","c","deleteWordsFromLocalStorage","sw","some","addCollectionToLocalStorage","collection","name","unshift","sortCollection","shiftDays","today","Date","setDate","getDate","month","getMonth","date","monthLeadingZero","dateLeadingZero","parseInt","getFullYear","getDateInString","dateInNumber","year","substring","day","toDateString","updateWordsBackgroundColor","updatingWords","backgroundColor","forEach","u","foundWord","restoreFromFile","content","merge","mergeCollections","mergeWords","mc","found","map","mw","push","defaultCollection","value","mergeWordsToLocalStorage","JSON","parse","localStorage","setItem","stringify","storageStream","getItem","sort","a","b","nameA","toUpperCase","nameB","addCollection","type","payload","action","deleteCollection","updateCollection","chooseCollection","increaseTotalWordCount","number","decreaseTotalWordCount","updateTotalWordCount","increaseCollectionWordCount","decreaseCollectionWordCount","updateCurrentCollectionWordCount","setCollectionWordCount","collectionWordCount","addWord","deleteWord","deleteWords","updateWord","highlightWord","displayRecallWords","hideRecallWords","Statistics","useState","total","setCount","statistics","useSelector","state","currentCollection","recallButton","useRef","dispatch","useDispatch","useEffect","prevState","totalwordCount","className","styles","statWrapper","compactLine","onClick","event","current","innerText","includes","ref","fileAction","fileData","blob","Blob","url","URL","createObjectURL","link","document","createElement","download","href","click","saveToFile","verticalSeparate","htmlFor","accept","onChange","e","fileList","target","files","file","reader","FileReader","onload","result","readAsText","AddWord","setWord","setCollection","baseStyle","newItemContainer","onSubmit","preventDefault","trimedWord","trim","newWord","nanoid","addWordToLocalStorage","inputText","placeholder","maxLength","roundButton","AddCollection","trimedName","newCollection","DeletionButton","title","window","confirm","position","findIndex","colleciontId","moveWordsFromCollectionToDefault","needDefault","deleteCollectionFromLocalStorage","role","aria-label","UpdateButton","setUpdateCollection","UpdateCollection","collenctionName","setCollectionName","handleSubmit","updatedCollection","i","updateCollectionToLocalStorage","onKeyDown","key","keyCode","onBlur","SelectCollection","setCurrentCollection","ListCollection","setCollections","collectionState","latestCurrent","navDropdown","baseStyles","flexSapceBetween","rightMargin","thick","listContainer","UpdateWordModal","props","subtitle","selectCollection","setSelectCollection","closeModal","setModalOpen","isOpen","modalOpen","onAfterOpen","style","color","onRequestClose","ariaHideApp","modalContainer","contentLabel","size","aria-labelledby","centered","_subtitle","toLowerCase","updateWordToLocalStorage","inputUpdate","rightSubmit","pointButton","Word","wordWithCheckbox","checkboxes","setCheckboxes","getWordConfirmation","setConfirm","isSegment","getWordSegment","setIsSegment","hightlight","wordContainer","classNames","wordText","segment","checked","isChecked","newState","checkboxWords","allChecked","every","showAll","isAllSelected","tooltip","data-text","rel","elements","getElementsByName","element","fontWeight","fontStyle","updateWordSegment","pre","wordIndex","getWordMemeoryTimes","updateWordConfirmation","Quote","quote","index","draggableId","provided","innerRef","draggableProps","dragHandleProps","QuoteList","React","memo","quotes","WordDragDrop","setState","onDragEnd","destination","source","list","startIndex","endIndex","Array","from","splice","removed","reorder","reorderedWords","reorderedWordIds","r","updateReorderedWords","q","droppableId","droppableProps","MoveWordsModal","targetCollectionId","movingWords","cw","moveWordsToCollection","leftWord","moveWord","join","SelectAll","openPalette","setOpenPalette","isAllWords","setIsAllWords","setColor","colorPickerContainer","onChangeComplete","hex","threeColumns","undefined","toggle","searchingWords","newWindow","open","opener","shufflingArray","array","j","Math","floor","random","shuffleArray","deleteCount","WordRecall","getElementsByClassName","checkIsAllSelected","WordList","setHighlightWord","wordState","isInRecall","recall","hasWordsInCollection","prevCheckboxes","wordsMovedToDefault","prev","wordsMovedToDefaultWithCheckbox","left","dw","prevCheckboxWords","foundCheckboxWord","needToMoveCollection","wordList","Dictionary","dictionary","setDictionary","handleSelectDict","dictionaryWrapper","squareButton","src","Content","contentContainer","idoms","idiom","meanging","usage","Idom","randomIdomIndex","setIdiom","idiomText","setIdiomText","isDisplay","setIsDisplay","idiomWrapper","idiomButton","hide","ribbon","App","appContainer","scrollThenSticky","preHeader","Boolean","location","hostname","match","combineReducers","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","allReducers","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aa54fb36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"idiomWrapper\":\"Idiom_idiomWrapper__3Q9u2\",\"ribbon\":\"Idiom_ribbon__eeKuD\",\"hide\":\"Idiom_hide__XyOcS\",\"idiomButton\":\"Idiom_idiomButton__1wJ9m\",\"idiomText\":\"Idiom_idiomText__1FvIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statWrapper\":\"Statistics_statWrapper__2Ydx3\",\"compactLine\":\"Statistics_compactLine__24cO4\",\"fileAction\":\"Statistics_fileAction__2fSWL\",\"verticalSeparate\":\"Statistics_verticalSeparate__1Pmcf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navDropdown\":\"Collection_navDropdown__3F60D\",\"rightMargin\":\"Collection_rightMargin__ojbkb\",\"thick\":\"Collection_thick__3iE8H\",\"flexSapceBetween\":\"Collection_flexSapceBetween__t4o8g\",\"listContainer\":\"Collection_listContainer__surgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dictionaryWrapper\":\"Dictionary_dictionaryWrapper__2eT37\",\"squareButton\":\"Dictionary_squareButton__1WZAn\"};","const trackingDates = [0, 1, 1, 2, 2, 4, 6]\n\nconst trackingDatesEmoji = ['0️⃣', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '🏆']\n\nconst maxTrack = trackingDates.length\n\nexport const getTodayWordCount = () => getTodayWords().length\n\nexport const getTotalWordCount = () => getWords().length\n\nexport const getCollectionWordCount = collectionId => getWordsByCollectionId(collectionId).length\n\nexport const getCurrentCollectionWordCount = () => getWordsByCollectionId(getCurrentCollection().id).length\n\nexport const getDefaultCollection = () => ({id: 'default', name: 'default'})\n\nexport const getCurrentCollection = () => {\n  const storage = get()\n  return getCollectionById(storage.currentCollectionId ?? 'default')\n}\n\nexport const setCurrentCollectionId = collectionId => {\n  const storage = get()\n  if(getCollectionById(collectionId)) {\n    storage.currentCollectionId = collectionId\n    save(storage)\n  }\n}\n\nexport const initStorage = () => addCollectionToLocalStorage(getCurrentCollection())\n\nexport const getWords = () => get().words\n\nexport const getWordsByCollectionId = collectionId =>\n  getWords().filter(w => w.collectionId === collectionId)\n\nexport const getTodayWords = () => {\n  const words = getWords()\n  const todayDigit = getDateInDigit()\n  const todayWords = words.filter(word => \n    word.count < maxTrack && (!word.lastVisit || word.lastVisit === todayDigit || word.lastVisit + trackingDates[word.count] <= todayDigit))\n  \n  return todayWords\n}\n\nexport const getTodayWordsByCollectionId = collectionId => {\n  const words = getWordsByCollectionId(collectionId)\n  const todayDigit = getDateInDigit()\n  const todayWords = words.filter(word => \n    word.count < maxTrack && (!word.lastVisit || word.lastVisit === todayDigit || word.lastVisit + trackingDates[word.count] <= todayDigit))\n  \n  return todayWords\n}\n\nexport const getWordCountByCollectionId = collectionId => getTodayWordsByCollectionId(collectionId).length\n\nexport const getRecallWords = () => getWords().filter(w => w.count >= maxTrack)\n\nexport const getCollections = () => get().collections\n\nexport const getCollectionById = id => getCollections().find(c => c.id = id)\n\nexport const getCollectionByName = name => getCollections().find(c => c.name = name)\n\nexport const addWordToLocalStorage = word => {\n  const storage = get()\n  if (storage.words.length === 0) {\n    storage.words = [word]\n    save(storage)\n    return true\n  }\n\n  const found = storage.words.find(w => w.value === word.value && w.collectionId === word.collectionId)\n  if (!found) {\n    storage.words.unshift(word)\n    save(storage)\n    return true\n  }\n  return false\n}\n\nexport const deleteWordsFromLocalStorage = words => {\n  const storage = get()\n  if (storage.words.length === 0 || !words || words.length === 0) {\n    return\n  }\n  storage.words = storage.words.filter(sw => !words.some(w => w.id === sw.id))\n  save(storage)\n}\n\nexport const updateWordToLocalStorage = word => {\n  const storage = get()\n  const { words } = storage\n  const foundWord = words.find(w => w.id === word.id)\n  if (foundWord) {\n    const duplicatedWordInTheSameCollectionIndex = \n      words.findIndex(w => w.value === word.value && w.collectionId === word.collectionId)\n    if(duplicatedWordInTheSameCollectionIndex !== -1) {\n      storage.words = words.filter(w => w.id !== foundWord.id)\n    } else {\n      foundWord.value = word.value\n      foundWord.collectionId = word.collectionId\n    }\n    save(storage)\n  }\n}\n\nexport const mergeWordsToLocalStorage = merge => {\n  if (!merge) {\n    return\n  }\n\n  const storage = get()\n  let { collections, words } = storage\n  let { collections: mergeCollections, words: mergeWords } = merge\n\n  // merge collection by name\n  if (mergeCollections && mergeCollections.length !== 0) {\n    if (collections.length !== 0) {\n      mergeCollections.forEach(mc => {\n        const found = collections.find(c => c.name === mc.name)\n        if (found) {\n          if (mergeWords && mergeWords.length !== 0) {\n            mergeWords = mergeWords.map(mw => {\n              if (mw.collectionId === mc.id) {\n                mw.collectionId = found.id\n              }\n              return mw\n            })\n          }\n        }\n        if (!found) {\n          collections.push(mc)\n        }\n      })\n    } else {\n      storage.collections = mergeCollections\n    }\n    // always set default collection at the last position:\n    const defaultCollection = storage.collections.find(c => c.name === 'default')\n    storage.collections = storage.collections.filter(c => c.name !== 'default')\n    storage.collections.push(defaultCollection)\n    storage.collections = sortCollection(storage.collections)\n  }\n\n  // merge words\n  if (mergeWords && mergeWords.length !== 0) {\n    if (words.length !== 0) {\n      mergeWords.forEach(mw => {\n        const found = words.find(w => w.value === mw.value && w.collectionId === mw.collectionId)\n        if (!found) {\n          words.push(mw)\n        }\n      })\n    } else {\n      storage.words = mergeWords\n    }\n  }\n\n  save(storage)\n}\n\nexport const moveWordsFromCollectionToDefault = collection => {\n  const storage = get()\n  if (storage.collections.length === 0) {\n    storage.collections = [getCurrentCollection()]\n  }\n  const { words } = storage\n  if (words.length !== 0) {\n    words.forEach(w => {\n      if (w.collectionId === collection.id) {\n        w.collectionId = 'default'\n      }\n    })\n  }\n  // dedupe merged words:\n  storage.words = words.filter((word, position) => \n    words.findIndex(w => w.value === word.value && w.colleciontId === word.colleciontId) === position)\n\n  save(storage)\n}\n\nexport const moveWordsToCollection = (movingWords, targetCollectionId) => {\n  if (!movingWords || movingWords.length === 0 || !targetCollectionId) {\n    return\n  }\n\n  const storage = get()\n  const { collections, words } = storage\n  const found = collections.find(c => c.id === targetCollectionId)\n  if(found) {\n    storage.words = words.map(w => {      \n      const foundWord = movingWords.find(mw => mw.id === w.id)\n      if(foundWord) {\n        foundWord.collectionId = targetCollectionId\n        return foundWord\n      }\n      return w\n    })\n  }\n\n  // dedupe merged words:\n  storage.words = storage.words.filter((word, position) => \n    words.findIndex(w => w.value === word.value && w.colleciontId === word.colleciontId) === position)\n\n  save(storage)\n}\n\nexport const addCollectionToLocalStorage = collection => {\n  let storage = get()\n  if (storage.collections.length === 0) {\n    storage.collections = [collection]\n    save(storage)\n    return true\n  }\n\n  const found = storage.collections.find(c => c.name === collection.name)\n  if (!found) {\n    storage.collections.unshift(collection)\n    storage.collections = sortCollection(storage.collections)\n    save(storage)\n    return true\n  }\n  return false\n}\n\nexport const deleteCollectionFromLocalStorage = collection => {\n  let storage = get()\n  if (storage.collections.length === 0) {\n    return\n  }\n\n  let needDefault = false\n  storage.collections = storage.collections.filter(c => c.id !== collection.id)\n  if (storage.words.length !== 0) {\n    storage.words = storage.words.map(w => {\n      if (w.collectionId === collection.id) {\n        w.collectionId = 'default'\n        needDefault = true\n      }\n      return w\n    })\n  }\n\n  if (needDefault) {\n    const found = storage.collections.find(c => c.id === 'default')\n    if (!found) {\n      storage.collections.push(getCurrentCollection())\n    }\n  }\n  save(storage)\n}\n\nexport const updateCollectionToLocalStorage = collection => {\n  let storage = get()\n  if (storage.collections.length === 0) {\n    return\n  }\n  const { collections } = storage\n  let found = false\n  for (const i in collections) {\n    if (collections[i].id === collection.id) {\n       collections[i].name = collection.name;\n       found = true\n       break;\n    }\n  }\n\n  if (!found) {\n    return\n  }\n\n  save(storage)\n}\n\nexport const getCollectionsFromLocalStorage = () => {\n  const storage = get()\n  if (storage.collections.length === 0) {\n    return []\n  }\n\n  return storage.collections\n}\n\nexport const getDateInDigit = (shiftDays = 0) => {\n  const today = new Date()\n  if (shiftDays !== 0) {\n    today.setDate(today.getDate() + shiftDays)\n  }\n  const month = today.getMonth() + 1\n  const date = today.getDate()\n  let monthLeadingZero = `${month}`\n  let dateLeadingZero = `${date}`\n  if (month < 10) {\n    monthLeadingZero = `0${month}`\n  }\n  if (date < 10) {\n    dateLeadingZero = `0${date}`\n  }\n  return parseInt(`${today.getFullYear()}${monthLeadingZero}${dateLeadingZero}`, 10)\n}\n\nexport const getDateInString = dateInNumber => {\n  const year = `${dateInNumber}`.substring(0, 4)\n  const month = `${dateInNumber}`.substring(4, 6)\n  const day = `${dateInNumber}`.substring(6, 8)\n  const date = new Date(`${year}-${month}-${day}`)\n  return date.toDateString()\n}\n\nexport const getWordConfirmation = word => {\n  const storage  = get()\n  const { words } = storage\n\n  if (words.length === 0) {\n    return false\n  }\n\n  const foundWord = words.find(w => w.id === word.id)\n  if (!foundWord) {\n    return false\n  }\n\n  const todayDigit = getDateInDigit()\n  return foundWord.lastVisit === todayDigit\n}\n\nexport const updateWordConfirmation = (word, confirm) => {\n  const storage  = get()\n  const { words } = storage\n\n  if (words.length === 0) {\n    return\n  }\n\n  const foundWord = words.find(w => w.id === word.id)\n  if (foundWord) {\n    const todayDigit = getDateInDigit()\n    if (confirm) {\n      foundWord.lastVisit = todayDigit\n      if (foundWord.count < maxTrack) {\n        foundWord.count += 1\n      }\n    } else {\n      foundWord.lastVisit = todayDigit - 1\n      if (foundWord.count > 0) {\n        foundWord.count -= 1\n      }\n    }\n    save(storage)\n  }\n}\n\nexport const getWordMemeoryTimes = word => {\n  const storage  = get()\n  const { words } = storage\n\n  if (words.length === 0) {\n    return '☢️'\n  }\n\n  const foundWord = words.find(w => w.id === word.id)\n  if (!foundWord) {\n    return '☢️'\n  }\n  \n  return trackingDatesEmoji[foundWord.count]\n}\n\nexport const updateWordSegment = (word, isSegment) => {\n  const storage  = get()\n  const { words } = storage\n\n  if (words.length === 0) {\n    return\n  }\n\n  const foundWord = words.find(w => w.id === word.id)\n  if (foundWord) {\n    foundWord.isSegment = isSegment\n    save(storage)\n  }\n}\n\nexport const getWordSegment = (word) => {\n  const storage  = get()\n  const { words } = storage\n\n  if (words.length === 0) {\n    return false\n  }\n\n  const foundWord = words.find(w => w.id === word.id)\n  if (foundWord) {\n    return !!foundWord.isSegment\n  }\n\n  return false\n}\n\nexport const updateReorderedWords = (reorderedWords) => {\n  if (!reorderedWords && !reorderedWords.length) {\n    return\n  }\n\n  const storage  = get()\n  let { words } = storage\n\n  if (words.length === 0) {\n    return\n  }\n\n  const reorderedWordIds = reorderedWords.map(r => r.id)\n  words = words.filter((w) => !reorderedWordIds.includes(w.id))\n  words.push(...reorderedWords)\n  storage.words = words\n  save(storage)\n}\n\nexport const updateWordsBackgroundColor = (updatingWords, backgroundColor) => {\n  const storage  = get()\n  const { words } = storage\n\n  if (words.length === 0) {\n    return\n  }\n\n  updatingWords.forEach(u => {\n    const foundWord = words.find(w => w.id === u.id)\n    if (foundWord) {\n      foundWord.backgroundColor = backgroundColor\n    }\n  })\n  save(storage)\n}\n\nexport const getWordsBackgroundColor = (word) => {\n  const storage  = get()\n  const { words } = storage\n\n  if (words.length === 0) {\n    return undefined\n  }\n\n  const foundWord = words.find(w => w.id === word.id)\n  if (foundWord) {\n    return foundWord.backgroundColor\n  }\n\n  return undefined\n}\n\nexport const saveToFile = () => {\n  const fileData = JSON.stringify(get())\n  const blob = new Blob([fileData], {type: \"text/plain\"})\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.download = 'MyWords.json'\n  link.href = url\n  link.click()\n}\n\nexport const restoreFromFile = (content) => mergeWordsToLocalStorage(JSON.parse(content))\n\nexport const save = storage => \n  localStorage.setItem('Eng:Words', JSON.stringify(storage))\n\nexport const get = () => {\n  const storageStream = localStorage.getItem('Eng:Words')\n  if (!storageStream) {\n    return {currentCollectionId: 'default', words:[], collections:[getDefaultCollection()]}\n  }\n\n  const storage = JSON.parse(storageStream)\n\n  if (!storage.words) {\n    storage.words = []\n  }\n  if (!storage.collections) {\n    storage.collections = [getDefaultCollection()]\n  }\n  if (!storage.currentCollectionId) {\n    storage.currentCollectionId = 'default'\n  }\n  return storage\n}\n\nexport const sortCollection = collection => collection.sort((a, b) => {\n  var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n  var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n\n  // names must be equal\n  return 0;\n})\n\nexport const shuffleArray = shufflingArray => {\n  const array = [...shufflingArray]\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array\n}","import {ADD_COLLECTION, DELETE_COLLECTION, UPDATE_COLLECTION, CHOOSE_COLLECTION } from '../../const'\n\nexport const addCollection = collection => ({\n  type: ADD_COLLECTION,\n  payload: {\n    id: collection.id,\n    name: collection.name,\n  }\n})\n\nexport const deleteCollection = collectionId => ({\n  type: DELETE_COLLECTION,\n  payload: {\n    id: collectionId\n  }\n})\n\nexport const updateCollection = collection => ({\n  type: UPDATE_COLLECTION,\n  payload: {\n    id: collection.id,\n    name: collection.name,\n  }\n})\n\nexport const chooseCollection = collection => ({\n  type: CHOOSE_COLLECTION,\n  payload: {\n    id: collection.id,\n    name: collection.name\n  }\n})","export const ADD_WORD = 'ADD_WORD'\nexport const DELETE_WORD = 'DELETE_WORD'\nexport const DELETE_WORDS = 'DELETE_WORDS'\nexport const UPDATE_WORD = 'UPDATE_WORD'\nexport const HIGHLIGHT_WORD = 'HIGHLIGHT_WORD'\n\nexport const ADD_COLLECTION = 'ADD_COLLECTION'\nexport const DELETE_COLLECTION = 'DELETE_COLLECTION'\nexport const UPDATE_COLLECTION = 'UPDATE_COLLECTION'\nexport const CHOOSE_COLLECTION = 'CHOOSE_COLLECTION'\n\nexport const INCREASE_TOTAL_WORD_COUNT = 'INCREASE_TOTAL_WORD_COUNT'\nexport const DECREASE_TOTAL_WORD_COUNT = 'DECREASE_TOTAL_WORD_COUNT'\nexport const UPDATE_TOTAL_WORD_COUNT = 'UPDATE_TOTAL_WORD_COUNT'\nexport const INCREASE_COLLECTION_WORD_COUNT = 'INCREASE_COLLECTION_WORD_COUNT'\nexport const DECREASE_COLLECTION_WORD_COUNT = 'DECREASE_COLLECTION_WORD_COUNT'\nexport const UPDATE_CURRENT_COLLECTION_WORD_COUNT = 'UPDATE_CURRENT_COLLECTION_WORD_COUNT'\nexport const SET_COLLECTION_WORD_COUNT = 'SET_COLLECTION_WORD_COUNT'\n\nexport const DISPLAY_RECALL_WORDS = 'DISPLAY_RECALL_WORDS'\nexport const HIDE_RECALL_WORDS = 'HIDE_RECALL_WORDS'\n\nexport const INPUT_MAX_LENGTH = '50'","import {addCollection, deleteCollection, updateCollection, chooseCollection} from './collectionAction'\nimport {increaseTotalWordCount, decreaseTotalWordCount, updateTotalWordCount, increaseCollectionWordCount, decreaseCollectionWordCount, updateCurrentCollectionWordCount,   setCollectionWordCount } from './statisticAction'\nimport {addWord, deleteWord, deleteWords, updateWord, highlightWord} from './wordAction'\nimport {displayRecallWords, hideRecallWords} from './recallAction'\n\nconst action = {\n  addCollection, deleteCollection, updateCollection, chooseCollection,\n  increaseTotalWordCount, decreaseTotalWordCount, updateTotalWordCount, increaseCollectionWordCount, decreaseCollectionWordCount, updateCurrentCollectionWordCount, setCollectionWordCount,\n  addWord, deleteWord, deleteWords, updateWord, highlightWord,\n  displayRecallWords, hideRecallWords\n}\n\nexport default action","import {\n  INCREASE_TOTAL_WORD_COUNT,\n  DECREASE_TOTAL_WORD_COUNT,\n  UPDATE_TOTAL_WORD_COUNT,\n  INCREASE_COLLECTION_WORD_COUNT,\n  DECREASE_COLLECTION_WORD_COUNT,\n  UPDATE_CURRENT_COLLECTION_WORD_COUNT,\n  SET_COLLECTION_WORD_COUNT } from '../../const'\n\nexport const increaseTotalWordCount = number => ({\n  type: INCREASE_TOTAL_WORD_COUNT,\n  payload: number,\n})\n\nexport const decreaseTotalWordCount = number => ({\n  type: DECREASE_TOTAL_WORD_COUNT,\n  payload: number,\n})\n\nexport const updateTotalWordCount = () => ({\n  type: UPDATE_TOTAL_WORD_COUNT,\n})\n\nexport const increaseCollectionWordCount = number => ({\n  type: INCREASE_COLLECTION_WORD_COUNT,\n  payload: number,\n})\n\nexport const decreaseCollectionWordCount = number => ({\n  type: DECREASE_COLLECTION_WORD_COUNT,\n  payload: number,\n})\n\nexport const updateCurrentCollectionWordCount = () => ({\n  type: UPDATE_CURRENT_COLLECTION_WORD_COUNT,\n})\n\nexport const setCollectionWordCount = collectionWordCount => ({\n  type: SET_COLLECTION_WORD_COUNT,\n  payload: collectionWordCount\n})","import {ADD_WORD, DELETE_WORD, DELETE_WORDS, UPDATE_WORD, HIGHLIGHT_WORD } from '../../const'\n\nexport const addWord = word => ({\n  type: ADD_WORD,\n  payload: word\n})\n\nexport const deleteWord = word => ({\n  type: DELETE_WORD,\n  payload: word\n})\n\nexport const deleteWords = words => ({\n  type: DELETE_WORDS,\n  payload: words\n})\n\nexport const updateWord = word => ({\n  type: UPDATE_WORD,\n  payload: word\n})\n\nexport const highlightWord = word => ({\n  type: HIGHLIGHT_WORD,\n  payload: word\n})","import {DISPLAY_RECALL_WORDS, HIDE_RECALL_WORDS } from '../../const'\n\nexport const displayRecallWords = () => ({\n  type: DISPLAY_RECALL_WORDS,\n})\n\nexport const hideRecallWords = () => ({\n  type: HIDE_RECALL_WORDS,\n})","import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getCollectionWordCount, getRecallWords, restoreFromFile, saveToFile } from '../../utils';\nimport styles from './Statistics.module.css'\nimport action from '../../store/actions'\n\nexport default function Statistics() {\n  const [count, setCount] = useState({total: 0, collection: 0})\n  const statistics = useSelector(state => state.statistics)\n  const currentCollection = useSelector(state => state.currentCollection)\n  const recallButton = useRef(null)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const collectionWordCount = getCollectionWordCount(currentCollection.id)\n    setCount(prevState => ({total: prevState.total, collection: collectionWordCount}))\n  }, [currentCollection])\n\n  useEffect(() => {\n    setCount({total: statistics.totalwordCount, collection: statistics.collectionWordCount})\n  }, [statistics])\n\n  const handleSave = () => saveToFile()\n  const handleRestore = e => {\n    const fileList = e.target.files\n    if (fileList.length > 0) {\n      const file = fileList[0]\n      const reader = new FileReader();\n      reader.onload = (function(reader)\n      {\n          return function()\n          {\n              const content = reader.result\n              restoreFromFile(content)\n          }\n      })(reader);\n\n      reader.readAsText(file)\n    }\n  }\n\n  function handleRecall(event) {\n    const text = recallButton.current.innerText\n    if (text.includes('Recall Words')) {\n      recallButton.current.innerText = 'Back to Collection'\n      dispatch(action.displayRecallWords())\n    } else {\n      recallButton.current.innerText = `Recall Words: ${getRecallWords().length}`\n      dispatch(action.hideRecallWords())\n    }\n  }\n\n  return (\n    <div className={styles.statWrapper}>\n      <p className={styles.compactLine}>Total Words: <strong> {count.total || '⏰'}</strong></p>\n      <p className={styles.compactLine}>Collection Words: <strong>{count.collection || '⏰'}</strong></p>\n      <button className={styles.compactLine} onClick={handleRecall} ref={recallButton}>Recall Words: {getRecallWords().length}</button>\n      <div className={styles.fileAction}>\n        <button onClick={handleSave}>Download My Words</button>\n        <div className={styles.verticalSeparate}></div>\n        <form>\n          <label htmlFor=\"restoreFromFile\"><strong>Apply your Words:</strong></label>\n          <input type='file' id=\"restoreFromFile\" accept=\".json\" onChange={handleRestore}></input> \n        </form>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { nanoid } from 'nanoid'\nimport action from '../../store/actions'\nimport { addWordToLocalStorage, getDateInDigit, getCurrentCollection } from '../../utils'\nimport baseStyle from '../../Base.module.css'\nimport { INPUT_MAX_LENGTH } from '../../const';\n\nexport default function AddWord() {\n  const [word, setWord] = useState('')\n  const [collection, setCollection] = useState(getCurrentCollection())\n  const currentCollection = useSelector(state => state.currentCollection)\n  const dispatch = useDispatch()\n\n  const handleChange = e => {\n    setWord(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (word) {\n      const trimedWord = word.trim()\n      if (trimedWord.length > 0) {\n        const newWord = {\n          id: nanoid(),\n          collectionId: collection.id,\n          value: trimedWord,\n          count: 0,\n          date: getDateInDigit()\n        }\n        const added = addWordToLocalStorage(newWord)\n        if (added) {\n          dispatch(action.addWord(newWord))\n          dispatch(action.increaseTotalWordCount(1))\n          dispatch(action.increaseCollectionWordCount(1))\n        }\n      }\n    }\n    setWord('')\n  }\n\n  useEffect(() => {\n    setCollection(currentCollection)\n  }, [currentCollection])\n\n  return (\n    <div className={baseStyle.newItemContainer}>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"addWord\">New word:</label>\n        <input className={baseStyle.inputText} type=\"text\" id=\"addWord\" value={word} onChange={handleChange} placeholder=\"Add word\" maxLength={INPUT_MAX_LENGTH}/>\n        <input className={baseStyle.roundButton} type=\"submit\" value=\"➕\"/>\n      </form>\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addCollection } from '../../store/actions/collectionAction'\nimport { addCollectionToLocalStorage } from '../../utils'\nimport { nanoid } from 'nanoid'\nimport baseStyle from '../../Base.module.css'\nimport { INPUT_MAX_LENGTH } from '../../const';\n\n export default function AddCollection() {\n  const [collection, setCollection] = useState('')\n  const dispatch = useDispatch()\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    if (collection) {\n      const trimedName = collection.trim()\n      if (trimedName.length > 0) {        \n        const newCollection = {\n          id: nanoid(),\n          name: trimedName\n        }\n        addCollectionToLocalStorage(newCollection)\n        dispatch(addCollection(newCollection))\n      }\n    }\n    setCollection('')\n  }\n\n  function handleChange(event) {\n    setCollection(event.target.value)\n  }\n\n  return (\n    <div className={baseStyle.newItemContainer}>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"newCollection\">New collection:</label>\n        <input className={baseStyle.inputText} type=\"text\" id=\"newCollection\" value={collection} onChange={handleChange} placeholder=\"Add collection\" maxLength={INPUT_MAX_LENGTH}/>\n        <input className={baseStyle.roundButton} type=\"submit\" value=\"➕\"/>\n      </form>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { deleteCollectionFromLocalStorage, moveWordsFromCollectionToDefault } from '../../utils'\nimport action from '../../store/actions'\n\nexport default function DeletionButton({collection}) {\n  const dispatch = useDispatch()\n\n  function deleteCollection() {\n    if (collection.name === 'default') {\n      window.confirm('⏹ You can\\'t remove default collection')\n    } else {\n      if (window.confirm(`⚠️ Once the ${collection.name} collection has been removed, the words underneath will be moved into default collection`)) {\n        moveWordsFromCollectionToDefault(collection)\n        deleteCollectionFromLocalStorage(collection)\n        dispatch(action.deleteCollection(collection.id))\n        dispatch(action.updateCurrentCollectionWordCount())\n        dispatch(action.updateTotalWordCount())\n      }\n    }\n  }\n\n  return <button title=\"👆Click to delete collection\" onClick={deleteCollection}><span role=\"img\" aria-label=\"trash bin\">🗑</span></button>\n}","import React from 'react'\n\nexport default function UpdateButton({collection, setUpdateCollection}) {\n\n  function updateCollection() {\n    if (collection.name === 'default') {\n      window.confirm('⏹ You can\\'t update default collection')\n    } else {\n      setUpdateCollection(collection)\n    }\n  }\n\n  return <button title=\"👆Click to change collection name\" onClick={updateCollection}><span role=\"img\" aria-label=\"gear\">✍️</span></button>\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport action from '../../store/actions';\nimport { updateCollectionToLocalStorage } from '../../utils';\nimport { INPUT_MAX_LENGTH } from '../../const';\n\nexport default function UpdateCollection({collection, setUpdateCollection}) {\n  const [collenctionName, setCollectionName] = useState(collection.name)\n  const dispatch = useDispatch()\n\n  function handleChange(event) {\n    setCollectionName(event.target.value)\n  }\n\n  function onKeyDown(event) {\n    if (event.key === 'Enter' || event.keyCode === 13) {\n      handleSubmit(event)\n    }\n  }\n\n  function onBlur(event) {\n    handleSubmit(event)\n  }\n\n  function handleSubmit(event) {\n    const updatedCollection = {id: collection.id, name: event.target.value}\n    setUpdateCollection({})\n    updateCollectionToLocalStorage(updatedCollection)\n    dispatch(action.updateCollection(updatedCollection))\n  }\n\n  return <input type=\"text\" value={collenctionName} title=\"👉Press enter to confirm👈🏿\" onChange={handleChange} onKeyDown={onKeyDown} onBlur={onBlur} maxLength={INPUT_MAX_LENGTH}></input>\n}","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport action from '../../store/actions'\nimport UpdateCollection from './UpdateCollection'\nimport { getCollectionWordCount, setCurrentCollectionId } from '../../utils';\n\nexport default function SelectCollection({collection, updateCollection, setUpdateCollection, setCurrentCollection}) {\n  const dispatch = useDispatch()\n\n  function selectCollection() {\n    setCurrentCollectionId(collection.id)\n    setCurrentCollection({...collection})\n    dispatch(action.chooseCollection(collection))\n    dispatch(action.setCollectionWordCount(getCollectionWordCount(collection.id)))\n  }\n\n  return (\n    <>\n    {collection.id && updateCollection.id && collection.id === updateCollection.id ? \n      <UpdateCollection collection={collection} setUpdateCollection={setUpdateCollection}/> : \n      <div onClick={selectCollection}>{collection.name}</div>}\n    </>\n  )\n\n}","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport className from 'classnames'\nimport styles from './Collection.module.css'\nimport baseStyles from '../../Base.module.css'\nimport { getCollections, getCurrentCollection, setCurrentCollectionId } from '../../utils'\nimport action from '../../store/actions'\nimport DeleteButton from './DeleteButton'\nimport Updatebutton from './UpdateButton'\nimport SelectCollection from './SelectCollection'\n\nexport default function ListCollection() {\n  const [collections, setCollections] = useState([])\n  const [currentCollection, setCurrentCollection] = useState(getCurrentCollection())\n  const [updateCollection, setUpdateCollection] = useState({})\n  const collectionState = useSelector(state => state.collection)\n  const dispatch = useDispatch()\n\n  useEffect(() => { \n    const collections = getCollections()\n    const latestCurrent = collections.find(c => c.id === currentCollection.id)\n    if (!latestCurrent) { // currentCollection was deleted, get the next available from store\n      setCurrentCollectionId(collections[0].id)\n      dispatch(action.chooseCollection(collections[0]))\n      setCurrentCollection(collections[0])\n    } else if (latestCurrent.name !== currentCollection.name) { // currentCollection was updated, update with latest\n      setCurrentCollectionId(latestCurrent.id)\n      dispatch(action.chooseCollection(latestCurrent))\n      setCurrentCollection(latestCurrent)\n    }\n\n    // Replace line 33 with 34 as we plan to still keep selected collection in the dropdown list\n    // const dropdown = collections.filter(c => c.name !== currentCollection.name)\n    const dropdown = collections\n    setCollections(dropdown)\n  }, [collectionState, currentCollection, dispatch])\n\n  return (\n    <div className={className(styles.navDropdown, baseStyles.newItemContainer)}>\n      <nav id=\"choose-collection\" role=\"navigation\">\n        <ul>\n          <li>\n            <div className={styles.flexSapceBetween}>\n              <span className={styles.rightMargin}>Current Collection:</span>\n              <span className={className(styles.rightMargin, styles.thick)}>\n                <SelectCollection collection={currentCollection} updateCollection={updateCollection} setUpdateCollection={setUpdateCollection} setCurrentCollection={setCurrentCollection}/>\n              </span>\n              <Updatebutton collection={currentCollection} setUpdateCollection={setUpdateCollection}/>\n              <DeleteButton collection={currentCollection}/>\n            </div>\n            <ul>\n              {collections.length > 0 ? collections.map(c => \n                <li className={styles.listContainer} key={c.id}>\n                  <SelectCollection collection={c} updateCollection={updateCollection} setUpdateCollection={setUpdateCollection} setCurrentCollection={setCurrentCollection}/>\n                  <Updatebutton collection={c} setUpdateCollection={setUpdateCollection}/>\n                  <DeleteButton collection={c}/>\n                </li>\n              ) : <li>Add your collection   </li>}              \n            </ul>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport action from '../../store/actions'\nimport className from 'classnames'\nimport { getCollections, getCurrentCollection } from '../../utils'\nimport styles from './Word.module.css';\nimport { INPUT_MAX_LENGTH } from '../../const';\nimport { updateWordToLocalStorage } from '../../utils'\n\nexport default function UpdateWordModal(props) {\n  let subtitle\n  const dispatch = useDispatch()\n  const [word, setWord] = useState(props.word.value)\n  const [collections, setCollections] = useState([getCurrentCollection()])\n  const [selectCollection, setSelectCollection] = useState(props.word.collectionId)\n  const collectionState = useSelector(state => state.collection)\n\n  useEffect(() => {\n    setCollections(getCollections())\n  }, [collectionState])\n \n  const afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00'\n  }\n \n  const closeModal = () => {\n    props.setModalOpen(false)\n  }\n\n  const handleChange = e => {\n    setWord(e.target.value)\n  }\n\n  const handleSelectCollection = e => {\n    setSelectCollection(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (e.target[0].value) {\n      const trimedWord = e.target[0].value.trim()\n      if (trimedWord) {\n        if (trimedWord.toLowerCase() !== props.word.value.toLowerCase() ||\n            e.target[1].value !== props.word.collectionId) {\n              const updateWord = {\n                id: props.word.id,\n                collectionId: e.target[1].value,\n                value: trimedWord,\n                count: props.word.count,\n                date: props.word.date\n              }\n              updateWordToLocalStorage(updateWord)\n\n              if (e.target[1].value !== props.word.collectionId) {\n                dispatch(action.decreaseCollectionWordCount(1))\n                dispatch(action.updateTotalWordCount())\n              }\n              dispatch(action.updateWord(updateWord))\n        }\n      }\n    }\n    closeModal()\n  }\n\n  return (\n    <Modal\n      isOpen={props.modalOpen}\n      onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      ariaHideApp={false}\n      className={styles.modalContainer}\n      contentLabel=\"Update Word\"\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <h2 ref={_subtitle => (subtitle = _subtitle)}>Edit your word:</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"updateWord\">Original Word <span role=\"img\" aria-label=\"writing hand\">✍️</span>:</label>\n        <input className={styles.inputUpdate} type=\"text\" id=\"updateWord\" value={word} onChange={handleChange} maxLength={INPUT_MAX_LENGTH}/>\n        <select name=\"collections\" id=\"collections\" onChange={handleSelectCollection} value={selectCollection}>\n          {collections && collections.length > 0 && collections.map(c => <option key={c.id} value={c.id}>{c.name}</option>)}\n        </select>\n        <input className={className(styles.rightSubmit, styles.pointButton)} type=\"submit\" value=\"Update\"/>\n      </form>\n    </Modal>\n  )\n}","import React, { useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport action from '../../store/actions'\nimport { deleteWordsFromLocalStorage, getDateInString, getWordSegment, getWordConfirmation, getWordMemeoryTimes, updateWordConfirmation, updateWordSegment } from '../../utils'\nimport UpdateWordModal from './UpdateWordModal'\nimport styles from './Word.module.css'\nimport baseStyles from '../../Base.module.css'\nimport classNames from 'classnames'\n\nexport default function Word({ wordWithCheckbox, checkboxes, setCheckboxes}) {\n  const dispatch = useDispatch()\n  const [confirm, setConfirm] = useState(getWordConfirmation(wordWithCheckbox.word))\n  const [modalOpen, setModalOpen] = useState(false)\n  const [isSegment, setIsSegment] = useState(getWordSegment(wordWithCheckbox.word))\n\n  const hightlight = useRef('');\n\n  const handleToggle = () => {\n    updateWordConfirmation(wordWithCheckbox.word, !confirm)\n    setConfirm(!confirm)\n  }\n\n  const handleDelete = () => {\n    if (window.confirm(`⚠️ Are you sure you want to delete this word -> ${wordWithCheckbox.word.value}`)) {\n      deleteWordsFromLocalStorage([wordWithCheckbox.word])\n      dispatch(action.deleteWord(wordWithCheckbox.word))\n      dispatch(action.decreaseTotalWordCount(1))\n      dispatch(action.decreaseCollectionWordCount(1))\n    }\n  }\n\n  const handleHighlightWord = () => {\n    dispatch(action.highlightWord(wordWithCheckbox.word))\n    const elements = document.getElementsByName('word')\n    for(const element of elements) {\n      element.style.color = \"\"\n      element.style.fontWeight = \"\"\n      element.style.fontStyle = \"\"\n    }\n    hightlight.current.style.color = \"black\"\n    hightlight.current.style.fontWeight = \"bold\"\n    hightlight.current.style.fontStyle = \"italic\"\n    \n  }\n\n  const handleSegmentLine = () => {\n    updateWordSegment(wordWithCheckbox.word, !isSegment)\n    setIsSegment(!isSegment)\n    setCheckboxes(pre => {\n      const wordIndex = pre.checkboxWords.findIndex(w => w.word.value === wordWithCheckbox.word.value)\n      if (wordIndex === -1) {\n        return pre\n      }\n      pre.checkboxWords[wordIndex].word.isSegment = !isSegment\n      return {\n        showAll: checkboxes.showAll,\n        isAllSelected: pre.isAllSelected,\n        checkboxWords: [...pre.checkboxWords]\n      }\n    })\n  }\n\n  const openModal = () => {\n    setModalOpen(true)\n  }\n\n  function handleCheckboxClick() {\n    const newState = !wordWithCheckbox.isChecked\n    const found = checkboxes.checkboxWords.findIndex(w => w.word.id === wordWithCheckbox.word.id)\n    if (found !== -1) {\n      checkboxes.checkboxWords[found].isChecked = newState\n      const allChecked = checkboxes.checkboxWords.every(w => w.isChecked)\n      setCheckboxes({\n        showAll: checkboxes.showAll,\n        isAllSelected: allChecked,\n        checkboxWords: [...checkboxes.checkboxWords]\n      })\n    }\n  }\n\n  return (\n    <div className={styles.wordContainer}>\n      <div className={classNames({[styles.wordText]: true, [styles.segment]: isSegment})} name={wordWithCheckbox.word.value} style={{backgroundColor: wordWithCheckbox.word.backgroundColor || \"\"}}>\n        <input checked={wordWithCheckbox.isChecked} onChange={handleCheckboxClick} type=\"checkbox\" name=\"word\" id=\"word\"/>\n        <label htmlFor=\"word\">\n          <a className={classNames({[baseStyles.tooltip]: !!wordWithCheckbox.word.lastVisit})} data-text={`Last visited @ ${getDateInString(wordWithCheckbox.word.lastVisit)}`} href={`https://www.google.com/search?q=${wordWithCheckbox.word.value}+definition`} name=\"word\" ref={hightlight} target=\"_blank\" rel=\"noopener noreferrer\">{wordWithCheckbox.word.value}</a>\n        </label>\n      </div>\n      <div>\n        <button onClick={handleHighlightWord} title=\"📓 Show meaning in the dictionary\"><span role=\"img\" aria-label=\"red textbook\">📕</span></button>\n        <button onClick={handleSegmentLine} title=\"🚧 Mark a segment line\"><span role=\"img\" aria-label=\"mark\">🚧</span></button>\n        {checkboxes.showAll ? \n        <button title=\"🧠 shows how many times have you memorized\"><span role=\"img\" aria-label=\"thumbs up\">{getWordMemeoryTimes(wordWithCheckbox.word)}</span></button>\n        :\n        <button onClick={handleToggle} title=\"🧠 Click on it if you can remember the word and it won't display after you click 7 times on different day\"><span role=\"img\" aria-label=\"thumbs up\">{confirm? '👍' : '🎯'}</span></button>\n        }\n        <button onClick={openModal} title=\"🖋 Modify the word\"><span role=\"img\" aria-label=\"gear\">✍️</span></button>\n        {modalOpen && <UpdateWordModal word={wordWithCheckbox.word} modalOpen={modalOpen} setModalOpen={setModalOpen}/>}\n        <button onClick={handleDelete} title=\"⚠️ Remove the word from the list\"><span role=\"img\" aria-label=\"trash bin\">🗑</span></button>\n      </div>\n    </div>\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport {DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\nimport Word from '../word/Word'\nimport {updateReorderedWords} from '../../utils'\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n}\n\nfunction Quote({quote, index, checkboxes, setCheckboxes}) {\n  return (\n    <Draggable draggableId={quote.word.id} index={index}>\n      {provided => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <Word wordWithCheckbox={quote} checkboxes={checkboxes} setCheckboxes={setCheckboxes}/>\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nconst QuoteList = React.memo(function QuoteList({quotes, checkboxes, setCheckboxes}) {\n  return quotes.map((quote, index) => (\n    <Quote quote={quote} index={index} checkboxes={checkboxes} setCheckboxes={setCheckboxes} key={quote.word.id}/>\n  ));\n});\n\nexport default function WordDragDrop({checkboxWords, checkboxes, setCheckboxes}) {\n  const [state, setState] = useState({quotes: checkboxWords});\n\n  useEffect(() => {\n    setState({quotes: checkboxWords})\n  }, [checkboxWords])\n\n  function onDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const quotes = reorder(\n      state.quotes,\n      result.source.index,\n      result.destination.index\n    );\n\n    setState({quotes});\n    updateReorderedWords(quotes.map(q => q.word))\n    setCheckboxes(pre => {\n      return {\n        showAll: checkboxes.showAll,\n        isAllSelected: pre.isAllSelected,\n        checkboxWords: [...quotes]\n      }\n    })\n }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"list\">\n        {provided => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            <QuoteList quotes={state.quotes} checkboxes={checkboxes} setCheckboxes={setCheckboxes} />\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n","import React, { useState, useEffect } from 'react'\nimport Modal from 'react-modal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport className from 'classnames'\nimport action from '../../store/actions'\nimport { getCollections, getCurrentCollection, moveWordsToCollection } from '../../utils'\nimport styles from './Word.module.css'\n\nexport default function MoveWordsModal({modalOpen, setModalOpen, checkboxes, setCheckboxes}) {\n  let subtitle\n  const dispatch = useDispatch()\n  const [selectCollection, setSelectCollection] = useState('')\n  const [collections, setCollections] = useState([getCurrentCollection()])\n  const collectionState = useSelector(state => state.collection)\n\n  useEffect(() => {\n    setCollections(getCollections())\n  }, [collectionState])\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00'\n  }\n \n  function closeModal() {\n    setModalOpen(false)\n  }\n\n  function handleSelectCollection (event) {\n    setSelectCollection(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    const targetCollectionId = event.target[0].value\n    const currentCollectionId = checkboxes.checkboxWords[0].word.collectionId\n    if (currentCollectionId === targetCollectionId) {\n      return\n    }\n    const movingWords = checkboxes.checkboxWords.filter(cw => cw.isChecked).map(cw => cw.word)\n    \n    moveWordsToCollection(movingWords, targetCollectionId)\n    const leftWord = checkboxes.checkboxWords.filter(cw => !cw.isChecked)\n    dispatch(action.decreaseCollectionWordCount(movingWords.length))\n    dispatch(action.updateTotalWordCount())\n    setCheckboxes({\n      isAllSelected: checkboxes.isAllSelected,\n      checkboxWords: leftWord,\n    })\n    closeModal()\n  }\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      ariaHideApp={false}\n      className={styles.modalContainer}\n      contentLabel=\"Move Words\"\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <h2 ref={_subtitle => (subtitle = _subtitle)}>Edit your word:</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"moveWord\">Moving below words to another collection <span role=\"img\" aria-label=\"writing hand\">✍️</span>:</label>\n        <div className={styles.moveWord}>{checkboxes.checkboxWords.filter(cw => cw.isChecked).map(cw => cw.word.value).join(', ')}</div>\n        <select name=\"collections\" id=\"collections\" onChange={handleSelectCollection} value={selectCollection}>\n          {collections && collections.length > 0 && collections.map(c => <option key={c.id} value={c.id}>{c.name}</option>)}\n        </select>\n        <input className={className(styles.rightSubmit, styles.pointButton)} type=\"submit\" value=\"Update\"/>\n      </form>\n    </Modal>\n  )\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { TwitterPicker } from 'react-color'\nimport action from '../../store/actions'\nimport styles from './Word.module.css'\nimport MoveWordsModal from './MoveWordsModal';\nimport { deleteWordsFromLocalStorage, getTodayWordsByCollectionId, getWordsByCollectionId, shuffleArray, updateWordsBackgroundColor } from '../../utils';\n\nexport default function SelectAll({collectionId, checkboxes, setCheckboxes}) {\n  const [currentCollectionId, setCurrentCollectionId] = useState('')\n  const [modalOpen, setModalOpen] = useState(false)\n  const [openPalette, setOpenPalette] = useState(false)\n  const [isAllWords, setIsAllWords] = useState(false)\n  const [color, setColor] = useState('#fff')\n  const dispatch = useDispatch()\n\n  if (currentCollectionId !== collectionId) {\n    setCurrentCollectionId(collectionId)\n    setIsAllWords(false)\n  }\n\n  function openModal() {\n    const moveWords = checkboxes.checkboxWords.filter(w => w.isChecked)\n    const moveCount = moveWords.length\n    if (moveCount > 0) {\n      setModalOpen(true)\n    }\n  }\n\n  function handleChange() {\n    const newState = !checkboxes.isAllSelected\n    setCheckboxes({\n      isAllSelected: newState,\n      checkboxWords: checkboxes.checkboxWords.map(cw => ({word: cw.word, isChecked: newState}))\n    })\n  }\n\n  function handleDelete() {\n    const deleteWords = checkboxes.checkboxWords.filter(w => w.isChecked)\n    const deleteCount = deleteWords.length\n    if (deleteCount > 0) {\n      if (window.confirm(`⚠️ Are you sure you want to delete the word(s):\\n${deleteWords.map(c => c.word.value + '\\n').join(\"\")}`)) {\n        const words = deleteWords.map(c => c.word)\n        deleteWordsFromLocalStorage(words)\n        dispatch(action.deleteWords(words))\n        dispatch(action.decreaseTotalWordCount(deleteCount))\n        dispatch(action.decreaseCollectionWordCount(deleteCount))\n      }\n    }\n  }\n\n  function handleAllWords() {\n    const toggle = !isAllWords\n    setIsAllWords(toggle)\n    let words\n    if (toggle) {\n      words = getWordsByCollectionId(currentCollectionId)\n    } else {\n      words = getTodayWordsByCollectionId(currentCollectionId)\n    }\n    setCheckboxes({\n      isAllSelected: false,\n      checkboxWords: words.map(w => ({isChecked: false, word: w})),\n      showAll: toggle\n    })\n  }\n\n  function handleShuffle() {\n    const checkboxWords = shuffleArray(checkboxes.checkboxWords)\n    setCheckboxes({\n      isAllSelected: checkboxWords.isAllSelected,\n      checkboxWords\n    })\n  }\n\n  function handlePalette() {\n    setOpenPalette(true)\n  }\n\n  function cancelColorPicker() {\n    setOpenPalette(false)\n  }\n\n  function confirmColorPicker() {\n    setOpenPalette(false)\n    updateWordsBackgroundColor(checkboxes.checkboxWords.filter(cw => cw.isChecked).map(cw => cw.word), color)\n    setCheckboxes({\n      isAllSelected: checkboxes.isAllSelected,\n      checkboxWords: checkboxes.checkboxWords.map(cw => {\n        if(cw.isChecked) {\n          cw.word.backgroundColor = color\n        }\n        return cw\n      })\n    })\n  }\n  \n  function resetColorPicker() {\n    setOpenPalette(false)\n    updateWordsBackgroundColor(checkboxes.checkboxWords.filter(cw => cw.isChecked).map(cw => cw.word), undefined)\n    setCheckboxes({\n      isAllSelected: checkboxes.isAllSelected,\n      checkboxWords: checkboxes.checkboxWords.map(cw => {\n        if(cw.isChecked) {\n          cw.word.backgroundColor = undefined\n        }\n        return cw\n      })\n    })\n  }\n  \n  function changeColor(color) {\n    setColor(color.hex)\n  }\n\n  function handleGoogleSearch() {\n    const searchingWords = checkboxes.checkboxWords.filter(w => w.isChecked)\n    if(searchingWords.length > 5) {\n      if (!window.confirm(`👻 This will open ${searchingWords.length} new tabs to explain words via Google.\\n\\nAre you sure you want to open all of them?`)) {\n        return\n      }\n    }\n    searchingWords.forEach(w => {\n      const newWindow = window.open(`https://www.google.com/search?q=${w.word.value}+definition`, w.word.value, 'noopener,noreferrer')\n      if (newWindow) {\n        newWindow.opener = null\n      }\n    })\n  }\n\n  return (\n    <div className={styles.wordContainer}>\n      <div className={styles.wordText}>\n        <input type=\"checkbox\" checked={checkboxes.isAllSelected} onChange={handleChange} name=\"all\" id=\"all\"/>\n        <label className={styles.thick} htmlFor=\"all\">Select All</label>\n      </div>\n      <div>\n      {openPalette && \n        (\n          <div className={styles.colorPickerContainer} >\n            <TwitterPicker color={color} onChangeComplete={changeColor} />\n            <div className={styles.threeColumns}>\n              <button className={styles.pointButton} onClick={cancelColorPicker}>Cancel</button>\n              <button className={styles.pointButton} onClick={resetColorPicker}>Reset</button>\n              <button className={styles.pointButton} onClick={confirmColorPicker}>Confirm</button>\n            </div>\n          </div>\n        )}\n        <button onClick={handleAllWords} title=\"🎛 Toggle to show all words\"><span role=\"img\" aria-label=\"toggle words\">{isAllWords? '🔑' : '🔒'}</span></button>\n        <button onClick={handlePalette} title=\"🎨 Change color for selected words from the collection\"><span role=\"img\" aria-label=\"palette\">🎨</span></button>\n        <button onClick={handleGoogleSearch} title=\"🌏 Explain selected words by Google in new tab from the collection\"><span role=\"img\" aria-label=\"google search\">🌐</span></button>\n        <button onClick={handleShuffle} title=\"🔄 Shuffle all words from the collection\"><span role=\"img\" aria-label=\"shuffle bin\">🔀</span></button>\n        <button onClick={openModal} title=\"🖋 Move selected words to another collection\"><span role=\"img\" aria-label=\"gear\">✍️</span></button>\n        <button onClick={handleDelete} title=\"⚠️ Remove selected word from the collection\"><span role=\"img\" aria-label=\"trash bin\">🗑</span></button>\n        {modalOpen && <MoveWordsModal modalOpen={modalOpen} setModalOpen={setModalOpen} checkboxes={checkboxes} setCheckboxes={setCheckboxes} />}\n      </div>\n    </div>\n  )\n}\n","import React, { useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport action from '../../store/actions'\nimport styles from './Word.module.css'\n\nexport default function WordRecall({word}) {\n  const dispatch = useDispatch()\n\n  const hightlight = useRef('');\n\n  const handleHighlightWord = () => {\n    dispatch(action.highlightWord(word))\n    const elements = document.getElementsByClassName(styles.wordText)\n    for(const element of elements) {\n      element.style.backgroundColor = \"\"\n    }\n    hightlight.current.style.backgroundColor = \"yellow\"\n  }\n\n  return (\n    <div className={styles.wordContainer}>\n      <div className={styles.wordText} ref={hightlight} style={{backgroundColor: word.backgroundColor || \"\"}}>\n        <a href={`https://www.google.com/search?q=${word.value}+definition`} target=\"_blank\" rel=\"noopener noreferrer\">{word.value}</a>\n      </div>\n      <div>\n        <button onClick={handleHighlightWord} title=\"📓 Show meaning in the dictionary\"><span role=\"img\" aria-label=\"red textbook\">📕</span></button>\n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { getTodayWordsByCollectionId, deleteWordsFromLocalStorage, getRecallWords, getWordsByCollectionId } from '../../utils'\nimport {DELETE_COLLECTION} from '../../const'\nimport WordDragDrop from './WordDragDrop'\nimport SelectAll from '../word/SelectAll'\nimport styles from './Word.module.css'\nimport WordRecall from './WordRecall'\n\nfunction checkIsAllSelected(checkboxWords) {\n  return checkboxWords.every(w => w.isChecked)\n}\n\nexport default function WordList({ setHighlightWord }) {\n  const wordState = useSelector(state => state.word)\n  const collectionState = useSelector(state => state.collection)\n  const currentCollection = useSelector(state => state.currentCollection)\n  const isInRecall = useSelector(state => state.recall)\n  const [checkboxes, setCheckboxes] = useState(\n    {isAllSelected: false, checkboxWords: getTodayWordsByCollectionId(currentCollection.id).map(w => ({word: w, isChecked:false}))})\n\n  const hasWordsInCollection = getWordsByCollectionId(currentCollection.id).length > 0\n\n  useEffect(() => {\n    const words = getTodayWordsByCollectionId(currentCollection.id)\n    setCheckboxes({isAllSelected: false, checkboxWords: words.map(w => ({word: w, isChecked:false}))})\n  }, [currentCollection])\n\n  useEffect(() => {\n    if (collectionState.type === DELETE_COLLECTION && currentCollection.id === 'default') {\n      setCheckboxes(prevCheckboxes => {\n        const words = getTodayWordsByCollectionId(currentCollection.id)\n        const wordsMovedToDefault = words.filter(w => !prevCheckboxes.checkboxWords.some(prev => prev.word.value === w.value))\n        if(wordsMovedToDefault.length > 0) {\n          const wordsMovedToDefaultWithCheckbox = wordsMovedToDefault.map(w => ({word: w, isChecked:false}))\n          return {\n            isAllSelected: false,\n            checkboxWords: [...prevCheckboxes.checkboxWords, ...wordsMovedToDefaultWithCheckbox]          \n          }\n        }\n        return prevCheckboxes\n      })\n    }\n  }, [collectionState, currentCollection.id])\n\n  useEffect(() => {\n    setCheckboxes(prevCheckboxes => {\n      const found = prevCheckboxes.checkboxWords.find(c => c.word.value === wordState.addWord.value)\n      if (found) {\n        return prevCheckboxes\n      }\n      return {\n        isAllSelected: false,\n        checkboxWords: [{word: wordState.addWord, isChecked: false}, ...prevCheckboxes.checkboxWords]\n      }\n    })\n  }, [wordState.addWord])\n\n  useEffect(() => {\n    deleteWordsFromLocalStorage([wordState.deleteWord])\n    setCheckboxes(prevCheckboxes => {\n      const left = prevCheckboxes.checkboxWords.filter(w => w.word.value !== wordState.deleteWord.value)\n      return {\n        isAllSelected: checkIsAllSelected(left),\n        checkboxWords: left\n      }\n    })\n  }, [wordState.deleteWord])\n\n  useEffect(() => {\n    deleteWordsFromLocalStorage(wordState.deleteWords)\n    setCheckboxes(prevCheckboxes => {\n      const left = prevCheckboxes.checkboxWords.filter(cw => !wordState.deleteWords.some(dw => dw.value === cw.word.value))\n      return {\n        isAllSelected: checkIsAllSelected(left),\n        checkboxWords: left\n      }\n    })\n  }, [wordState.deleteWords])\n\n  useEffect(() => {\n    if (wordState.updateWord && wordState.updateWord.value) {\n      setCheckboxes(prevCheckboxWords => {\n        const foundCheckboxWord = prevCheckboxWords.checkboxWords.find(w => w.word.id === wordState.updateWord.id)\n        let needToMoveCollection = false\n        if (foundCheckboxWord) {\n          foundCheckboxWord.word.value = wordState.updateWord.value\n          if (foundCheckboxWord.word.collectionId !== wordState.updateWord.collectionId) {\n            needToMoveCollection = true\n          }\n        }\n        \n        if (needToMoveCollection) {\n          const left = prevCheckboxWords.checkboxWords.filter(w => w.word.id !== wordState.updateWord.id)\n          return {\n            isAllSelected: checkIsAllSelected(left),\n            checkboxWords: left\n          }\n        }\n        \n        return {\n          isAllSelected: prevCheckboxWords.isAllSelected,\n          checkboxWords: [...prevCheckboxWords.checkboxWords]\n        }\n      })\n    }\n  }, [wordState.updateWord])\n\n  useEffect(() => {\n    setHighlightWord(wordState.highlightWord.value)\n  }, [setHighlightWord, wordState.highlightWord])\n\n  return (\n    <div>\n      { isInRecall ?\n          getRecallWords().length === 0 ?\n            <p><span role=\"img\" aria-label=\"grinning\">😅</span> There is no word to recall</p> :\n              <ul className={styles.wordList}>\n                {getRecallWords().map(word =>\n                  word.value && \n                  <li key={word.id}>\n                    <WordRecall word={word} />\n                  </li>)}\n              </ul>\n          :\n          !hasWordsInCollection ?\n              <p><span role=\"img\" aria-label=\"grinning\">😅</span> There is no word in this collection: <em>{currentCollection.name}</em></p> :\n              <>\n                <SelectAll collectionId={currentCollection.id} checkboxes={checkboxes} setCheckboxes={setCheckboxes} />\n                <div className={styles.wordList}>\n                  <WordDragDrop checkboxWords={checkboxes.checkboxWords} checkboxes={checkboxes} setCheckboxes={setCheckboxes}/>\n                </div>\n                {/* <ul className={styles.wordList}>\n                  {checkboxes.checkboxWords.map(wordWithCheckbox =>\n                    wordWithCheckbox.word.value && \n                    <li key={wordWithCheckbox.word.id}>\n                      <Word wordWithCheckbox={wordWithCheckbox} checkboxes={checkboxes} setCheckboxes={setCheckboxes}/>\n                    </li>)}\n                  <li key=\"addWordInline\">\n                    <AddWordInline />\n                  </li>\n                </ul> */}\n              </>\n      }\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport styles from './Dictionary.module.css'\n\nconst Dictionary = ( {highlightWord} ) => {\n  const [dictionary, setDictionary] = useState('Merriam')\n\n  function handleSelectDict(event) {\n    setDictionary(event.target.value)\n  }\n\n  return (\n    <div className={styles.dictionaryWrapper}>\n      <div>\n        <button className={styles.squareButton} value=\"Merriam\" id=\"Merriam\" onClick={handleSelectDict}>Merriam</button>\n        <button className={styles.squareButton} value=\"Dictionary\" id=\"Dictionary\" onClick={handleSelectDict}>Dictionary</button>\n        <button className={styles.squareButton} value=\"Cambridge\" id=\"Cambridge\" onClick={handleSelectDict}>Cambridge</button>\n        <button className={styles.squareButton} value=\"Synonyms\" id=\"Synonyms\" onClick={handleSelectDict}>SYN</button>\n        <button className={styles.squareButton} value=\"Antonyms\" id=\"Antonyms\" onClick={handleSelectDict}>ANT</button>\n      </div>\n      {dictionary === 'Merriam' && <iframe src={`https://www.merriam-webster.com/dictionary/${highlightWord}`} title=\"Merriam\"></iframe>}\n      {dictionary === 'Dictionary' && <iframe src={`https://www.dictionary.com/browse/${highlightWord}`} title=\"Dictionary\"></iframe>}\n      {dictionary === 'Cambridge' && <iframe src={`https://dictionary.cambridge.org/dictionary/english/${highlightWord}`} title=\"Cambridge\"></iframe>}\n      {dictionary === 'Synonyms' && <iframe src={`https://www.wordhippo.com/what-is/another-word-for/${highlightWord}.html`} title=\"Synonyms\"></iframe>}\n      {dictionary === 'Antonyms' && <iframe src={`https://www.wordhippo.com/what-is/the-opposite-of/${highlightWord}.html`} title=\"Antonyms\"></iframe>}\n    </div>\n  )\n}\nexport default Dictionary","import React, { useState } from 'react'\nimport styles from './Content.module.css'\nimport WordList from '../word/WordList'\nimport Dictionary from '../dictionary/Dictionary'\n\nexport default function Content() {\n  const [highlightWord, setHighlightWord] = useState()\n\n  return (\n    <div className={styles.contentContainer}>\n      <WordList setHighlightWord={setHighlightWord}/>\n      <Dictionary highlightWord={highlightWord}/>\n    </div>\n  )\n}\n","const idoms = [\n  { idiom: \"A blessing in disguise\", meanging: \"a good thing that seemed bad at first\", usage: \"as part of a sentence\"},\n  { idiom: \"A dime a dozen\", meanging: \"Something common\", usage: \"as part of a sentence\"},\n  { idiom: \"Beat around the bush\", meanging: \"Avoid saying what you mean, usually because it is uncomfortable\", usage: \"as part of a sentence\"},\n  { idiom: \"Better late than never\", meanging: \"Better to arrive late than not to come at all\", usage: \"by itself\"},\n  { idiom: \"Bite the bullet\", meanging: \"To get something over with because it is inevitable\", usage: \"as part of a sentence\"},\n  { idiom: \"Break a leg\", meanging: \"Good luck\", usage: \"by itself\"},\n  { idiom: \"Call it a day\", meanging: \"Stop working on something\", usage: \"as part of a sentence\"},\n  { idiom: \"Cut somebody some slack\", meanging: \"Don't be so critical\", usage: \"as part of a sentence\"},\n  { idiom: \"Cutting corners\", meanging: \"Doing something poorly in order to save time or money\", usage: \"as part of a sentence\"},\n  { idiom: \"Easy does it\", meanging: \"Slow down\", usage: \"by itself\"},\n  { idiom: \"Get out of hand\", meanging: \"Get out of control\", usage: \"as part of a sentence\"},\n  { idiom: \"Get something out of your system\", meanging: \"Do the thing you've been wanting to do so you can move on\", usage: \"as part of a sentence\"},\n  { idiom: \"Get your act together\", meanging: \"Work better or leave\", usage: \"by itself\"},\n  { idiom: \"Give someone the benefit of the doubt\", meanging: \"Trust what someone says\", usage: \"as part of a sentence\"},\n  { idiom: \"Go back to the drawing board\", meanging: \"Start over\", usage: \"as part of a sentence\"},\n  { idiom: \"Hang in there\", meanging: \"Don't give up\", usage: \"by itself\"},\n  { idiom: \"Hit the sack\", meanging: \"Go to sleep\", usage: \"as part of a sentence\"},\n  { idiom: \"It's not rocket science\", meanging: \"It's not complicated\", usage: \"by itself\"},\n  { idiom: \"Let someone off the hook\", meanging: \"To not hold someone responsible for something\", usage: \"as part of a sentence\"},\n  { idiom: \"Make a long story short\", meanging: \"Tell something briefly\", usage: \"as part of a sentence\"},\n  { idiom: \"Miss the boat\", meanging: \"It's too late\", usage: \"as part of a sentence\"},\n  { idiom: \"No pain, no gain\", meanging: \"You have to work for what you want\", usage: \"by itself\"},\n  { idiom: \"On the ball\", meanging: \"Doing a good job\", usage: \"as part of a sentence\"},\n  { idiom: \"Pull someone's leg\", meanging: \"To joke with someone\", usage: \"as part of a sentence\"},\n  { idiom: \"Pull yourself together\", meanging: \"Calm down\", usage: \"by itself\"},\n  { idiom: \"So far so good\", meanging: \"Things are going well so far\", usage: \"by itself\"},\n  { idiom: \"Speak of the devil\", meanging: \"The person we were just talking about showed up!\", usage: \"by itself\"},\n  { idiom: \"That's the last straw\", meanging: \"My patience has run out\", usage: \"by itself\"},\n  { idiom: \"The best of both worlds\", meanging: \"An ideal situation\", usage: \"as part of a sentence\"},\n  { idiom: \"Time flies when you're having fun\", meanging: \"You don't notice how long something lasts when it's fun\", usage: \"by itself\"},\n  { idiom: \"To get bent out of shape\", meanging: \"To get upset\", usage: \"as part of a sentence\"},\n  { idiom: \"To make matters worse\", meanging: \"Make a problem worse\", usage: \"as part of a sentence\"},\n  { idiom: \"Under the weather\", meanging: \"Sick\", usage: \"as part of a sentence\"},\n  { idiom: \"We'll cross that bridge when we come to it\", meanging: \"Let's not talk about that problem right now\", usage: \"by itself\"},\n  { idiom: \"Wrap your head around something\", meanging: \"Understand something complicated\", usage: \"as part of a sentence\"},\n  { idiom: \"You can say that again\", meanging: \"That's true, I agree\", usage: \"by itself\"},\n  { idiom: \"Your guess is as good as mine\", meanging: \"I have no idea\", usage: \"by itself\"},\n  { idiom: \"A bird in the hand is worth two in the bush\", meanging: \"What you have is worth more than what you might have later\", usage: \"by itself\"},\n  { idiom: \"A penny for your thoughts\", meanging: \"Tell me what you're thinking\", usage: \"by itself\"},\n  { idiom: \"A penny saved is a penny earned\", meanging: \"Money you save today you can spend later\", usage: \"by itself\"},\n  { idiom: \"A perfect storm\", meanging: \"the worst possible situation\", usage: \"as part of a sentence\"},\n  { idiom: \"A picture is worth 1000 words\", meanging: \"Better to show than tell\", usage: \"by itself\"},\n  { idiom: \"Actions speak louder than words\", meanging: \"Believe what people do and not what they say\", usage: \"by itself\"},\n  { idiom: \"Add insult to injury\", meanging: \"To make a bad situation worse\", usage: \"as part of a sentence\"},\n  { idiom: \"Barking up the wrong tree\", meanging: \"To be mistaken, to be looking for solutions in the wrong place\", usage: \"as part of a sentence\"},\n  { idiom: \"Birds of a feather flock together\", meanging: \"People who are alike are often friends (usually used negatively)\", usage: \"by itself\"},\n  { idiom: \"Bite off more than you can chew\", meanging: \"Take on a project that you cannot finish\", usage: \"as part of a sentence\"},\n  { idiom: \"Break the ice\", meanging: \"Make people feel more comfortable\", usage: \"as part of a sentence\"},\n  { idiom: \"By the skin of your teeth\", meanging: \"Just barely\", usage: \"as part of a sentence\"},\n  { idiom: \"Comparing apples to oranges\", meanging: \"Comparing two things that cannot be compared\", usage: \"as part of a sentence\"},\n  { idiom: \"Costs an arm and a leg\", meanging: \"Very expensive\", usage: \"as part of a sentence\"},\n  { idiom: \"Do something at the drop of a hat\", meanging: \"Do something without having planned beforehand\", usage: \"as part of a sentence\"},\n  { idiom: \"Do unto others as you would have them do unto you\", meanging: \"Treat people fairly. Also known as \\\"The Golden Rule\\\"\", usage: \"by itself\"},\n  { idiom: \"Don't count your chickens before they hatch\", meanging: \"Don't count on something good happening until it's happened.\", usage: \"by itself\"},\n  { idiom: \"Don't cry over spilt milk\", meanging: \"There's no reason to complain about something that can't be fixed\", usage: \"by itself\"},\n  { idiom: \"Don't give up your day job\", meanging: \"You're not very good at this\", usage: \"by itself\"},\n  { idiom: \"Don't put all your eggs in one basket\", meanging: \"What you're doing is too risky\", usage: \"by itself\"},\n  { idiom: \"Every cloud has a silver lining\", meanging: \"Good things come after bad things\", usage: \"by itself\"},\n  { idiom: \"Get a taste of your own medicine\", meanging: \"Get treated the way you've been treating others (negative)\", usage: \"as part of a sentence\"},\n  { idiom: \"Give someone the cold shoulder\", meanging: \"Ignore someone\", usage: \"as part of a sentence\"},\n  { idiom: \"Go on a wild goose chase\", meanging: \"To do something pointless\", usage: \"as part of a sentence\"},\n  { idiom: \"Good things come to those who wait\", meanging: \"Be patient\", usage: \"by itself\"},\n  { idiom: \"He has bigger fish to fry\", meanging: \"He has bigger things to take care of than what we are talking about now\", usage: \"by itself\"},\n  { idiom: \"He's a chip off the old block\", meanging: \"The son is like the father\", usage: \"by itself\"},\n  { idiom: \"Hit the nail on the head\", meanging: \"Get something exactly right\", usage: \"by itself\"},\n  { idiom: \"Ignorance is bliss\", meanging: \"You're better off not knowing\", usage: \"by itself\"},\n  { idiom: \"It ain't over till the fat lady sings\", meanging: \"This isn't over yet\", usage: \"by itself\"},\n  { idiom: \"It takes one to know one\", meanging: \"You're just as bad as I am\", usage: \"by itself\"},\n  { idiom: \"It's a piece of cake\", meanging: \"It's easy\", usage: \"by itself\"},\n  { idiom: \"It's raining cats and dogs\", meanging: \"It's raining hard\", usage: \"by itself\"},\n  { idiom: \"Kill two birds with one stone\", meanging: \"Get two things done with a single action\", usage: \"by itself\"},\n  { idiom: \"Let the cat out of the bag\", meanging: \"Give away a secret\", usage: \"as part of a sentence\"},\n  { idiom: \"Live and learn\", meanging: \"I made a mistake\", usage: \"by itself\"},\n  { idiom: \"Look before you leap\", meanging: \"Take only calculated risks\", usage: \"by itself\"},\n  { idiom: \"On thin ice\", meanging: \"On probation. If you make another mistake, there will be trouble.\", usage: \"as part of a sentence\"},\n  { idiom: \"Once in a blue moon\", meanging: \"Rarely\", usage: \"as part of a sentence\"},\n  { idiom: \"Play devil's advocate\", meanging: \"To argue the opposite, just for the sake of argument\", usage: \"as part of a sentence\"},\n  { idiom: \"Put something on ice\", meanging: \"Put a projet on hold\", usage: \"as part of a sentence\"},\n  { idiom: \"Rain on someone's parade\", meanging: \"To spoil something\", usage: \"as part of a sentence\"},\n  { idiom: \"Saving for a rainy day\", meanging: \"Saving money for later\", usage: \"as part of a sentence\"},\n  { idiom: \"Slow and steady wins the race\", meanging: \"Reliability is more important than speed\", usage: \"by itself\"},\n  { idiom: \"Spill the beans\", meanging: \"Give away a secret\", usage: \"as part of a sentence\"},\n  { idiom: \"Take a rain check\", meanging: \"Postpone a plan\", usage: \"as part of a sentence\"},\n  { idiom: \"Take it with a grain of salt\", meanging: \"Don’t take it too seriously\", usage: \"as part of a sentence\"},\n  { idiom: \"The ball is in your court\", meanging: \"It's your decision\", usage: \"by itself\"},\n  { idiom: \"The best thing since sliced bread\", meanging: \"A really good invention\", usage: \"as part of a sentence\"},\n  { idiom: \"The devil is in the details\", meanging: \"It looks good from a distance, but when you look closer, there are problems\", usage: \"by itself\"},\n  { idiom: \"The early bird gets the worm\", meanging: \"The first people who arrive will get the best stuff\", usage: \"by itself\"},\n  { idiom: \"The elephant in the room\", meanging: \"The big issue, the problem people are avoiding\", usage: \"as part of a sentence\"},\n  { idiom: \"The whole nine yards\", meanging: \"Everything, all the way.\", usage: \"as part of a sentence\"},\n  { idiom: \"There are other fish in the sea\", meanging: \"It's ok to miss this opportunity. Others will arise.\", usage: \"by itself\"},\n  { idiom: \"There's a method to his madness\", meanging: \"He seems crazy but actually he's clever\", usage: \"by itself\"},\n  { idiom: \"There's no such thing as a free lunch\", meanging: \"Nothing is entirely free\", usage: \"by itself\"},\n  { idiom: \"Throw caution to the wind\", meanging: \"Take a risk\", usage: \"as part of a sentence\"},\n  { idiom: \"You can't have your cake and eat it too\", meanging: \"You can't have everything\", usage: \"by itself\"},\n  { idiom: \"You can't judge a book by its cover\", meanging: \"This person or thing may look bad, but it's good inside\", usage: \"by itself\"},\n  { idiom: \"A little learning is a dangerous thing\", meanging: \"People who don't understand something fully are dangerous\", usage: \"by itself\"},\n  { idiom: \"A snowball effect\", meanging: \"Events have momentum and build upon each other\", usage: \"as part of a sentence\"},\n  { idiom: \"A snowball's chance in hell\", meanging: \"No chance at all\", usage: \"as part of a sentence\"},\n  { idiom: \"A stitch in time saves nine\", meanging: \"Fix the problem now because it will get worse later\", usage: \"by itself\"},\n  { idiom: \"A storm in a teacup\", meanging: \"A big fuss about a small problem\", usage: \"as part of a sentence\"},\n  { idiom: \"An apple a day keeps the doctor away\", meanging: \"Apples are good for you\", usage: \"by itself\"},\n  { idiom: \"An ounce of prevention is worth a pound of cure\", meanging: \"You can prevent a problem with little effort. Fixing it later is harder.\", usage: \"by itself\"},\n  { idiom: \"As right as rain\", meanging: \"Perfect\", usage: \"as part of a sentence\"},\n  { idiom: \"Bolt from the blue\", meanging: \"Something that happened without warning\", usage: \"as part of a sentence\"},\n  { idiom: \"Burn bridges\", meanging: \"Destroy relationships\", usage: \"as part of a sentence\"},\n  { idiom: \"Calm before the storm\", meanging: \"Something bad is coming, but right now it's calm\", usage: \"as part of a sentence\"},\n  { idiom: \"Come rain or shine\", meanging: \"No matter what\", usage: \"as part of a sentence\"},\n  { idiom: \"Curiosity killed the cat\", meanging: \"Stop asking questions\", usage: \"by itself\"},\n  { idiom: \"Cut the mustard\", meanging: \"Do a good job\", usage: \"as part of a sentence\"},\n  { idiom: \"Don't beat a dead horse\", meanging: \"Move on, this subject is over\", usage: \"by itself\"},\n  { idiom: \"Every dog has his day\", meanging: \"Everyone gets a chance at least once\", usage: \"by itself\"},\n  { idiom: \"Familiarity breeds contempt\", meanging: \"The better you know someone the less you like him\", usage: \"by itself\"},\n  { idiom: \"Fit as a fiddle\", meanging: \"In good health\", usage: \"as part of a sentence\"},\n  { idiom: \"Fortune favours the bold\", meanging: \"Take risks\", usage: \"by itself\"},\n  { idiom: \"Get a second wind\", meanging: \"Have more energy after having been tired\", usage: \"as part of a sentence\"},\n  { idiom: \"Get wind of something\", meanging: \"Hear news of something secret\", usage: \"as part of a sentence\"},\n  { idiom: \"Go down in flames\", meanging: \"Fail spectacularly\", usage: \"as part of a sentence\"},\n  { idiom: \"Haste makes waste\", meanging: \"You'll make mistakes if you rush through something\", usage: \"by itself\"},\n  { idiom: \"Have your head in the clouds\", meanging: \"Not be concentrating\", usage: \"as part of a sentence\"},\n  { idiom: \"He who laughs last laughs loudest\", meanging: \"I'll get you back for what you did\", usage: \"by itself\"},\n  { idiom: \"Hear something straight from the horse's mouth\", meanging: \"Hear something from the person involved\", usage: \"as part of a sentence\"},\n  { idiom: \"He's not playing with a full deck\", meanging: \"He's dumb\", usage: \"by itself\"},\n  { idiom: \"He's off his rocker\", meanging: \"He's crazy\", usage: \"by itself\"},\n  { idiom: \"He's sitting on the fence\", meanging: \"He can't make up his mind\", usage: \"by itself\"},\n  { idiom: \"It is a poor workman who blames his tools\", meanging: \"If you can't do the job, don't blame it on others\", usage: \"by itself\"},\n  { idiom: \"It is always darkest before the dawn\", meanging: \"Things are going to get better\", usage: \"by itself\"},\n  { idiom: \"It takes two to tango\", meanging: \"One person alone isn't responsible. Both people are involved.\", usage: \"by itself\"},\n  { idiom: \"Jump on the bandwagon\", meanging: \"Follow a trend, do what everyone else is doing\", usage: \"as part of a sentence\"},\n  { idiom: \"Know which way the wind is blowing\", meanging: \"Understand the situation (usually negative)\", usage: \"as part of a sentence\"},\n  { idiom: \"Leave no stone unturned\", meanging: \"Look everywhere\", usage: \"as part of a sentence\"},\n  { idiom: \"Let sleeping dogs lie\", meanging: \"Stop discussing an issue\", usage: \"as part of a sentence\"},\n  { idiom: \"Like riding a bicycle\", meanging: \"Something you never forget how to do\", usage: \"as part of a sentence\"},\n  { idiom: \"Like two peas in a pod\", meanging: \"They're always together\", usage: \"as part of a sentence\"},\n  { idiom: \"Make hay while the sun shines\", meanging: \"Take advantage of a good situation\", usage: \"as part of a sentence\"},\n  { idiom: \"On cloud nine\", meanging: \"Very happy\", usage: \"as part of a sentence\"},\n  { idiom: \"Once bitten, twice shy\", meanging: \"You're more cautious when you've been hurt before\", usage: \"by itself\"},\n  { idiom: \"Out of the frying pan and into the fire\", meanging: \"Things are going from bad to worse\", usage: \"by itself\"},\n  { idiom: \"Run like the wind\", meanging: \"Run fast\", usage: \"as part of a sentence\"},\n  { idiom: \"Shape up or ship out\", meanging: \"Work better or leave\", usage: \"by itself\"},\n  { idiom: \"Snowed under\", meanging: \"Busy\", usage: \"as part of a sentence\"},\n  { idiom: \"That ship has sailed\", meanging: \"It's too late\", usage: \"by itself\"},\n  { idiom: \"The pot calling the kettle black\", meanging: \"Someone criticizing someone else he is just as bad\", usage: \"as part of a sentence\"},\n  { idiom: \"There are clouds on the horizon\", meanging: \"Trouble is coming\", usage: \"by itself\"},\n  { idiom: \"Those who live in glass houses shouldn't throw stones\", meanging: \"People who are morally questionable shouldn't criticize others\", usage: \"by itself\"},\n  { idiom: \"Through thick and thin\", meanging: \"In good times and in bad times\", usage: \"as part of a sentence\"},\n  { idiom: \"Time is money\", meanging: \"Work quickly\", usage: \"by itself\"},\n  { idiom: \"Waste not, want not\", meanging: \"Don't waste things and you'll always have enough\", usage: \"by itself\"},\n  { idiom: \"We see eye to eye\", meanging: \"We agree\", usage: \"by itself\"},\n  { idiom: \"Weather the storm\", meanging: \"Go through something difficult\", usage: \"as part of a sentence\"},\n  { idiom: \"Well begun is half done\", meanging: \"Getting a good start is important\", usage: \"by itself\"},\n  { idiom: \"When it rains it pours\", meanging: \"Everything is going wrong at once\", usage: \"by itself\"},\n  { idiom: \"You can catch more flies with honey than you can with vinegar\", meanging: \"You'll get what you want by being nice\", usage: \"by itself\"},\n  { idiom: \"You can lead a horse to water, but you can't make him drink\", meanging: \"You can't force someone to make the right decision\", usage: \"by itself\"},\n  { idiom: \"You can't make an omelet without breaking some eggs\", meanging: \"There's always a cost to doing something\", usage: \"by itself\"},\n]\n\nexport default idoms","import React, { useState } from 'react'\nimport idoms from '../../data/idioms'\nimport styles from './Idiom.module.css'\n\nconst Idom = () => {\n  const randomIdomIndex = () => Math.floor(Math.random() * Math.floor(idoms.length))\n  const [idiom, setIdiom] = useState(idoms[randomIdomIndex()])\n  const [idiomText, setIdiomText] = useState('Learn Idiom')\n  const [isDisplay, setIsDisplay] = useState(false)\n\n  const toggleIdiom = () => {\n    if (idiomText === 'Learn Idiom') {\n      setIdiomText('Close Idiom')\n      setIsDisplay(true)\n    } else {\n      setIdiomText('Learn Idiom')\n      setIsDisplay(false)\n    }\n  }\n\n  const handleNext = () => {\n    setIdiom(idoms[randomIdomIndex()])\n  }\n\n  return (\n    <div className={styles.idiomWrapper}>\n      <button className={styles.idiomButton} onClick={toggleIdiom}><strong>{idiomText}</strong></button>\n      <button className={isDisplay ? styles.idiomButton : styles.hide} onClick={handleNext}><strong>New Idiom</strong></button>\n      <div className={isDisplay ? styles.ribbon : styles.hide}>\n        <p className={styles.idiomText}>Idiom: <span className=\"text-green\">{idiom.idiom}</span></p>\n        <p className={styles.idiomText}>Meaning: <span className=\"text-green\">{idiom.meanging}</span> 👈 used {idiom.usage}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Idom","import React from 'react'\nimport './App.css'\nimport Statistics from './components/statistics/Statistics'\nimport AddWord from './components/word/AddWord'\nimport AddCollection from './components/collection/AddCollection'\nimport ListCollection from './components/collection/ListCollection'\nimport Content from './components/content/Content'\nimport Idom from './components/idiom/idiom'\nimport styles from './App.module.css'\nimport baseStyles from './Base.module.css'\n\nexport default function App() {\n  return (\n    <div className={styles.appContainer}>\n      <Statistics />\n      <div className={baseStyles.scrollThenSticky}>\n        <div className={styles.preHeader}>\n          <Idom />\n          <AddWord />\n          <AddCollection />\n          <ListCollection />\n        </div>\n        <Content />\n      </div>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux'\nimport statistics from './statistic'\nimport word from './word'\nimport { collection, currentCollection } from './collection'\nimport recall from './recall'\n\nexport default combineReducers({\n  statistics,\n  word,\n  collection,\n  currentCollection,\n  recall\n})","import { getCurrentCollectionWordCount, getTotalWordCount} from '../../utils'\nimport {\n  SET_COLLECTION_WORD_COUNT,\n  INCREASE_TOTAL_WORD_COUNT,\n  UPDATE_TOTAL_WORD_COUNT,\n  DECREASE_TOTAL_WORD_COUNT,\n  INCREASE_COLLECTION_WORD_COUNT,\n  UPDATE_CURRENT_COLLECTION_WORD_COUNT,\n  DECREASE_COLLECTION_WORD_COUNT } from '../../const'\n\nexport default function statistics (\n  state = {\n        collectionWordCount: getCurrentCollectionWordCount(),\n        totalwordCount: getTotalWordCount()},\n    action) {\n  switch(action.type) {\n    case INCREASE_COLLECTION_WORD_COUNT:\n      return {\n        ...state,\n        collectionWordCount: state.collectionWordCount + action.payload\n      }\n    case DECREASE_COLLECTION_WORD_COUNT:\n      return {\n        ...state,\n        collectionWordCount: state.collectionWordCount - action.payload\n      }\n    case UPDATE_CURRENT_COLLECTION_WORD_COUNT:\n      return {\n        ...state,\n        collectionWordCount: getCurrentCollectionWordCount()\n      }\n    case SET_COLLECTION_WORD_COUNT:\n      return {\n        ...state,\n        collectionWordCount: action.payload\n      }   \n    case INCREASE_TOTAL_WORD_COUNT:\n      return {\n        ...state,\n        totalwordCount: state.totalwordCount + action.payload\n      }    \n    case DECREASE_TOTAL_WORD_COUNT:\n      return {\n        ...state,\n        totalwordCount: state.totalwordCount - action.payload\n      }\n    case UPDATE_TOTAL_WORD_COUNT:\n      return {\n        ...state,\n        totalwordCount: getTotalWordCount()\n      }\n      default:\n        return state\n  }\n}\n","import {ADD_WORD, DELETE_WORD, DELETE_WORDS, UPDATE_WORD, HIGHLIGHT_WORD} from '../../const'\n\nexport default function word(\n  state = {\n    addWord: {},\n    deleteWord: {},\n    deleteWords: [],\n    updateWord: {},\n    highlightWord: {}\n  }, action) {\n  switch(action.type) {\n    case ADD_WORD:\n      return {\n        ...state,\n        addWord: action.payload\n      }\n    case DELETE_WORD:\n      return {\n        ...state,\n        deleteWord: action.payload\n      }\n    case DELETE_WORDS:\n      return {\n        ...state,\n        deleteWords: action.payload\n      }\n    case UPDATE_WORD:\n      return {\n        ...state,\n        updateWord: action.payload\n      }\n    case HIGHLIGHT_WORD:\n      return {\n        ...state,\n        highlightWord: action.payload\n      }\n    default:\n      return state\n  }\n}","import {ADD_COLLECTION, DELETE_COLLECTION, UPDATE_COLLECTION, CHOOSE_COLLECTION} from '../../const'\nimport { getCurrentCollection } from '../../utils'\n\nexport function collection(state = {type:'', collection: getCurrentCollection()}, action) {\n  switch(action.type) {\n    case ADD_COLLECTION:\n      return {\n        type: action.type,\n        collection: action.payload\n      }\n    case DELETE_COLLECTION:\n      return {\n        type: action.type,\n        collection: action.payload\n      }\n    case UPDATE_COLLECTION:\n      return {\n        type: action.type,\n        collection: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport function currentCollection(state = getCurrentCollection(), action) {\n  switch(action.type) {\n    case CHOOSE_COLLECTION:\n      return {...action.payload}\n    default:\n      return state\n  }\n}","import {DISPLAY_RECALL_WORDS, HIDE_RECALL_WORDS } from '../../const'\n\nexport default function recall(state = false, action) {\n  switch (action.type) {\n    case DISPLAY_RECALL_WORDS:\n      return true\n    case HIDE_RECALL_WORDS:\n      return false\n    default:\n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport allReducers from './store/reducers';\nimport { initStorage } from './utils'\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\nconst store = createStore(allReducers, devTools)\n\ninitStorage()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wordContainer\":\"Word_wordContainer__14k8l\",\"thick\":\"Word_thick__3hcIy\",\"segment\":\"Word_segment__2u03J\",\"threeColumns\":\"Word_threeColumns__18UwF\",\"wordList\":\"Word_wordList__1cODo\",\"wordText\":\"Word_wordText__2k8h7\",\"modalContainer\":\"Word_modalContainer__5yvrP\",\"inputUpdate\":\"Word_inputUpdate__13xMb\",\"moveWord\":\"Word_moveWord__TeIOj\",\"rightSubmit\":\"Word_rightSubmit__3WOY8\",\"pointButton\":\"Word_pointButton__gTLhz\",\"toRight\":\"Word_toRight__U8AHv\",\"padRight\":\"Word_padRight__2K4mT\",\"colorPickerContainer\":\"Word_colorPickerContainer__3YzCQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__3jRx1\",\"preHeader\":\"App_preHeader__1gTn8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollThenSticky\":\"Base_scrollThenSticky__2OP9Z\",\"scrollThenStickyBottom\":\"Base_scrollThenStickyBottom__CBGhX\",\"newItemContainer\":\"Base_newItemContainer__385gi\",\"inputText\":\"Base_inputText__3Imda\",\"roundButton\":\"Base_roundButton__2s6t4\",\"tooltip\":\"Base_tooltip__3h9rH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"Content_contentContainer__6r8q4\"};"],"sourceRoot":""}